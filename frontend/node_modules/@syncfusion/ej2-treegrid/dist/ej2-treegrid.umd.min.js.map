{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !this.parent.loadChildOnDemand) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length))) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]]) {\n                        isEqual = false;\n                        break;\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @blazorType void\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findnextRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row_1 = summaryElement.children[cellIndex];\n                        addClass([row_1], 'e-focused');\n                        addClass([row_1], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findPreviousRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rIndex = summaryElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns') {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop]);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            this.columnModel.push(new Column(treeGridColumn));\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columns[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columns[this.treeColumnIndex].template)) {\n            temp = this.columns[this.treeColumnIndex].template;\n            field = this.columns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                // eslint-disable-next-line max-len\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 : args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord.parentItem;\n                            draggedRecord.level = 0;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                                draggedRecord.parentItem = droppedRecord.parentItem;\n                                draggedRecord.level = droppedRecord.level;\n                            }\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop]) {\n            this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n        if (args.e.requestType === 'save' && getValue('action', args.e) === 'add'\n            && this.parent.editSettings.newRowPosition === 'Child') {\n            args.result[0].level += 1;\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","isRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","templateFn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","rowSelecting","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","events.collapsed","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","this_1","pageingDetails","propname","skip","size","pageSize","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","toSelectRowOnContextOpen","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"shBAQA,SAAgBA,EAAaC,GACzB,GAAIA,EAAOC,sBAAsBC,cAAa,CAC1C,IAAIC,EAAUH,EAAOC,WAAWE,QAChC,OAAQA,aAAmBC,gBACtBD,aAAmBE,iBAAmBF,aAAmBG,oBACzDH,aAAmBI,gBAAiBJ,aAAmBK,aAEhE,OAAO,EAMX,SAAgBC,EAAgBT,GAC5B,SAAIA,EAAOC,YAAc,WAAYD,EAAOC,YAShD,SAAgBS,EAAiBV,GAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,EAGf,OAAO,EAMX,SAAgBC,EAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAUtF,SAAgBG,EAAkBC,GAG9B,IAAK,IAFDC,KAEKd,EAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAAK,CAChCkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,IAG3B,OAAOc,EASX,SAAgBM,EAAgB/B,EAAQgC,EAAQC,GAC5C,IAEIC,EAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,UAE5C,OAAoB,MAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,cAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,YACzCtC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IAiCnB,SAAgBC,EAAoBlB,GAChC,IAAIC,KACJ,GAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,SAEJ,IAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,IADDA,EAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,MAIlE,OAAOc,EAMX,SAAgBqB,EAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,IAAI+C,EAAK/C,EAAOC,WAChB,OAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAMX,SAAgBC,EAAYC,GAIxB,IAAK,IAFDC,EACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,KACA,IAAK,IAAIE,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,IAEjCD,EAAOtB,KAAKqB,GAEhB,OAAOC,EAMX,SAAgBE,EAAaC,GAQzB,cAPOA,EAAMZ,uBACNY,EAAMX,oBACNW,EAAMC,aACND,EAAMnB,kBACNmB,EAAME,aACNF,EAAMG,gBACNH,EAAMjB,SACNiB,EAQX,SAAgBlB,EAAcrC,EAAQuD,EAAOI,GACzC,GAAIA,EAAe,CAEf,OAAO3D,EAAe,yBAAEuD,GAIxB,OAAOvD,EAAS,mBAAEuD,GAO1B,SAAgBK,EAASC,GACrB,IAAIC,EAAQC,OAAOC,iBAAiBH,GACpC,MAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCtLjD,SAAgBC,EAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,IAGI/D,EACA0C,EAEAsB,EANApB,EAAQa,EAAQb,MAChBqB,EAASR,EAAQQ,OAMjBzD,EAAMkD,EAAQpD,KAAK4D,0BAA0B,GAC7CC,EAAWT,EAAQpE,sBAAsBC,cACzCmE,EAAQpE,WAAWA,WAAW8E,KAAOV,EAAQpE,WAC7C+E,KACAC,EAAe1B,EACf2B,GAAS,EAIb,GAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQpD,KAAKoE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAE9D,OAAU,CACxC,IAAI0E,EAyHZ,SAA0BnB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,IAAInB,EACA2B,GAAS,EACTM,EAAqBnB,EAAQpD,KAAKwE,wBAGtC,OAFAlC,EAAQmC,YAAWtB,EAAQb,OAC3BA,EAAQD,EAAaC,GACbc,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASc,QAAQrC,GACjB2B,GAAS,EACT,MACJ,IAAK,SACDJ,EAAShD,KAAKyB,GACd2B,GAAS,EACT,MACJ,IAAK,QAOG3B,EANCvC,oBAAkB0D,GAMXpB,EADRC,EAAQmC,YAAWF,EAAmBjB,EAAc,KAH5CjB,EADRC,EAAQmC,YAAWhB,IAOvB,MACJ,IAAK,QACL,IAAK,QACD,GAAK1D,oBAAkB0D,GAIlB,CACD,IAAImB,EAAcxB,EAAQpD,KAAK4D,0BAA0B,GACrDiB,EAAcN,EAAmBjB,GAOrChB,EAAQD,EALJC,GADCvC,oBAAkB8E,IAAgBA,EAAYD,KAAiBzB,EAAQb,MAAMsC,KAAmC,IAAnBrB,EACtFkB,YAAWI,GAGXJ,YAAWtB,EAAQb,QAI/Bc,EAAQgB,WAA2B,mBAAE3B,SAAWH,OAbhDA,EAAQD,EADRC,EAAQmC,YAAWhB,KAgBA,IAAnBF,IACAM,EAASc,QAAQrC,GACjB2B,GAAS,GAGrB,OAAS3B,MAAOA,EAAO2B,OAAQA,GA1Kda,CAAU3B,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAChGnB,EAAQgC,EAAOhC,MACf2B,EAASK,EAAOL,OAQpB,GANI3B,aAAiByC,MACjBhB,EAAe/B,EAAYM,GAG3ByB,EAAalD,KAAK4D,YAAWnC,KAE5B2B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,IAAIM,EAAI,EAAGA,EAAIjB,EAAanE,OAAQoF,IAAK,CACJ,iBAA1BjB,EAAaiB,GAAG9E,KACxB6D,EAAaiB,GAAKjB,EAAaiB,GAAG9E,IAEtC,IAAIS,EAAOoD,EAAaiB,GAAGvC,SAAW/B,OAAOC,KAAKoD,EAAaiB,GAAGvC,UAC9D/B,OAAOC,KAAKoD,EAAaiB,IAC7BtF,EAAImE,EAASjE,OAiFb,IAhFA,IAAIqF,EAAU,WACV,GAAIpB,EAASnE,GAAGQ,KAAS6D,EAAaiB,GAAG9E,GAAM,CAC3C,GAAe,WAAXyD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKvB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAI1B,OAAOwE,UAAUC,eAAeC,KAAKvB,EAASnE,GAAIiB,EAAKyB,MAAuC,SAA9BgB,EAAQc,aAAaC,OAChFpE,oBAAkB2D,IAAyD,IAAxCA,EAA2B,eAAE9D,QAClEe,EAAKyB,KAAOoB,GAAa,CAC5B,IAAI6B,EAAajE,EAAcgC,EAASW,EAAaiB,GAAG3D,UACxDwC,EAASnE,GAAGiB,EAAKyB,IAAM2B,EAAaiB,GAAGrE,EAAKyB,IACxCiD,GAAcA,EAAW5C,WACzB4C,EAAW5C,SAAS9B,EAAKyB,IAAMiD,EAAW1E,EAAKyB,IAAMyB,EAASnE,GAAGiB,EAAKyB,WAKjF,GAAe,QAAXuB,GAA+B,cAAXA,EAAwB,CACjD,IAAIpB,OAAQ,EACgC,UAAxCa,EAAQc,aAAaQ,eACjBrB,GACAW,EAAavB,SAASW,EAAQkC,iBAAmBzB,EAASnE,GAAG0D,EAAQmC,WACrE1B,EAAS2B,OAAO9F,EAAI,EAAG,EAAGsE,EAAavB,YAGlC/B,OAAOwE,UAAUC,eAAeC,KAAKvB,EAASnE,GAAI0D,EAAQqC,gBAC3D5B,EAASnE,GAAG0D,EAAQqC,kBAExB5B,EAASnE,GAAG0D,EAAQqC,cAAc5E,KAAKmD,EAAavB,UACpDiD,EAAgBxF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAAS2B,OAAO9F,EAAI,EAAG,EAAGsE,EAAavB,UAClC1C,oBAAkBiE,EAAa7C,aAChCuE,EAAgBxF,EAAK2D,EAASnE,EAAI,GAAIiE,EAAQP,EAASC,EAAiBW,IAGtEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAAS2B,OAAO9F,EAAG,EAAGsE,EAAavB,UAC9B1C,oBAAkBiE,EAAa7C,aAChCuE,EAAgBxF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,EAAiBW,KANxEzB,EAAQ,EACRsB,EAAS2B,OAAOjD,EAAO,EAAGyB,EAAavB,WAS/C,MAAO,QApEP,IAAIkD,EAAgB9B,EAASnE,GAE7B,GADAmE,EAAS2B,OAAO9F,EAAG,GACf2D,EAAiB,CACjB,IAAKtD,oBAAkB4F,EAAcvC,EAAQkC,kBAKzC,IAAK,IAJDM,EAAaxC,EAAQyC,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAE3C,EAAQmC,aAAeI,EAAcvC,EAAQkC,mBACvD,GACC3D,EAAeiE,EAAaA,EAAWxC,EAAQqC,iBAC1CO,EAAIrE,EAAa/B,OAAS,EAAGoG,GAAK,EAAGA,IAC1C,GAAIrE,EAAaqE,GAAG5C,EAAQmC,aAAeI,EAAcvC,EAAQmC,WAAY,CACzE5D,EAAa6D,OAAOQ,EAAG,GAClBrE,EAAa/B,SACdgG,EAAWlE,iBAAkB,EAC7BgE,EAAgBxF,EAAK0F,EAAYjC,EAAQP,EAASC,IAEtD,MAIZ,MAAO,cAoDTtD,oBAAkB8D,EAASnE,GAAG0D,EAAQqC,gBACxCQ,EAAmBpC,EAASnE,GAAG0D,EAAQqC,cAAe1B,EAAaiB,GAAIrB,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,IAC5HkC,EAAgBxF,EAAK2D,EAASnE,GAAIiE,EAAQP,EAASC,IAIxD3D,KAAOA,GAAK,GAAG,CAElB,GAAgB,UADFuF,IAEV,QAiFpB,SAAgBgB,EAAmBtE,EAAcoC,EAAcJ,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,IAAI0C,GAAa,EACb9D,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAAS6D,EAAa7D,IACrCmD,GAAmB1B,EAAaS,GAAGgB,EAAQkC,mBAAqBvB,EAAaX,EAAQmC,WAAa,CACnG,GAAe,SAAX5B,EAAmB,CAGnB,IAAK,IAFDhD,EAAOD,OAAOC,KAAKoD,GACnBsB,EAAajE,EAAcgC,EAASW,EAAa1C,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIgB,OAAOwE,UAAUC,eAAeC,KAAKzD,EAAaS,GAAIzB,EAAKjB,MAAsC,SAA9B0D,EAAQc,aAAaC,MAAmBxD,EAAKjB,KAAO8D,KACvH6B,EAAW1E,EAAKjB,IAAM2F,EAAW5C,SAAS9B,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAMqE,EAAapD,EAAKjB,IAC3D,WAAnC0D,EAAQpD,KAAKkE,aAAaC,MAAmD,SAA9Bf,EAAQc,aAAaC,MAAiB,CAErFf,EAAQpD,KAAKoE,WAAqB,WAAE+B,aAAepC,EAAaxB,MAChEa,EAAQpD,KAAKoE,WAAqB,WAAEgC,sBAAsBrC,GAItE,MAEgB,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQkC,iBAAmB3D,EAAaS,GAAGgB,EAAQmC,WAChE5D,EAAa6D,OAAOpD,EAAI,EAAG,EAAG4B,GAC9B0B,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,KAGnEtD,OAAOwE,UAAUC,eAAeC,KAAKzD,EAAaS,GAAIgB,EAAQqC,gBAC/D9D,EAAaS,GAAGgB,EAAQqC,kBAE5B9D,EAAaS,GAAGgB,EAAQqC,cAAc5E,KAAKmD,EAAavB,UACxDiD,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1B/C,EAAa6D,OAAOpD,EAAG,EAAG4B,EAAavB,UAClC1C,oBAAkBiE,EAAa7C,aAChCuE,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,iBAC1B/C,EAAa6D,OAAOpD,EAAI,EAAG,EAAG4B,EAAavB,UACtC1C,oBAAkBiE,EAAa7C,aAChCuE,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,EAAiBW,KAKhFrC,EAAa6D,OAAOpD,EAAG,GAClBT,EAAa/B,SACdsG,GAAa,SAIfnG,oBAAkB4B,EAAaS,GAAGgB,EAAQqC,gBAC5CQ,EAAmBtE,EAAaS,GAAGgB,EAAQqC,cAAe1B,EAAcJ,EAAQzD,EAAKkD,EAASC,EAAiBW,EAAcR,IAC7HkC,EAAgBxF,EAAKyB,EAAaS,GAAIuB,EAAQP,EAASC,GAInE,OAAO6C,EAWX,SAAgBR,EAAgBxF,EAAKa,EAAQ4C,EAAQP,EAASC,EAAiBgD,GAC3E,GAA6C,UAAxCjD,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B5D,oBAAkBsG,EAAMlF,YAI7E,CACD,IACImF,EADAC,EAAiBnD,EAAQpD,KAAKwE,wBAalC,GAXA+B,EAAeC,IAAI,SAAUT,EAAGrG,GAASqG,EAAE7F,KAASa,EAAOb,KACvDoG,EAAU5G,KAGTK,oBAAkBuG,KACnBvF,EAASwF,EAAeD,IAExBlD,EAAQqD,sBAAwB1G,oBAAkBgB,KAAYhB,oBAAkBsG,KAChFtF,EAAS2F,WAAS,sBAAwBL,EAAMM,eAAgBvD,IAEpErC,EAAOW,iBAAkB,EACV,QAAXiC,GAA+B,cAAXA,EAAwB,CAC5C5C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrB0B,EAAQwD,aAAajH,QAAQC,QAAUG,oBAAkBsG,KACzDA,EAAQE,EAAeT,OAAO,SAAUC,GACpC,OAAIA,EAAEY,iBAAmB5F,EAAOM,SACrB0E,EAGA,QAInB,IAAIpE,EAAe0E,EAAQA,aAAiBtB,MAAQsB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,GACpD,UAAxClD,EAAQc,aAAaQ,iBAChBhE,OAAOwE,UAAUC,eAAeC,KAAKrE,EAAQ,gBAIzChB,oBAAkBsG,IAAUtF,EAAOb,KAASmG,EAAMnG,IACnDa,EAAOY,aAAad,KAAKwF,GAJ7BtF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAakF,QAAQlF,IAAwBZ,EAAOb,KAASmG,EAAMnG,IAC1Ea,EAAOY,aAAagD,QAAQhD,GAE5B0B,IACK3C,OAAOwE,UAAUC,eAAeC,KAAKrE,EAAQqC,EAAQqC,gBACtD1E,EAAOqC,EAAQqC,mBAEyC,IAAxD1E,EAAOqC,EAAQqC,cAAcoB,QAAQlF,IAAwBZ,EAAOb,KAASmG,EAAMnG,IACnFa,EAAOqC,EAAQqC,cAAcd,QAAQhD,KAQrD,IAAK,IAHDiD,EAAcxB,EAAQpD,KAAK4D,0BAA0B,GACrDkD,EAAO1D,EAAQpD,KAAKhB,sBAAsBC,cAC1CmE,EAAQpD,KAAKhB,WAAWA,WAAW8E,KAAOV,EAAQpD,KAAKhB,WAClDU,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAC7B,GAAIoH,EAAKpH,GAAGkF,KAAiB7D,EAAO6D,GAAc,CAC9CkC,EAAKpH,GAAKqB,EACV,MAGRqC,EAAQpD,KAAK+G,WAAW7G,EAAKa,GAC7B,IAAIiG,EAAM5D,EAAQ6D,cAAcX,GACE,UAA9BlD,EAAQc,aAAaC,OACrB6C,EAAM5D,EAAQ8D,UAAU9D,EAAQpD,KAAKmH,wBAAwBpG,EAAOb,MAExE,IAAIkH,OAAa,EAIjB,IAHIhE,EAAQiE,YAAcjE,EAAQkE,sBAC9BF,EAAahE,EAAQmE,qBAAqBjB,KAEzClD,EAAQqD,uBAAyB1G,oBAAkBiH,KAASjH,oBAAkBqH,GAAa,CAC5F,IAAII,EAAUpE,EAAQqE,gBAClBrE,EAAQsE,qBAAuBtE,EAAQuE,sBACvCH,GAAoB,GAExBpE,EAAQwE,aAAaC,YACjBf,KAAM/F,EAAQ+G,KAAMd,EAAIe,MAAMP,GAAWR,EAAIe,MAAMP,GAC7CJ,EAAWW,MAAMP,EAAUpE,EAAQkE,oBACzCU,OAAQ5E,EAAQpD,KAAKiI,aAAa7E,EAAQqE,iBAC1CS,YAAavE,SAjFsE,CAC1EvC,EAAcgC,EAASiD,EAAMlF,WAAWE,UAC9CM,aAAad,KAAKwF,ICpSrC,IAAI8B,EAAwB,WAqExB,OApEA,SAAgBC,GAOZC,KAAKC,cAAe,EAMpBD,KAAKE,QAMLF,KAAKG,mBAAoB,EAOzBH,KAAKI,iBAAkB,EAOvBJ,KAAKK,gBAAiB,EAOtBL,KAAKjI,gBAAiB,EAOtBiI,KAAKM,cAAe,EAOpBN,KAAKO,eAAgB,EAWrBP,KAAKvC,UACL+C,QAAMR,KAAMD,OCvEhBU,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAsC/D,OAxCAS,EAAUoB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUhF,UAAW,aAAS,GACjCqE,GACIc,cACDH,EAAUhF,UAAW,gBAAY,GACpCqE,GACIc,cACDH,EAAUhF,UAAW,aAAS,GACjCqE,GACIc,cACDH,EAAUhF,UAAW,iBAAa,GACrCqE,GACIc,cACDH,EAAUhF,UAAW,oBAAgB,GACxCqE,GACIc,cACDH,EAAUhF,UAAW,iBAAa,GACrCqE,GACIc,gBACDH,EAAUhF,UAAW,yBAAqB,GAC7CqE,GACIc,gBACDH,EAAUhF,UAAW,sBAAkB,GAC1CqE,GACIc,cACDH,EAAUhF,UAAW,YAAQ,GAChCqE,GACIc,cACDH,EAAUhF,UAAW,mBAAe,GACvCqE,GACIc,cACDH,EAAUhF,UAAW,WAAO,GAC/BqE,GACIc,cACDH,EAAUhF,UAAW,oBAAgB,GACjCgF,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KA0B/D,OA5BAS,EAAUyB,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAerF,UAAW,eAAW,GACxCqE,GACIc,WAAS,cACVE,EAAerF,UAAW,YAAQ,GACrCqE,GACIc,cACDE,EAAerF,UAAW,YAAQ,GACrCqE,GACIc,YAAS,IACVE,EAAerF,UAAW,2BAAuB,GACpDqE,GACIc,WAAS,OACVE,EAAerF,UAAW,0BAAsB,GACnDqE,GACIc,cACDE,EAAerF,UAAW,iBAAa,GAC1CqE,GACIc,YAAS,IACVE,EAAerF,UAAW,oBAAgB,GAC7CqE,GACIc,WAAS,WACVE,EAAerF,UAAW,qBAAiB,GACvCqF,GACTD,iBCpGExB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,EAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAK/D,OAPAS,EAAU2B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBvF,UAAW,gBAAY,GACpCuF,GACTH,iBChCExB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAoBxCsB,EAAU,oDACVC,EAAe,2CAMfC,GAAiB,EACjBC,EAAwB,SAAUV,GAElC,SAASU,EAAO9L,GAIZ,OAFA+L,OAAKC,OAAOC,UACJb,EAAO/E,KAAKiD,KAAMtJ,IAAWsJ,KAgFzC,OApFAS,EAAU+B,EAAQV,GAalBU,EAAO3F,UAAU+F,cAAgB,WAC7B,MAAO,UAEXJ,EAAO3F,UAAUgG,IAAM,SAAUC,EAAOC,GAC9BD,aAAiBpG,QACnBoG,GAASA,IAGb,IAAK,IADDE,EAAOF,EACFzL,EAAI,EAAGA,EAAI2L,EAAKzL,OAAQF,IAAK,CAClC,IAAI4L,EAAOC,cAAYF,EAAK3L,IACxB8L,EAAMF,EAAKG,MAAML,EAAM/C,KAAKtJ,QAChC,GAAIyM,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAM/C,KAAKtJ,OAAQyM,EAAIpD,SAC1DuD,EAAUA,EAAQE,QAAQ,UAAW,eAAeA,QAAQ,mBAAoB,IAAIA,QAAQ,aAAc,IACtGjB,GAA8B,2BAAZS,EAAK3L,KACvBiM,EAAUA,EAAQE,QAAQ,UAAW,mBACrCjB,GAAiB,GAErB,IAAIrI,EAAQoJ,EAAQ9E,QAAQ,SACxBiF,EAAUH,EAAQI,UAAUxJ,GAChB,mBAAZ8I,EAAK3L,GACLiM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,2BAAZW,EAAK3L,IAA+C,0BAAZ2L,EAAK3L,GAClDiM,EAAUA,EAAQE,QAAQC,EAASnB,EAAe,sCAEjC,qBAAZU,EAAK3L,GACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,SAE5B,mBAAZW,EAAK3L,GACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,6BAAZW,EAAK3L,GACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,mBAAZW,EAAK3L,KACViM,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,gCAEjC,+BAAZW,EAAK3L,GACAK,oBAAkBsI,KAAK2D,cAAiBjM,oBAAkBsI,KAAK2D,YAAYC,kBAE5EC,QAAQZ,EAAKa,SAASR,GAK1BO,QAAQZ,EAAKa,SAASR,MAKtCd,EAAO3F,UAAUkH,QAAU,SAAUjB,EAAOC,EAAMiB,GAC9ChE,KAAK2D,YAAcK,EACblB,aAAiBpG,QACnBoG,GAASA,IAEb,IAAIE,EAAOF,EACPkB,EAAS3E,sBAAwB2E,EAAS1M,QAAQmG,OAAO,SAAUkC,GAAU,OAAOA,EAAOsE,eAAiB1M,SAC5GgL,GAAiB,EACjBvC,KAAK6C,IAAI,yBAA0BE,IAEvC,IAAK,IAAI1L,EAAI,EAAGA,EAAI2L,EAAKzL,OAAQF,IAAK,CAClC,IAAI4L,EAAOiB,EAAgBlB,EAAK3L,IAC5B8L,EAAMF,EAAKG,MAAML,EAAMiB,GAC3B,GAAIb,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMiB,EAAUb,EAAIpD,SAEvD8D,QAAQZ,EAAKa,SAASR,MAI3Bd,GACTG,UAESuB,GAEPC,wBACInB,KAAM,yBACNc,QAAS,QACTV,MAAO,SAAUL,EAAMrM,GACnB,IAAI0N,GAAQf,SAAS,GAOrB,OANK3L,oBAAkBhB,EAAOwG,YAAcxF,oBAAkBhB,EAAO0G,eAC9D1F,oBAAkBhB,EAAOuG,mBAC1BvF,oBAAkBhB,EAAOwG,YAAcxF,oBAAkBhB,EAAOuG,kBACjEvF,oBAAkBhB,EAAOwG,aAAexF,oBAAkBhB,EAAOuG,oBAClEmH,GAAQf,SAAS,IAEde,GAEXb,gBAAiB,WACb,MAAOc,iRAIF/B,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCCrIrBgC,EAAe,eAIfC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAc,cAEdb,EAAkB,kBAElBc,EAAiB,iBAIjBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAkB,kBAIlB7L,EAAW,WAIX8L,EAAY,YAIZC,EAAe,eAEfC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAgB,iBAEhBC,EAAkB,kBAElBC,GAAmB,mBAQnBC,GAAa,aAEbC,GAAY,YAEZC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAW,WAEXC,GAAY,YAEZC,GAAW,WAEXC,GAAc,cAEdC,GAAc,cAEdC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAiB,iBAEjBC,GAAkB,kBAElBC,GAAY,YAEZC,GAAa,cAIbC,GAAY,aAIZC,GAAoB,sBAEpBC,GAAe,gBAEfC,GAAgB,iBAEhBC,GAAkB,YAElBC,GAAoB,sBAIpBC,GAAkB,kBAIlBC,GAAqB,qBAMrBC,GAAU,WAEVC,GAAa,cAEbC,GAAa,cAEbC,GAAa,cC7HpBzG,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAqBxCoG,GAA+B,SAAUrF,GAEzC,SAASqF,EAAczQ,GACnB,IAAI0Q,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,EAAOiB,OAASqI,KAI9C,OAHAoH,EAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiB7Q,EAChB0Q,EAwJX,OA9JA3G,GAAU0G,EAAerF,GAQzBqF,EAActK,UAAU2K,YAAc,SAAUC,GAC5C,IAAIC,EAAc,cAIdxJ,EAAiB8B,KAAKuH,eAAepL,wBACzC,GAAyC,KAArC1B,OAAOkN,eAAeC,WAAmB,CACzC5H,KAAK6H,kBAAkB5N,MAAQ+F,KAAK0H,GAAe,GACnD,IAAII,EAAO9H,KAAKuH,eAAe5P,KAAKkH,UACpC,GAAmD,SAA/CmB,KAAKuH,eAAeQ,kBAAkBjM,KAAiB,CAIvD,IAAK,IAHDkM,EAAkBhI,KAAKuH,eAAeU,wBAAwBC,KAAK,SAAUC,EAAGvH,GAChF,OAAOuH,EAAIvH,IAENvJ,EAAI,EAAGA,EAAI2Q,EAAgBzQ,OAAQF,IAIxC,GAHIA,EAAI,IACJ2I,KAAKqH,iBAAmB,OAEvBS,EAAKE,EAAgB3Q,IAAI+Q,UAAUC,SAAS,gBAAiB,CAC9D,IAAI3I,KAAW4I,MAAMvL,KAAK+K,EAAKE,EAAgB3Q,IAAIkR,iBAAiB,eAChEC,EAAWxI,KAAKuH,eAAekB,qBAAqBpR,GAAW,UACV,IAArD2I,KAAKsH,yBAAyB9I,QAAQgK,KACQ,WAA1CxI,KAAKuH,eAAemB,mBAA4E,SAA1C1I,KAAKuH,eAAemB,mBAC1E1I,KAAK2I,kBAAkBzK,EAAgB8J,EAAgB3Q,GAAIyQ,EAAML,EAAYpQ,GAEjF2I,KAAgB,YAAEN,GAAO,EAAO,KAAM+H,GACtCzH,KAAKqH,iBAAmBrH,KAAK0H,GAC7B1H,KAAKsH,yBAAyB9O,KAAKgQ,GACnCxI,KAAK0H,GAAe,GAC0B,UAA1C1H,KAAKuH,eAAemB,mBAA2E,SAA1C1I,KAAKuH,eAAemB,mBACzE1I,KAAK4I,iBAAiB1K,EAAgB8J,EAAgB3Q,GAAIyQ,EAAML,IAKhF,GAAIA,EAAY,CAEP,IADDoB,KACJ,IAASxR,EAAI,EAAGA,EAAI2I,KAAKuH,eAAeuB,oBAAoBvR,OAAQF,IAChEwR,EAAgBxR,GAAK2I,KAAKuH,eAAeuB,oBAAoBzR,GAAG0R,WAEpE/I,KAAgB,YAAE6I,GAAiB,EAAO,KAAMpB,GAChDzH,KAAKqH,gBAAkBrH,KAAK0H,GAAe,KAAO1H,KAAKqH,gBAE3D,IAAItE,GACAtE,KAAMuB,KAAKqH,gBACX2B,QAAQ,GAGZ,GADAhJ,KAAKuH,eAAe0B,QDrBZ,aCqBuClG,GAC3CA,EAAKiG,OACL,OAEJhJ,KAAK6H,kBAAkB5N,MAAQ+F,KAAK0H,GAAe3E,EAAKtE,KACnDyK,UAAQC,UAAUC,MAAM,qBAIzBpJ,KAAK6H,kBAAkBwB,kBAAkB,EAAGrJ,KAAK6H,kBAAkB5N,MAAM1C,QAHzEyI,KAAK6H,kBAAkByB,SAK3BtJ,KAAa,UAAI,EACjBA,KAAKsH,4BACLtH,KAAKqH,gBAAkB,QAGvBvF,EAAOjF,UAAU2K,YAAYzK,KAAKiD,KAAMyH,KAIpDN,EAActK,UAAU8L,kBAAoB,SAAUzK,EAAgBhD,EAAe4M,EAAML,EAAYvN,GACnG,IACIwN,EAAc,cACd5O,EAAa,aACbE,EAAW,WAEf,IAAKtB,oBAAkBwG,EAAehD,GAAepC,IAEjD,IAAK,IADDyQ,EAAYrL,EAAehD,GAAepC,GAAiB,MACtDzB,EAAI,EAAGA,EAAIkS,EAAY,EAAGlS,IAC/B,IAAK,IAAI0C,EAAI,EAAGA,EAAImE,EAAe3G,OAAQwC,IACvC,IAAKrC,oBAAkBwG,EAAehD,GAAepC,KACjDoF,EAAenE,GAAGf,KAAckF,EAAehD,GAAepC,GAAYE,GAAW,CACrFkC,EAAgBnB,EAChB,IAAI2F,KAAW4I,MAAMvL,KAAK+K,EAAK5M,GAAeqN,iBAAiB,eAC3DC,EAAWtK,EAAenE,GAAGf,GACjC,IAAyD,IAArDgH,KAAKsH,yBAAyB9I,QAAQgK,GAAkB,CACxDxI,KAAgB,YAAEN,GAAO,EAAO,KAAM+H,GAElCzH,KAAKqH,gBADLnN,EAAQ,EACe8F,KAAKqH,gBAAkBrH,KAAK0H,GAAe,KAG3C1H,KAAK0H,GAAe,KAAO1H,KAAKqH,gBAE3DrH,KAAKsH,yBAAyB9O,KAAKgQ,GACnCxI,KAAK0H,GAAe,GACpB,SAOxBP,EAActK,UAAU2M,KAAO,SAAU/B,GACrC3F,EAAOjF,UAAU2M,KAAKzM,KAAKiD,KAAMyH,IAErCN,EAActK,UAAU4M,MAAQ,SAAUhL,EAAMiL,EAAUC,GACtD7H,EAAOjF,UAAU4M,MAAM1M,KAAKiD,KAAMvB,EAAMiL,EAAUC,IAQtDxC,EAActK,UAAU+F,cAAgB,WACpC,MAAO,aAQXuE,EAActK,UAAU+M,QAAU,WAC9B9H,EAAOjF,UAAU+M,QAAQ7M,KAAKiD,OAElCmH,EAActK,UAAU+L,iBAAmB,SAAU1K,EAAgBhD,EAAe4M,EAAML,GACtF,IAIIzO,EAAW,WACf,GAAIkF,EAAehD,GAA8B,gBAE7C,IAAK,IADD2O,EAAY3L,EAAehD,GAA2B,aACjD7D,EAAI,EAAGA,EAAIwS,EAAUtS,OAAQF,IAClC,IAAK,IAAI0C,EAAI,EAAGA,EAAImE,EAAe3G,OAAQwC,IACvC,IAAKrC,oBAAkBmS,EAAUxS,GAAG2B,KAAckF,EAAenE,GAAGf,KAAc6Q,EAAUxS,GAAG2B,GAAW,CACtG,IAAMtB,oBAAkBoQ,EAAK/N,MAAS+N,EAAK/N,GAAGqO,UAAUC,SAAS,gBAAiB,CAC9E,IAAI3I,KAAW4I,MAAMvL,KAAK+K,EAAK/N,GAAGwO,iBAAiB,eAC/CC,EAAWtK,EAAenE,GAAGf,IACwB,IAArDgH,KAAKsH,yBAAyB9I,QAAQgK,KACtCxI,KAAgB,YAAEN,GAAO,EAAO,KAAM+H,GACtCzH,KAAKqH,iBAAoB,KAAOrH,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAKsH,yBAAyB9O,KAAKgQ,GACnCxI,KAAK4I,iBAAiB1K,EAAgBnE,EAAG+N,EAAML,IAGvD,QAMbN,GACT2C,aC3KEC,GAA2B,WAM3B,SAASA,EAAUrT,GACfsJ,KAAKtJ,OAASA,EACdsJ,KAAKgK,iBACLhK,KAAKgI,mBACLhI,KAAKiK,mBA4ZT,OApZAF,EAAUlN,UAAU+F,cAAgB,WAChC,MAAO,aAEXmH,EAAUlN,UAAUoN,iBAAmB,WACnCjK,KAAKtJ,OAAOwT,GAAG,eAAgBlK,KAAKmK,eAAgBnK,MACpDA,KAAKtJ,OAAOwT,GAAG,iBAAkBlK,KAAKoK,eAAgBpK,MACtDA,KAAKtJ,OAAOwT,GAAG,oBAAqBlK,KAAKqK,kBAAmBrK,MAC5DA,KAAKtJ,OAAOiB,KAAKuS,GAAG,mBAAoBlK,KAAKmK,eAAgBnK,MAC7DA,KAAKtJ,OAAOwT,GAAG,oBAAqBlK,KAAKsK,kBAAmBtK,OAEhE+J,EAAUlN,UAAU0N,oBAAsB,WAClCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,eAAgBzK,KAAKmK,gBACrCnK,KAAKtJ,OAAO+T,IAAI,iBAAkBzK,KAAKoK,gBACvCpK,KAAKtJ,OAAOiB,KAAK8S,IAAI,mBAAoBzK,KAAKmK,gBAC9CnK,KAAKtJ,OAAO+T,IAAI,oBAAqBzK,KAAKsK,mBAC1CtK,KAAKtJ,OAAO+T,IAAI,oBAAqBzK,KAAKqK,qBAQ9CN,EAAUlN,UAAU+M,QAAU,WAC1B5J,KAAKuK,uBAETR,EAAUlN,UAAUyN,kBAAoB,SAAUvH,GAC9C,IAEI2H,EAFAtJ,EAAS7I,YAAU,SAAUwK,GAC7B4H,EAAYC,eAAaxJ,EAAQ,sBAErC,GAAIuJ,GAAaA,EAAUpC,iBAAiB,sBAAsBhR,OAAS,EAAG,CAC1EmT,EAAWC,EAAUE,cAAc,0BACnC,IAAInB,KACJA,EAASlR,KAAK4I,EAAO0J,QAAQ,MAAMpB,UACnC1J,KAAK+K,iBAAiBrB,GACtB1J,KAAKgL,sBAAsBN,EAAUA,EAASO,mBAAmB7C,UAAUC,SAAS,WAAYjH,EAAO0J,QAAQ,YAE9G,GAAIH,GAAaA,EAAUpC,iBAAiB,oBAAoBhR,OAAS,GAAKyI,KAAKtJ,OAAOwU,mBAAoB,CAC/G,IAAIC,GAAiBR,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,aACpEsC,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,UAC/DrI,KAAKoL,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnC7K,KAAKgL,sBAAsBN,EAAUS,EAAe/J,EAAO0J,QAAQ,SAG3Ef,EAAUlN,UAAUmO,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,IAAI7M,EAAOuB,KAAKtJ,OAAOyF,wBAAwBmP,EAAW5B,UACtD3G,GAASwI,QAASF,EAAYjK,OAAQsJ,EAAUY,WAAYA,EAC5DE,QAASd,EAAStC,UAAUC,SAAS,mBAC/BrI,KAAKtJ,OAAO+U,oBAAsBhN,GAC5CuB,KAAKtJ,OAAOuS,QAAQyC,EAAuB3I,IAE/CgH,EAAUlN,UAAU8O,uBAAyB,WAIzC,IAAK,IAHDC,EACAC,EACAvU,EAAW0I,KAAKtJ,OAAc,QACzBoV,EAAM,EAAGA,EAAMxU,EAAQC,OAAQuU,IAChCxU,EAAQwU,GAAKtU,eACboU,EAAa5L,KAAKtJ,OAAOY,QAAQwU,GAAKC,KAI9C,IAAK,IADDC,EAAmBhM,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,oBAAoBhR,OAClFwC,EAAI,EAAGA,EAAIiS,EAAkBjS,IAAK,CACtBiG,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,oBAAoBxO,GACtEmS,aAAa,kBAAoBN,IAC5CC,EAAc9R,GAGtB,OAAO8R,GAEX9B,EAAUlN,UAAUsN,eAAiB,WAEjC,GADAnK,KAAK6L,YAAc7L,KAAK2L,yBACpB3L,KAAK6L,aAAe,GAAoF,IAA/E7L,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,oBAAoBhR,OAAc,CAC3G,IAAI4U,EAAgBnM,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,oBAAoBvI,KAAK6L,aAEzFO,EAAYpM,KAAKtJ,OAAO2V,cAAc,SAAWC,UAAW,kBAAmBC,OAASvJ,KAAQ,eAChG2H,EAAY6B,iBAAexM,KAAKtJ,OAAO2V,eAAe,GAASd,SAFvD,EAEuEkB,MAAO,OAChFrE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYrQ,MAAMmS,MAAQ,OAClDhC,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACnDpV,oBAAkByU,IACnBA,EAAcS,aAAajC,EAAWwB,EAAcW,YAEpD9M,KAAKtJ,OAAOwU,oBACZlL,KAAKoL,uBAGR,GAAIpL,KAAK6L,aAAe,GAAK7L,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,oBAAoBhR,OAAS,EAAG,CAC9G,IAAIoT,EACAQ,GADAR,EAAY3K,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,uBAAuB,IACzDsC,cAAc,YAAYzC,UAAUC,SAAS,WACvErI,KAAKtJ,OAAOwU,oBAAsBC,GAClCnL,KAAKoL,gBAAgBD,KAIjCpB,EAAUlN,UAAUkQ,qBAAuB,SAAUhK,GACjD,IAAIqJ,EAAYpM,KAAKtJ,OAAO2V,cAAc,SAAWC,UAAW,oBAAqBC,OAASvJ,KAAQ,cAClGvE,EAAOsE,EAAKtE,KAChBsE,EAAKtD,KAAK2I,UAAUsE,IAAI,sBACxB3J,EAAKtD,KAAKuN,aAAa,aAAc,YACrC,IAAI/S,GAASvC,oBAAkB+G,EAAKwO,gBAAyC,YAAvBxO,EAAKwO,cACvDtC,EAAY6B,iBAAexM,KAAKtJ,OAAO2V,eAAe,GAASd,QAAStR,EAAOwS,MAAO,MAG1F,GAFA9B,EAAUvC,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYrQ,MAAMmS,MAAQ,OACvB,kBAAvBlO,EAAKwO,cAAmC,CACxC,IAAIC,EAAWvC,EAAUpC,iBAAiB,YAAY,GACtD4E,eAAaD,IAAY,UAAW,SAAU,cAC9CvC,EAAUE,cAAc,YAAYzC,UAAUsE,IAAI,UAGtD,OADA/B,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACjDnC,GAEXZ,EAAUlN,UAAUuN,eAAiB,SAAUgD,GAC3C,IAAIzC,EAAY3K,KAAK+M,qBAAqBK,GACtCC,EAAeD,EAAU3N,KAAKoL,cAAc,2BAChD,GAAKnT,oBAAkB2V,GAKlB,CACD,IAAIC,EAAUtN,KAAKtJ,OAAO2V,cAAc,QAAUC,UAAW,mBACzD7N,EAAO2O,EAAU3N,KAAK8N,UAC1BH,EAAU3N,KAAK8N,UAAY,GAC3BD,EAAQC,UAAY9O,EACpB,IAAI+O,EAASxN,KAAKtJ,OAAO2V,cAAc,OAASC,UAAW,6BAC3DkB,EAAOC,YAAY9C,GACnB6C,EAAOC,YAAYH,GACnBF,EAAU3N,KAAKgO,YAAYD,QAZtBJ,EAAU3N,KAAKoL,cAAc,yBAC9BwC,EAAaT,aAAajC,EAAW0C,EAAa9E,iBAAiB,eAAe,KAc9FwB,EAAUlN,UAAUkO,iBAAmB,SAAU2C,GAC7C,IAAK,IAAIrW,EAAI,EAAGA,EAAIqW,EAAWnW,OAAQF,IAAK,CACxC,IAAIqB,EAASsH,KAAKtJ,OAAOyF,wBAAwBuR,EAAWrW,IACxDsW,EAAa5U,EAAciH,KAAKtJ,OAAQgC,EAAOM,UAE/CiU,EAA0C,aAD9CvU,EAASiV,GACmBV,cAA+B,QAAU,UACrEvU,EAAOuU,cAAgBA,EAEvB,IAAK,IADD3U,EAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB1B,OAAOwE,UAAUC,eAAeC,KAAK4Q,EAAYrV,EAAKyB,MACtD4T,EAAWrV,EAAKyB,IAAMrB,EAAOJ,EAAKyB,KAG1CiG,KAAK4N,gBAAgBlV,EAAQuU,GAAe,GACxCjN,KAAKtJ,OAAOwU,oBACZlL,KAAKoL,oBAIjBrB,EAAUlN,UAAU+Q,gBAAkB,SAAUlV,EAAQuU,EAAeY,GACnE,IAAItW,EAAS,EAKb,GAJAyI,KAAK8N,oBAAoBpV,EAAQuU,IAC5BY,GAAenV,EAAOI,YAAckH,KAAKtJ,OAAOwU,oBACjDlL,KAAK+N,sBAAsBrV,EAAOI,YAElCJ,EAAOY,cAAgB0G,KAAKtJ,OAAOwU,mBAAoB,CACvD,IAAI5R,EAAeZ,EAAOY,cACrB5B,oBAAkBsI,KAAKtJ,OAAOsX,eAC/BhO,KAAKtJ,OAAOsX,aAAaC,eAAe1W,OAAS,GAAKyI,KAAKtJ,OAAOwU,qBAClE5R,EAAe0G,KAAKkO,wBAAwB5U,IAEhD/B,EAAS+B,EAAa/B,OACtB,IAAK,IAAI4W,EAAQ,EAAGA,EAAQ5W,EAAQ4W,IAC3B7U,EAAa6U,GAAOC,eACjB9U,EAAa6U,GAAO9U,gBACpB2G,KAAK4N,gBAAgBtU,EAAa6U,GAAQlB,GAAe,GAGzDjN,KAAK8N,oBAAoBxU,EAAa6U,GAAQlB,MAMlElD,EAAUlN,UAAUqR,wBAA0B,SAAU5U,GACpD,IAAI8N,EAAQpH,KAIZ,OAH2B1G,EAAamE,OAAO,SAAUC,GACrD,OAAO0J,EAAM1Q,OAAOsX,aAAaC,eAAezP,QAAQd,IAAM,KAItEqM,EAAUlN,UAAUkR,sBAAwB,SAAUlV,GAClD,IAAItB,EAAS,EACT+B,KACAZ,EAASK,EAAciH,KAAKtJ,OAAQmC,EAAaG,UACjDN,GAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBsI,KAAKtJ,OAAOsX,eAC/BhO,KAAKtJ,OAAOsX,aAAaC,eAAe1W,OAAS,GAAKyI,KAAKtJ,OAAOwU,qBAClE5R,EAAe0G,KAAKkO,wBAAwB5U,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,OACtC,IAAI8W,EAAU,EACVC,EAAoB,EACxB,IAAK5W,oBAAkBgB,GAAS,CAC5B,IAAK,IAAIrB,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IAAK,CAC1C,IACIkX,EADgBxV,EAAciH,KAAKtJ,OAAQ4C,EAAajC,GAAG2B,UAE1DtB,oBAAkB6W,KACkB,kBAAjCA,EAAetB,cACfoB,IAEsC,UAAjCE,EAAetB,eACpBqB,KAKR5V,EAAOuU,cADPoB,EAAU,GAAMC,EAAoB,GAAKA,IAAsB/W,EACxC,gBAEI,IAAtB+W,GAAuC,IAAZD,EACT,UAGA,QAE3BrO,KAAK8N,oBAAoBpV,EAAQA,EAAOuU,eACpCvU,EAAOI,YACPkH,KAAK+N,sBAAsBrV,EAAOI,cAI9CiR,EAAUlN,UAAUuO,gBAAkB,SAAUoD,GAC5C,IAAIpH,EAAQpH,KAERzI,EAAS,EACTkH,GAAS/G,oBAAkBsI,KAAKtJ,OAAOsX,eACvChO,KAAKtJ,OAAOsX,aAAaC,eAAe1W,OAAS,EAAKyI,KAAKtJ,OAAOsX,aAAaC,eAC/EjO,KAAKtJ,OAAO8G,SAEhB,GADAiB,EAAOhI,EAAauJ,KAAKtJ,QAAUsJ,KAAKtJ,OAAOyF,wBAA0BsC,GACpE/G,oBAAkB8W,GACnB,IAAK,IAAInX,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAC7B,GAAImX,EAAU,CACV,GAA8B,UAA1B/P,EAAKpH,GAAG4V,cACR,SAEJxO,EAAKpH,GAAG4V,cAAgB,QACxBjN,KAAK8N,oBAAoBrP,EAAKpH,GAAIoH,EAAKpH,GAAG4V,oBAGlCjN,KAAKgK,cAAcxL,QAAQC,EAAKpH,KAC3B,IACToH,EAAKpH,GAAG4V,cAAgB,UACxBjN,KAAK8N,oBAAoBrP,EAAKpH,GAAIoH,EAAKpH,GAAG4V,eACtCjN,KAAKtJ,OAAOwU,oBACZlL,KAAK+N,sBAAsBtP,EAAKpH,MAMnC,IAAbmX,GAAsBxO,KAAKtJ,OAAO0H,uBAClC4B,KAAKgK,iBACLhK,KAAKgI,mBACLvJ,EAAKhB,OAAO,SAAUgR,GAClBA,EAAIxB,cAAgB,UACpB7F,EAAM0G,oBAAoBW,EAAKA,EAAIxB,kBAG3C1V,EAASyI,KAAKgK,cAAczS,OAC5B,IAAI2V,EAAWlN,KAAKtJ,OAAOuV,mBAAmB1D,iBAAiB,YAAY,GACvEhR,EAAS,GAAKkH,EAAKlH,OAAS,EACxBA,IAAWkH,EAAKlH,QAAWiX,GAK3BrB,eAAaD,IAAY,WACzBA,EAAS9E,UAAUsE,IAAI,aALvBS,eAAaD,IAAY,YACzBA,EAAS9E,UAAUsE,IAAI,WAQ3BS,eAAaD,IAAY,UAAW,YAG5CnD,EAAUlN,UAAUiR,oBAAsB,SAAUY,EAAerD,GAC/D,IAGIsD,EAGAzB,EANAxU,EAASsH,KAAKtJ,OAAOyF,wBAAwBsB,OAAO,SAAUC,GAC9D,OAAOA,EAAE1E,WAAa0V,EAAc1V,WAGpC4V,EAAc5O,KAAKtJ,OAAOyF,wBAAwBqC,QAAQ9F,EAAO,IACjEmW,EAAiB9V,EAAciH,KAAKtJ,OAAQgY,EAAc1V,UAE9D,GAAI4V,GAAe,EAAG,CAClB,IAAIE,EAAK9O,KAAKtJ,OAAOmI,UAAU+P,GAC3BG,OAAY,GACZ/O,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,sBACtC8P,EAAY/O,KAAKtJ,OAAOsY,qBAAqBJ,IAEjD1B,EAAW4B,EAAGvG,iBAAiB,YAAY,GAAKuG,EAAGvG,iBAAiB,YAAY,GAC1EwG,EAAUxG,iBAAiB,YAAY,GACxC7Q,oBAAkBwV,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAQtD,GALAyB,EAAgBE,EACZnX,oBAAkBiX,KAClBA,EAAgBD,GAEpBC,EAAc1B,cAAgB5B,EACX,UAAfA,GAA0B3T,oBAAkBgX,EAAcN,eACrC,IAAjBQ,IAAqE,IAA/C5O,KAAKgI,gBAAgBxJ,QAAQoQ,IACnD5O,KAAKgI,gBAAgBxP,KAAKoW,IAEqB,IAA/C5O,KAAKgK,cAAcxL,QAAQmQ,KAA2C,IAAjBC,IACnDlX,oBAAkBsI,KAAKtJ,OAAOsX,eAAiBhO,KAAKtJ,OAAOsX,aAAaC,eAAe1W,OAAS,GAClGyI,KAAKgK,cAAcxR,KAAKmW,IAEuB,IAA/C3O,KAAKgK,cAAcxL,QAAQmQ,IAA2BjX,oBAAkBsI,KAAKtJ,OAAOsX,eACjC,IAAnDhO,KAAKtJ,OAAOsX,aAAaC,eAAe1W,QACxCyI,KAAKgK,cAAcxR,KAAKmW,IAEuB,IAA/C3O,KAAKgK,cAAcxL,QAAQmQ,IAAyBjX,oBAAkBsI,KAAKtJ,OAAOsX,eAClFhO,KAAKgK,cAAcxR,KAAKmW,QAG3B,IAAoB,YAAftD,GAA2C,kBAAfA,IAAmC3T,oBAAkBgX,EAAcN,cAAe,CACpH,IAAIlU,EAAQ8F,KAAKgK,cAAcxL,QAAQmQ,GAIvC,IAHe,IAAXzU,GACA8F,KAAKgK,cAAc7M,OAAOjD,EAAO,IAEc,IAA/C8F,KAAKgI,gBAAgBxJ,QAAQoQ,GAAqB,CAClD,IAAIK,EAAejP,KAAKgI,gBAAgBxJ,QAAQoQ,GAChD5O,KAAKgI,gBAAgB7K,OAAO8R,EAAc,IAGlD,IAAIC,EAA+B,kBAAf7D,EAAiC,SAAW,KAAOA,EACnEuD,GAAe,IACVlX,oBAAkBwV,IACnBA,EAAS9E,UAAUsE,IAAIwC,KAInCnF,EAAUlN,UAAUwN,kBAAoB,SAAUtH,GAC9C,IAEI8G,EACAsF,EAHA/H,EAAQpH,KACRH,EAAckD,EAAKlD,YAGvB,GAAIzI,EAAiB4I,KAAKtJ,SAClBsJ,KAAKtJ,OAAOwU,mBACZ,GAAqB,YAAhBrL,GAA6C,WAAhBA,EAA2B,CACzD,IAAIiI,EAAO9H,KAAKtJ,OAAOiB,KAAKkH,UAE5BsQ,GADAtF,EAAY7J,KAAKtJ,OAAOyF,yBACA5E,OACxByI,KAAKgI,mBACL,IAAK,IAAI3Q,EAAI,EAAGA,EAAI8X,EAAa9X,IACxByQ,EAAKzQ,GAAG+Q,UAAUC,SAAS,iBAC5BrI,KAAK8N,oBAAoBjE,EAAUxS,GAAIwS,EAAUxS,GAAG4V,oBAI3D,GAAoB,WAAhBpN,GAA4C,QAAhBkD,EAAKzH,OAAkB,CACxD,IAAI8T,KACgB,WAAhBvP,EACAuP,EAAcrM,EAAKtE,KAGnB2Q,EAAY5W,KAAKuK,EAAKtE,MAE1B,IAASpH,EAAI,EAAGA,EAAI+X,EAAY7X,OAAQF,IAAK,CACzC,GAAoB,WAAhBwI,EAA0B,CAC1B,IAAI3F,EAAQ8F,KAAKtJ,OAAO8G,SAASgB,QAAQ4Q,EAAY/X,IACjD4X,EAAejP,KAAKgI,gBAAgBxJ,QAAQtE,GAChD8F,KAAKgI,gBAAgB7K,OAAO8R,EAAc,GAC1CjP,KAAK8N,oBAAoBsB,EAAY/X,GAAI,WAExCK,oBAAkB0X,EAAY/X,GAAGyB,aAClCkH,KAAK+N,sBAAsBqB,EAAY/X,GAAGyB,iBAIxB,QAArBiK,EAAKlD,aAAyBG,KAAKtJ,OAAOwU,mBAC/CnI,EAAKtE,KAAKwO,cAAgB,WAEL,cAAhBpN,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DpJ,EAAauJ,KAAKtJ,WACtBsJ,KAAKgK,iBACLhK,KAAKgI,oBACL6B,GAAcnS,oBAAkBsI,KAAKtJ,OAAOsX,eAAiBhO,KAAKtJ,OAAOsX,aAAaC,eAAe1W,OAAS,EAC1GyI,KAAKtJ,OAAOyF,wBAA0B6D,KAAKtJ,OAAO8G,UAC5C6R,QAAQ,SAAU3W,GACpBA,EAAOW,gBACP+N,EAAM2G,sBAAsBrV,GAG5B0O,EAAM0G,oBAAoBpV,EAAQA,EAAOuU,iBAGjDjN,KAAKoL,oBAKrBrB,EAAUlN,UAAUyS,kBAAoB,WACpC,OAAOtP,KAAKgK,eAEhBD,EAAUlN,UAAU0S,qBAAuB,WACvC,OAAOvP,KAAKgI,iBAET+B,KCxaPyF,GAAuB,WAMvB,SAASA,EAAM9Y,GACXsJ,KAAKtJ,OAASA,EACd+L,OAAKC,OAAO+M,SACZzP,KAAKiK,mBAyCT,OAjCAuF,EAAM3S,UAAU+F,cAAgB,WAC5B,MAAO,SAMX4M,EAAM3S,UAAUoN,iBAAmB,WAC/BjK,KAAKtJ,OAAOiB,KAAKuS,GAAGwF,EAAsB1P,KAAK2P,cAAe3P,OAElEwP,EAAM3S,UAAU0N,oBAAsB,WAClCvK,KAAKtJ,OAAOiB,KAAK8S,IAAIiF,EAAsB1P,KAAK2P,gBAEpDH,EAAM3S,UAAU8S,cAAgB,SAAUC,GACtC,IAAIjY,EAAOY,YAAU,YAAaqX,GAC9BC,EAActX,YAAU,UAAWqX,GACvCjY,EAAKsS,iBAAiB6F,EAAsB9P,KAAKtJ,OAAOiB,KAAK4M,eAC7D5M,EAAKsS,iBAAiB8F,EAAqB/P,KAAKtJ,OAAOiB,KAAK2M,cAC5D3M,EAAKsS,iBAAiB+F,EAAwBhQ,KAAKtJ,OAAOiB,KAAK6M,iBAC/DyL,YAAUJ,GAAc,eAE5BL,EAAM3S,UAAUqT,MAAQ,WACpBlQ,KAAKtJ,OAAOiB,KAAKuY,SAQrBV,EAAM3S,UAAU+M,QAAU,WACtB5J,KAAKuK,uBAEFiF,KC1DP/O,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5D2O,GAAgC,SAAUrO,GAE1C,SAASqO,IACL,OAAkB,OAAXrO,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAiB/D,OAnBAS,GAAU0P,EAAgBrO,GAI1BZ,IACIc,cACDmO,EAAetT,UAAW,cAAU,GACvCqE,IACIc,YAAS,IACVmO,EAAetT,UAAW,kBAAc,GAC3CqE,IACIc,WAAS,aACVmO,EAAetT,UAAW,gBAAY,GACzCqE,IACIc,cACDmO,EAAetT,UAAW,WAAO,GACpCqE,IACIc,cACDmO,EAAetT,UAAW,qBAAiB,GACvCsT,GACTlO,iBC5CExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5D4O,GAAmC,SAAUtO,GAE7C,SAASsO,IACL,OAAkB,OAAXtO,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAuB/D,OAzBAS,GAAU2P,EAAmBtO,GAI7BZ,IACIc,WAAS,QACVoO,EAAkBvT,UAAW,YAAQ,GACxCqE,IACIc,WAAS,SACVoO,EAAkBvT,UAAW,yBAAqB,GACrDqE,IACIc,WAAS,WACVoO,EAAkBvT,UAAW,YAAQ,GACxCqE,IACIc,YAAS,IACVoO,EAAkBvT,UAAW,wBAAoB,GACpDqE,IACIc,WAAS,YACVoO,EAAkBvT,UAAW,oBAAgB,GAChDqE,IACIc,YAAS,IACVoO,EAAkBvT,UAAW,oBAAgB,GAChDqE,IACIc,YAAS,IACVoO,EAAkBvT,UAAW,oBAAgB,GACzCuT,GACTnO,iBCxCEoO,GAAwB,WAMxB,SAASA,EAAO3Z,GACZsJ,KAAKtJ,OAASA,EACdsJ,KAAKsQ,eAAiB,KACtBtQ,KAAKtJ,OAAOiB,KAAKuS,GAAG,kBAAmBlK,KAAKuQ,qBAAsBvQ,MAClEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,sBAAuBlK,KAAKwQ,oBAAqBxQ,MAoPzE,OA5OAqQ,EAAOxT,UAAU4T,YAAc,SAAU1N,GACrC,GAAKA,EAAKtE,KAAV,CAGA,IAAIA,EAAOsE,EAAKtE,KACZlB,EAAakB,EAAK3F,WACtB,IAAKpB,oBAAkB+G,EAAK3F,cAAgBrB,EAAuBuI,KAAKtJ,WACjEsJ,KAAKtJ,OAAOga,aAA2D,SAA1C1Q,KAAKtJ,OAAOia,aAAaC,cACpDna,EAAauJ,KAAKtJ,UAAY8C,EAAUwG,KAAKtJ,SAAW,EAC5CsJ,KAAKtJ,OAAOuC,kBAAoBvB,oBAAkB6F,EAAWyC,KAAKtJ,OAAOwC,sBACtFqE,EAAWyC,KAAKtJ,OAAOwC,sBAAwB8G,KAAKtJ,OAAOma,qBAC1DpY,EAAgBuH,KAAKtJ,OAAQqM,EAAKtE,KAAMuB,KAAKtJ,OAAOiB,KAAKwE,4BAE1D4G,EAAKpE,IAAInE,MAAMG,QAAU,QAGjC,GAAIlE,EAAauJ,KAAKtJ,UAAY8C,EAAUwG,KAAKtJ,QAAS,CACtD,IAAIoa,EAAU9Q,KAAKtJ,OACfqa,EAAY/Q,KAAKtJ,OAAOyF,wBAAwBsB,OAAO,SAAUgR,GACjE,OAAOpQ,WAASyS,EAAQ5T,UAAWuR,KAASpQ,WAASyS,EAAQ7T,gBAAiBwB,KAElF,GAAIsS,EAAUxZ,OAAS,EAAG,CACtB,IAAIoD,EAAUoW,EAAU,GAAG5X,SAAW,YAAc,OACpD4J,EAAKpE,IAAIqO,aAAa,QAAS,YAAcrS,EAAU,MAI9CpC,YAAU,eAAgBwK,EAAKtE,OAE5CwR,YAAUlN,EAAKpE,KAAM,gBAErBoE,EAAKpE,IAAIkM,cAAc,qBACvB9H,EAAKpE,IAAIqO,aAAa,gBAAiB,QAElCjK,EAAKpE,IAAIkM,cAAc,wBAC5B9H,EAAKpE,IAAIqO,aAAa,gBAAiB,SAEvChN,KAAKtJ,OAAOma,mBAAqB7Q,KAAKtJ,OAAOuC,gBACxCvB,oBAAkB+G,EAAK3F,cACxBiK,EAAKpE,IAAInE,MAAMG,QAAU,SAGjCqF,KAAKtJ,OAAOuS,QAAQ8G,EAAqBhN,KAQ7CsN,EAAOxT,UAAU2C,WAAa,SAAUuD,GACpC,GAAKA,EAAKtE,KAAV,CAGA,IAEIvE,EAIA8W,EANArZ,EAAOqI,KAAKtJ,OAAOiB,KACnB8G,EAAOsE,EAAKtE,KAGZwS,EADcvZ,oBAAkB+G,EAAKyS,aACjBzS,EAAKtE,MAAQsE,EAAKyS,YACtCC,EAAkB,EAElBxR,EAASK,KAAKtJ,OAAO0a,eAAerO,EAAKpD,OAAOoM,KAChDsF,EAAa5S,EAAK2P,aAClBkD,EAAgBtR,KAAKtJ,OAAOuI,mBAOhC,GAFI/E,EAJCxC,oBAAkB+G,EAAK3F,YAIhB2F,EAAKvE,MAHLuE,EAAK3F,WAAWoB,MAKxBvC,EAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAAS/L,KAAKtJ,OAAO0I,iBAAyC,QAArB2D,EAAKlD,aAC/E,mBADwGkD,EAAKlD,aACpE,WAArBkD,EAAKlD,cAA4BnI,oBAAkBqL,EAAKtD,KAAKoL,cAAc,gBAqD9F7K,KAAKsQ,iBACVtQ,KAAKsQ,eAAiB,UAtD+F,CAMrH,IAAK,IALDlD,EAAYf,gBAAc,OAASC,UAAW,2BAC9CkF,EAAkBnF,gBAAc,QAChCC,UAAW,iBACXmF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnB/D,EAAUK,YAAY+D,EAAgB3E,aAE1C,IAAI8E,EAAgBja,oBAAkB+G,EAAKmT,yBACNnT,EAAKpF,gBAApCoF,EAAKmT,wBAIX,GAHID,IAAiBja,oBAAkB+G,EAAKnF,gBACxCqY,IAA8C,IAA7BlT,EAAKnF,aAAa/B,SAEnCoa,EAAc,CACd1B,YAAUlN,EAAKtD,MAAO,iBACtB,IAAIoS,EAAaxF,gBAAc,QAAUC,UAAW,YAChDwF,OAAS,EAETA,EADA9R,KAAKtJ,OAAOuC,cACHwF,EAAKtF,WACTzB,oBAAkB+G,EAAKuB,KAAKtJ,OAAOwC,sBAAwBuF,EAAKuB,KAAKtJ,OAAOwC,uBAC5E8G,KAAKtJ,OAAOma,qBAGLpS,EAAKtF,WAAaV,EAAgBuH,KAAKtJ,OAAQ+H,EAAMuB,KAAKtJ,OAAOiB,KAAKwE,0BAEtF8T,YAAU4B,GAAa,EAAW,mBAAqB,sBACvDV,GAAmB,GACnB/D,EAAUK,YAAYoE,GACtBL,EAAgBhX,MAAMmS,MAAQ,MAC9BwE,GAAmB,EACnB/D,EAAUK,YAAY+D,EAAgB3E,kBAEjCoE,IAAQA,IAAQxS,EAAKtE,SAE1BgX,GAAmB,GACnB/D,EAAUK,YAAY+D,EAAgB3E,aACtCO,EAAUK,YAAY+D,EAAgB3E,cAM1CmE,EAAc3E,gBAAc,QAAUC,UAAW,eAC7CtM,KAAKtJ,OAAOqb,gBACZf,EAAYxW,MAAMmS,MAAQ,eAAiBwE,EAAkB,OAEjElB,YAAUlN,EAAKtD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,OAChE6F,KAAKgS,eAAejP,EAAMiO,GAC1B5D,EAAUK,YAAYuD,GACtBjO,EAAKtD,KAAKgO,YAAYL,GAkB1B,GAbIkE,EAAgBtR,KAAKtJ,OAAO0I,iBAAmBkS,EAAgB,GAC/D3Z,EAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAASuF,EAC9CrB,YAAUlN,EAAKtD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,OAE3DmX,EAAgBtR,KAAKtJ,OAAO0I,iBAAmBkS,EAAgB,IACnE3Z,EAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAASuF,GACxC3Z,EAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAASuF,EAAgB,GACrErB,YAAUlN,EAAKtD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,OAE3DmX,IAAkBtR,KAAKtJ,OAAO0I,iBAAmBkS,EAAgB,GACtE3Z,EAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAAS/L,KAAKtJ,OAAO0I,gBAAkB,GAC5E6Q,YAAUlN,EAAKtD,MAAO,iBAAmBvF,EAAQ,QAAUuE,EAAKtE,QAE/DzC,oBAAkBiI,IAAWA,EAAOnI,eACrCwI,KAAKtJ,OAAOub,OAAO,iBAAkBlP,GACjC/C,KAAKtJ,OAAOqb,eAAe,CAC3B,IAAIG,EAAkBnP,EAAKtD,KAAK8I,iBAAiB,YAAY,GAE7D4I,GADYgB,SAASD,EAAgB1X,MAAMmS,MAAO,IAElDwE,GAAmB,IAEfH,EADArZ,EAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAAS/L,KAAKtJ,OAAO0I,gBAC5C2D,EAAKtD,KAAKoL,cAAc,eAGxB9H,EAAKtD,KAAKoL,cAAc,oBAE9BrQ,MAAMmS,MAAQ,eAAiBwE,EAAkB,MAGrE,GAAIE,EAAY,CACZpB,YAAUlN,EAAKtD,MAAO,iBACtB,IAAI2S,EAAc7Z,YAAUwK,EAAKpD,OAAO0S,MAAOtP,EAAKtE,MACN,MAA1CsE,EAAKtD,KAAKoL,cAAc,eACxB9H,EAAKtD,KAAKoL,cAAc,eAAe0C,UAAY6E,EAGnDrP,EAAKtD,KAAK8N,UAAY6E,EAG1B1a,oBAAkBsI,KAAKtJ,OAAO4b,cAC9BtS,KAAKtJ,OAAOuS,QAAQ6G,EAAsB/M,KAGlDsN,EAAOxT,UAAUmV,eAAiB,SAAUjP,EAAMiO,GAC9C,IAAIuB,EAAavS,KAAKtJ,OAAOY,QAAQ0I,KAAKtJ,OAAO0I,iBAC7CoT,EAAa,aACbC,EAAW1P,EAAKpD,OAAOzF,MACvBxC,oBAAkB6a,EAAWF,QAC7BtP,EAAKtD,KAAKuN,aAAa,gBAAiByF,EAAW,IAEnDF,EAAWF,QAAUtP,EAAKpD,OAAO0S,OAAU3a,oBAAkB6a,EAAWG,YACxE3P,EAAKpD,OAAO+S,SAAWH,EAAWG,SAClC3P,EAAKpD,OAAO6S,GAAcG,mBAAiB5P,EAAKpD,OAAO+S,UACvD3P,EAAKtD,KAAK2I,UAAUsE,IAAI,mBAE5B,IAAIkG,EAAwD,MAA1C7P,EAAKtD,KAAKoL,cAAc,eACtC9H,EAAKtD,KAAKoL,cAAc,eAAe0C,UAAYxK,EAAKtD,KAAK8N,UACjE,GAAsC,iBAA1BxK,EAAKpD,OAAe,UAAkBK,KAAKsQ,eACnDuC,iBAAe7B,EAAahR,KAAKsQ,gBACjCtQ,KAAKsQ,eAAiB,KACtBvN,EAAKtD,KAAK8N,UAAY,QAErB,GAAIxK,EAAKtD,KAAK2I,UAAUC,SAAS,kBAAmB,CACrD,IAAIjQ,EAAM2K,EAAKtD,KAAKqT,SAASvb,OACzBwb,EAAS/S,KAAKtJ,OAAOsc,QAAQC,GAAKlQ,EAAKpD,OAAOoM,IAClD,GAAIwG,EAAWF,QAAUtP,EAAKpD,OAAO0S,OAAU3a,oBAAkB6a,EAAWG,UAoBxE,KAAa,EAAOta,EAAKA,EAAM2K,EAAKtD,KAAKqT,SAASvb,OAC9CyZ,EAAYvD,YAAY1K,EAAKtD,KAAKqT,SADzB,QApBsE,CAGnF,GAAI9S,KAAKtJ,OAAOwc,QACZnQ,EAAKpD,OAAO6S,GAAYzP,EAAKtE,KAAMuB,KAAKtJ,OAAQ,WAAYqc,EAAQ,KAAM,KAAM/B,GAC5EtZ,oBAAkBsI,KAAKtJ,OAAOiB,KAAY,WAC1CqI,KAAKtJ,OAAOiB,KAAY,QAAIqI,KAAKtJ,OAAc,SAEnDsJ,KAAKtJ,OAA2B,2BAE/B,CACD,IACIyc,EAASpQ,EAAKpD,OAAO6S,GAAYpW,UAASlC,MAAS,IAAM6I,EAAKtE,MAAOuB,KAAKtJ,OAAQ,WAAYqc,EAAQ/S,KAAKtJ,OAAU,kBACzHmc,iBAAe7B,EAAamC,UAEzBpQ,EAAKpD,OAAO+S,gBACZ3P,EAAKpD,OAAO6S,GACnBzP,EAAKtD,KAAK8N,UAAY,SAS1ByD,EAAYzD,UAAYqF,EACxB7P,EAAKtD,KAAK8N,UAAY,IAG9B8C,EAAOxT,UAAU0T,qBAAuB,SAAUxN,GAC9C/C,KAAKsQ,eAAiBvN,EAAK2P,UAE/BrC,EAAOxT,UAAU2T,oBAAsB,SAAUzN,GAG7C/C,KAAKtJ,OAAc,QAAIqM,EACvB/C,KAAKtJ,OAAOub,OAAO,sBAAuBjS,KAAKtJ,OAAc,SAC7DsJ,KAAKtJ,OAA2B,wBAEpC2Z,EAAOxT,UAAU+M,QAAU,WACvB5J,KAAKtJ,OAAOiB,KAAK8S,IAAI,kBAAmBzK,KAAKuQ,sBAC7CvQ,KAAKtJ,OAAOiB,KAAK8S,IAAI,sBAAuBzK,KAAKwQ,sBAE9CH,KC7PP+C,GAAkC,WAClC,SAASA,EAAiBzb,GACtBqI,KAAKqT,aAAe,eACpBrT,KAAKtJ,OAASiB,EACdqI,KAAKsT,eACLtT,KAAKuT,WACLvT,KAAKwT,iBACLxT,KAAKyT,aAAe,EACpBzT,KAAK0T,cACL1T,KAAK2T,cAAe,EACpB3T,KAAKiK,mBACLjK,KAAK4T,eACL5T,KAAKhF,iBAAmBtD,oBAAkBsI,KAAKtJ,OAAOuG,iBAyjB1D,OAnjBAmW,EAAiBvW,UAAUoN,iBAAmB,WAC1CjK,KAAKtJ,OAAOwT,GAAG,oBAAqBlK,KAAK6T,uBAAwB7T,MACjEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,gBAAiBlK,KAAK8T,aAAc9T,MACxDA,KAAKtJ,OAAOwT,GAAG,eAAgBlK,KAAK+T,WAAY/T,MAChDA,KAAKtJ,OAAOwT,GAAG8J,EAAqBhU,KAAKiU,qBAAsBjU,MAC/DA,KAAKtJ,OAAOwT,GAAG,gBAAiBlK,KAAKkU,cAAelU,OAMxDoT,EAAiBvW,UAAU0N,oBAAsB,WACzCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAIuJ,EAAqBhU,KAAKiU,sBAC1CjU,KAAKtJ,OAAO+T,IAAI,oBAAqBzK,KAAK6T,wBAC1C7T,KAAKtJ,OAAO+T,IAAI,eAAgBzK,KAAK+T,YACrC/T,KAAKtJ,OAAO+T,IAAI,gBAAiBzK,KAAKkU,eACtClU,KAAKtJ,OAAOiB,KAAK8S,IAAI,gBAAiBzK,KAAK8T,gBAQ/CV,EAAiBvW,UAAU+M,QAAU,WACjC5J,KAAKuK,uBAMT6I,EAAiBvW,UAAUsX,SAAW,WAClC,OAAMnU,KAAKtJ,OAAOC,sBAAsBC,eAc5Cwc,EAAiBvW,UAAUuX,kBAAoB,SAAU3V,GACrD,IAAI2I,EAAQpH,KAIZ,GAHAA,KAAKtJ,OAAO8G,SAAyC,IAA7BnF,OAAOC,KAAKmG,GAAMlH,QAAkByI,KAAKtJ,OAAOC,sBAAsBC,iBAC1FoJ,KAAKtJ,OAAOC,WAChBqJ,KAAKtJ,OAAO6G,cACP9G,EAAauJ,KAAKtJ,UAAY8C,EAAUwG,KAAKtJ,SAAY+H,aAAgB7H,iBAAiB6H,aAAgB/B,OAAQ,CACnH,IAAIjD,EAAKuG,KAAKtJ,OAAOC,WACrB,GAAIqJ,KAAKtJ,OAAOuG,gBAAiB,CAG7B,GAFA+C,KAAKtJ,OAAO2d,MAAQ3c,oBAAkBsI,KAAKtJ,OAAO2d,OAC9C,IAAIC,QAAUtU,KAAKtJ,OAAO2d,MAC1BrU,KAAKtJ,OAAOuG,gBAAiB,CAC7B,IAAIsX,EAAYvU,KAAKtJ,OAAO2d,MAAMG,OAAO/W,OAAO,SAAUgX,GAAS,MAAqB,cAAdA,EAAM5c,MAC5EmI,KAAKtJ,OAAOuC,gBAAkBsb,EAAUhd,SACxCyI,KAAKtJ,OAAO2d,MAAMK,MAAM1U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAC9D+C,KAAKtJ,OAAO2d,MAAMM,UAAU,YAAa3U,KAAKtJ,OAAOwG,YAG7D,IAAK8C,KAAKtJ,OAAOke,gBAAiB,CAC9B,IAAIC,EAAM7U,KAAKtJ,OAAO2d,MAAMS,QAC5BD,EAAIE,YACJF,EAAMA,EAAIvL,QAAQtJ,KAAKtJ,OAAOuG,mBAC1B9F,iBAAkB,EACtBsC,EAAGub,aAAaH,GAAKI,KAAK,SAAUvX,GAChC0J,EAAMkM,YAAc4B,WAASC,SAASzX,EAAEyV,OAAQ/L,EAAM1Q,OAAOuG,iBAAiB,GAIlE,IAHF1E,YAAU,sBAAuB6O,EAAM1Q,QAAQ+G,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE0X,YAAYC,aACtB9d,SAEC+d,WAAS,+BAA+B,EAAMlO,EAAM1Q,QAC/CgB,oBAAkB0P,EAAMmO,mBACzBD,WAAS,UAAU,EAAOlO,EAAMmO,iBAChClX,WAAS,oBAAqB+I,EAAM1Q,QAAQ8e,mBAAmBpO,EAAMmO,iBACrEnO,EAAMmO,gBAAkB,MAE5BnO,EAAM1Q,OAAOiB,KAAK8d,wBAM7BhX,aAAgB/B,OACrBsD,KAAK0V,gBAAgBjX,IAG7B2U,EAAiBvW,UAAU6Y,gBAAkB,SAAUjX,GAGnD,GAFAuB,KAAKwT,iBACLxT,KAAKuT,WACAvT,KAAKtJ,OAAOwG,UAIb,IAAK,IAAI7F,EAAI,EAAGA,EAAIgB,OAAOC,KAAKmG,GAAMlH,OAAQF,IAAK,CAC/C,IAAIse,EAAWlX,EAAKpH,GACpB2I,KAAKwT,cAAchb,KAAK4D,YAAWuZ,IAC9Bje,oBAAkBie,EAAS3V,KAAKtJ,OAAOwG,aACxC8C,KAAKuT,QAAQ/a,KAAKmd,EAAS3V,KAAKtJ,OAAOwG,iBAP/C8C,KAAKwT,cAAgB/U,EAWzB,GAAIuB,KAAKhF,gBAAiB,CAIjB,IAHD4a,KACAC,EAAc,IAAIjf,cAAYoJ,KAAKwT,eAAesC,cAAa,IAAIxB,SAClEyB,MAAM/V,KAAKtJ,OAAOuG,kBACvB,IAAS5F,EAAI,EAAGA,EAAIwe,EAAYte,OAAQF,IAAK,CACzC,IAAI2e,EAAYH,EAAYxe,GACxB6C,EAAQ8F,KAAKuT,QAAQ/U,QAAQwX,EAAUne,KAC3C,IAAKH,oBAAkBse,EAAUne,MACzBqC,GAAS,EADjB,CAEQ,IAAI2P,EAAamM,EAAe,MAChChW,KAAKwT,cAActZ,GAAO8F,KAAKtJ,OAAO0G,cAAgByM,OAI9D+L,EAASpd,KAAKuJ,MAAM6T,EAAUI,EAAUC,OAE5CjW,KAAKwT,cAAgBxT,KAAKkW,oBAAoBN,GAElD,GAAKvd,OAAOC,KAAK0H,KAAKwT,eAAejc,OAMjCyI,KAAKmW,cAAcnW,KAAKwT,mBANiB,CACzC,IACI4C,IAAkBpW,KAAKtJ,OAAOC,sBAAsBC,gBAAgBoJ,KAAKtJ,OAAc,QAC3FsJ,KAAKtJ,OAAO8G,SAAW4Y,EAAiBpW,KAAKtJ,OAAiB,cAKlEsJ,KAAKyT,aAAe,GAYxBL,EAAiBvW,UAAUqZ,oBAAsB,SAAUN,GAEvD,IADA,IAAIzC,KACGnT,KAAKwT,cAAcjc,OAAS,GAAKqe,EAASre,OAAS,GAAG,CACzD,IAAI2C,EAAQ0b,EAASpX,QAAQwB,KAAKwT,cAAc,KACjC,IAAXtZ,EACA8F,KAAKwT,cAAc6C,SAGnBlD,EAAO3a,KAAKwH,KAAKwT,cAAc6C,SAC/BT,EAASzY,OAAOjD,EAAO,IAG/B,OAAOiZ,GASXC,EAAiBvW,UAAUgX,uBAAyB,SAAU9Q,GAC1D,IAAI7K,EAAU6K,EAAKoQ,OACnB,GAAKnT,KAAKtJ,OAAOke,iBAAoB5U,KAAKsT,YAAY/b,QAAWyI,KAAKtJ,OAAO4f,kBAKzE,GAAKtW,KAAKtJ,OAAO4f,kBAoBR5e,oBAAkBQ,IACnB8H,KAAKoU,kBAAkBlc,QApB3B,IAAK,IAAIuW,EAAM,EAAGA,EAAMvW,EAAQX,OAAQkX,IAChCtX,EAAgB6I,KAAKtJ,SAAWwB,EAAQuW,GAAKpV,iBAAmB2G,KAAKtJ,OAAOuC,gBAC5Ef,EAAQuW,GAAKtV,UAAW,GAExBzB,oBAAkBQ,EAAQuW,GAAKvU,SAC/BhC,EAAQuW,GAAKrU,SAAWgC,YAAWlE,EAAQuW,IAC3CvW,EAAQuW,GAAKzV,SAAWud,SAAOvW,KAAKtJ,OAAOsc,QAAQC,GAAK,UACxDqC,WAAS,sBAAwBpd,EAAQuW,GAAKzV,SAAUd,EAAQuW,GAAMzO,KAAKtJ,QAC3EwB,EAAQuW,GAAKtU,MAAQ,EACrBjC,EAAQuW,GAAKvU,MAAQsc,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/Bxe,EAAQuW,GAAKzO,KAAKtJ,OAAOke,mBACyC,IAAnE5U,KAAKsT,YAAY9U,QAAQtG,EAAQuW,GAAKzO,KAAKtJ,OAAOwG,eAClDhF,EAAQuW,GAAKpV,iBAAkB,GAEnCnB,EAAQuW,GAAKxB,cAAgB,gBAnBzCjN,KAAKuV,gBAAkBxS,EACvBuS,WAAS,UAAU,EAAMvS,GA4B7BA,EAAKoQ,OAASnT,KAAKtJ,OAAO4f,kBAAoBtW,KAAKtJ,OAAO8G,SAAWtF,EACrE8H,KAAKtJ,OAAOub,OAAO,gBAAiBlP,IAaxCqQ,EAAiBvW,UAAUoX,qBAAuB,SAAU0C,EAAYC,GACpE,IAAIC,EAAW7W,KAAKtJ,OAAOmI,UAC3B,GAAImB,KAAKtJ,OAAO4b,YAAa,CACzB,IAAIxK,EAAO9H,KAAKtJ,OAAOogB,kBAAkBhP,KACzC+O,KAAcvO,MAAMvL,KAAK+K,GAE7B,IAAIiP,EACJ,GAAIJ,EAAW7O,KAAKvQ,OAAS,EAAG,CACvBqf,IACDD,EAAWje,OAAOS,UAAW,GAEjC,IAAK,IAAI9B,EAAI,EAAGA,EAAIsf,EAAW7O,KAAKvQ,OAAQF,IAAK,CAE7C,GADAsf,EAAW7O,KAAKzQ,GAAGmD,MAAMG,QAAU,YAC/BqF,KAAKtJ,OAAO4f,kBAAmB,CAC/B,IAAIU,EAAYL,EAAW7O,KAAKzQ,GAAG4f,uBAAuB,sBAAsB,GAChFF,EAAc/W,KAAKtJ,OAAO4b,YAActS,KAAKtJ,OAAOiB,KAAKwE,wBAAwBwa,EAAW7O,KAAKzQ,GAAGqS,UAChG1J,KAAKtJ,OAAOiB,KAAKuf,oBAAoBP,EAAW7O,KAAKzQ,GAAG6U,aAAa,aAAazN,MACjF/G,oBAAkBsf,IAAcD,EAAY5d,WAC7C8W,YAAU+G,GAAY,oBACtB7J,eAAa6J,GAAY,uBAE7B,IAAIG,MACJA,EAAYN,EAASpZ,OAAO,SAAU+D,GAClC,OAAOA,EAAEqJ,cAAc,kBAAoBkM,EAAY7c,MAAQ,SAAW6c,EAAY5c,MAAQ,OAEpF5C,QAAUwf,EAAY5d,UAChC6G,KAAKiU,sBAAuBvb,OAAQqe,EAAajP,KAAMqP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,IAAIC,EAAcV,EAAW7O,KAAKzQ,GAAGwT,cAAc,wBAC9CnT,oBAAkB2f,IACnBrX,KAAKtJ,OAAOiB,KAAK2f,gBAAgBxF,OAAOuF,SAKhDrX,KAAKuX,sBAAuB7e,OAAQie,EAAWje,OAAQoP,KAAM6O,EAAW7O,KAAMsP,UAAWT,EAAWS,aAG5GhE,EAAiBvW,UAAU0a,qBAAuB,SAAUZ,GACxD,IAAIvP,EAAQpH,KACR+C,GAASpE,IAAKgY,EAAWS,UAAW3Y,KAAMkY,EAAWje,QACrDe,EAAKuG,KAAKtJ,OAAOC,WACjBke,EAAM7U,KAAKtJ,OAAOiB,KAAK6f,gBAAgBC,gBACvCC,EAAc7C,EAAIE,QAAQtX,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEia,IAA4B,YAATja,EAAEia,KAClF9C,EAAIE,QAAU2C,EACd7C,EAAI1d,iBAAkB,EACtB0d,EAAIH,MAAM1U,KAAKtJ,OAAOuG,gBAAiB,QAAS0Z,EAAWje,OAAOsH,KAAKtJ,OAAOwG,YAC9E0a,cAAY5X,KAAKtJ,OAAOsc,SACxBvZ,EAAGub,aAAaH,GAAKI,KAAK,SAAUvX,GAChC,IAAIvF,EAAQiP,EAAM1Q,OAAOiB,KAAKkgB,gBAAgBvP,QAC1CwP,EAAM3f,EAAMqG,QAAQmY,EAAWje,SACtB,IAATof,GACA1Q,EAAM1Q,OAAOiB,KAAKogB,gBAAgB1I,QAAQ,SAAUvH,GAC5CA,EAAKrJ,KAAKzF,WAAa2d,EAAWje,OAAOM,WACzC8e,EAAMhQ,EAAK5N,SAIvB,IAAI8d,EAAYzf,YAAU,mBAAoBmF,GAC1CyV,EAASzV,EAAEyV,OACfwD,EAAWje,OAAOY,aAAe6Z,EACjC,IAAK,IAAI3R,EAAI,EAAGA,EAAI2R,EAAO5b,OAAQiK,IAAK,CACpC2R,EAAO3R,GAAGpH,SAAWgC,YAAW+W,EAAO3R,IACvC2R,EAAO3R,GAAGrH,MAAQwc,EAAWje,OAAOyB,MAAQ,EAC5CgZ,EAAO3R,GAAGtH,MAAQsc,KAAKC,KAAqB,IAAhBD,KAAKE,UACjC,IAAInZ,EAAanB,YAAWua,EAAWje,eAChC6E,EAAWjE,aAClB6Z,EAAO3R,GAAG1I,WAAayE,EACvB4V,EAAO3R,GAAGlD,eAAiBqY,EAAWje,OAAOM,SAC7Cma,EAAO3R,GAAGxI,SAAWud,SAAOnP,EAAM1Q,OAAOsc,QAAQC,GAAK,UACtDE,EAAO3R,GAAGyL,cAAgB,UAC1BqI,WAAS,sBAAwBnC,EAAO3R,GAAGxI,SAAUma,EAAO3R,GAAI4F,EAAM1Q,SAEjEyc,EAAO3R,GAAG4F,EAAM1Q,OAAOke,mBAAsF,IAAlExN,EAAMkM,YAAY9U,QAAQ2U,EAAO3R,GAAG4F,EAAM1Q,OAAOwG,aACxF8a,IAAcA,EAAUxW,KAC7B2R,EAAO3R,GAAGnI,iBAAkB,EAC5B8Z,EAAO3R,GAAGrI,UAAW,GAEzBhB,EAAMgF,OAAO2a,EAAMtW,EAAI,EAAG,EAAG2R,EAAO3R,IAMxC,GAJA8T,WAAS,SAAUnd,EAAOuF,GAC1B4X,WAAS,SAAU,sBAAuB5X,GAC1C0J,EAAM1Q,OAAOuS,QAAQgP,EAAuBva,GAC5C+X,cAAYrO,EAAM1Q,OAAOsc,SACrB5L,EAAM1Q,OAAOiB,KAAKugB,WAAW3gB,OAAS,IAAM6P,EAAM1Q,OAAO0H,qBAAsB,CAC/E,IAAI+Z,EAAY5f,YAAU,QAASmF,GAKnC,GAHIhG,oBAAkBygB,KAClBA,EAAY9Z,WAAS,yBAA0B+I,EAAM1Q,QAAQ0hB,eAAe,IAAI9D,WAE/E5c,oBAAkBygB,GAAY,CAC/B,IAAIE,EAAeF,EAAUpD,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEX,KACpEja,EAAU,OAAI0J,EAAM1Q,OAAO6hB,cAAcC,sBAAsBH,EAAc3a,EAAU,QAAG,IAGlGA,EAAEyQ,MAAQ/G,EAAM1Q,OAAOiB,KAAKgZ,aAAa8H,kBACzC,IAAIC,KACAtR,EAAM1Q,OAAO0H,sBACbgJ,EAAMuR,oBAAoBD,GAE9B,IAAIE,GAAe1e,MAAO4d,EAAKjO,UAAWsJ,GACtC/L,EAAM1Q,OAAOmiB,wBACbzR,EAAM1Q,OAAOub,OAAO,yBAA0B2G,GAG9Cva,WAAS,oBAAqB+I,EAAM1Q,QAAQ8e,mBAAmB9X,EAAGgb,GAEtEtR,EAAM1Q,OAAOuS,QAAQ6P,EAAiB/V,MAG9CqQ,EAAiBvW,UAAU8b,oBAAsB,SAAUD,GACvDA,EAAY7Y,YAAc,UAC1ByV,WAAS,oBAAoB,EAAMoD,GACnC,IAAIK,EAAgB1a,WAAS,qBAAsB2B,KAAKtJ,QACpDsiB,EAAc3a,WAAS,cAAe0a,GACtCE,EAAW5a,WAAS,WAAY0a,GAChCC,EAAYE,UAAYlZ,KAAKtJ,OAAOiB,KAAKgZ,aAAawI,cAAgBH,EAAYI,SAASC,OAC3FrZ,KAAKtJ,OAAOiB,KAAKgZ,aAAawI,YAAcF,EAASI,OAG7DjG,EAAiBvW,UAAUiX,aAAe,WACtC9T,KAAK2T,cAAe,GAExBP,EAAiBvW,UAAUsZ,cAAgB,SAAU1X,EAAM6a,GAEvD,IAAK,IADDC,KACKliB,EAAI,EAAGe,EAAMC,OAAOC,KAAKmG,GAAMlH,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,IAAImiB,EAAcpd,YAAWqC,EAAKpH,IAClCmiB,EAAYpf,SAAWqE,EAAKpH,GAC5B,IAAI8C,EAAQ,EAyBZ,GAxBA6F,KAAKyT,cACApb,OAAOwE,UAAUC,eAAeC,KAAKyc,EAAa,WACnDA,EAAYtf,MAAQ8F,KAAKyT,eAExB/b,oBAAkB8hB,EAAYxZ,KAAKtJ,OAAO0G,gBAC1Coc,EAAYxZ,KAAKtJ,OAAOke,kBAAoBzd,EAAgB6I,KAAKtJ,WAClE8iB,EAAYngB,iBAAkB,EAC1B2G,KAAKtJ,OAAOma,oBAAsBnZ,oBAAkBsI,KAAKtJ,OAAOkN,kBAC7DlM,oBAAkB8hB,EAAYxZ,KAAKtJ,OAAO0G,eAC7Coc,EAAYrgB,UAAW,EAGvBqgB,EAAYrgB,WAAYzB,oBAAkB8hB,EAAYxZ,KAAKtJ,OAAOwC,sBAC5DsgB,EAAYxZ,KAAKtJ,OAAOwC,qBAGjCb,OAAOwE,UAAUC,eAAeC,KAAKyc,EAAa,WACnDA,EAAYtf,OAAQsf,EAAYngB,gBAAkB2G,KAAKyT,cAEvDzT,KAAKhF,iBAAmBtD,oBAAkB8hB,EAAYxZ,KAAKtJ,OAAOuG,mBAClE+C,KAAKtJ,OAAO6G,WAAW/E,KAAKghB,GAEhCA,EAAYxgB,SAAWud,SAAOvW,KAAKtJ,OAAOsc,QAAQC,GAAK,UACvDqC,WAAS,sBAAwBkE,EAAYxgB,SAAUwgB,EAAaxZ,KAAKtJ,SACpEgB,oBAAkB4hB,GAAgB,CACnC,IAAI/b,EAAanB,YAAWkd,UACrB/b,EAAWjE,oBACXiE,EAAWyC,KAAKtJ,OAAO0G,cAC1B4C,KAAKhF,wBACEuC,EAAWnD,SAAS4F,KAAKtJ,OAAO0G,cAE3Coc,EAAY1gB,WAAayE,EACzBic,EAAYlb,eAAiBf,EAAWvE,SACxCmB,EAAQmf,EAAcnf,MAAQ,EAYlC,GAVK9B,OAAOwE,UAAUC,eAAeC,KAAKyc,EAAa,WACnDA,EAAYrf,MAAQA,GAExBqf,EAAYvM,cAAgB,WACxBvV,oBAAkB8hB,EAAYxZ,KAAKtJ,OAAOuG,mBAAqBuc,EAAY1gB,aAC3EkH,KAAKtJ,OAAO8G,SAAShF,KAAKghB,GAEzBxZ,KAAKhF,iBAAyC,IAAtBwe,EAAYrf,OACrC6F,KAAKtJ,OAAO6G,WAAW/E,KAAKghB,IAE3B9hB,oBAAkB8hB,EAAYxZ,KAAKtJ,OAAO0G,eAAiBoc,EAAYxZ,KAAKtJ,OAAO0G,cAAc7F,QAAS,CAC3G,IAAImB,EAASsH,KAAKmW,cAAcqD,EAAYxZ,KAAKtJ,OAAO0G,cAAeoc,GACvEA,EAAYlgB,aAAeZ,EAE/B6gB,EAAa/gB,KAAKghB,GAEtB,OAAOD,GASXnG,EAAiBvW,UAAUqX,cAAgB,SAAUnR,GACjD,IAII0W,EAJAC,EAAWnhB,YAAU,WAAYwK,GACjC4W,EAAaphB,YAAU,aAAcwK,GACrC6W,EAAarhB,YAAU,aAAcwK,GACrC8W,EAAathB,YAAU,aAAcwK,GAErC+W,EAAavhB,YAAU,aAAcwK,GACrClD,EAActH,YAAU,cAAewK,GACvCgX,EAAaxhB,YAAU,OAAQwK,GAC/BzH,EAAS/C,YAAU,SAAUwK,GAC7BiX,EAAgBF,EAChBG,EAAuBja,KAAKtJ,OAAO6E,0BAA0B,GAC7D2e,EAAY3hB,YAAU,OAAQyhB,GAC5BtiB,oBAAkBsiB,IAAqBtiB,oBAAkBsiB,EAAc1e,SAAsC,QAAzB0e,EAAc1e,QAC/F5D,oBAAkBsiB,EAAcvb,QAAU/G,oBAAkBsiB,EAAcvb,KAAKwb,MACpFD,EAAcvb,KAAKwb,GAAwBlX,EAAKoQ,OAAO6G,EAAc9f,OAAO+f,GAC5EC,EAAU9f,SAAS6f,GAAwBlX,EAAKoQ,OAAO6G,EAAc9f,OAAO+f,MAE1EviB,oBAAkBoiB,IAAezhB,OAAOC,KAAKwhB,GAAYviB,QAA2B,SAAhBsI,KACtEA,EAAcA,GAA4Bia,EAAWja,YACrDka,EAAaA,GAA0BxhB,YAAU,OAAQuhB,GACzDxe,EAASA,GAAkB/C,YAAU,SAAUuhB,GACT,UAAlC9Z,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAK3E,aAAe2E,KAAKtJ,OAAOiB,KAAKoE,WAAWC,mBAEhDgE,KAAKtJ,OAAOyjB,aACZna,KAAKoa,aAAaL,EAAYze,EAAQuE,IAU9C,IAKIwa,EACAC,EANAC,GANAd,EADAC,IAAahiB,oBAAkBiiB,GACrBA,EAGAxiB,EAAgB6I,KAAKtJ,QAAU2H,WAAS,SAAU2B,KAAKtJ,OAAOiB,KAAKhB,YACvEqJ,KAAKtJ,OAAOiB,KAAKhB,sBAEMC,cAAc6iB,EAAQ9iB,WAAW8E,KAAOge,EACrEtL,EAAQhX,EAAgB6I,KAAKtJ,QAAU2H,WAAS,QAAS2B,KAAKtJ,OAAOC,YACnE4jB,EAAQhjB,OACVsd,EAAM,IAAIP,QACV6D,EAAY5f,YAAU,QAASwK,GAOnC,GAJKrL,oBAAkBygB,KACnBkC,EAAclC,EAAUpD,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,YAATA,EAAEX,KAC/D2C,EAAcnC,EAAUpD,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,aAATA,EAAEX,MAE9D3X,KAAKtJ,OAAOiB,KAAKI,gBAAkBiI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,IAAQG,oBAAkBygB,KACvEkC,EAAY9iB,QAAU+iB,EAAY/iB,QAAU,CACzCG,oBAAkBygB,KAClBA,EAAY,IAAI7D,QAChB6D,EAAY9Z,WAAS,yBAA0B2B,KAAKtJ,QAAQ2jB,YAAYlC,GACxEA,EAAY9Z,WAAS,yBAA0B2B,KAAKtJ,QAAQ4jB,YAAYnC,IAE5E,IAAIqC,EAAYrC,EAAUpD,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,YAATA,EAAEX,KAC7D8C,EAAYtC,EAAUpD,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,aAATA,EAAEX,KACjE9C,EAAIE,QAAUyF,EAAUjhB,OAAOkhB,GAC/B,IAAIC,EAAe,IAAI9jB,cAAY2jB,GAASzE,aAAajB,GAIzD,GAHA7U,KAAKtJ,OAAOub,OAAO,oBAAsBxT,KAAMic,IAC/CH,EAAUva,KAAK4T,YAAYT,OAC3BnT,KAAK4T,YAAYT,OAAS,KACtBnT,KAAKtJ,OAAOiB,KAAKugB,WAAW3gB,OAAS,EAAG,CACxC,IAAI8c,EAAQ9b,YAAU,QAASwK,GAI/B,GAHIrL,oBAAkBygB,KAClBA,EAAY9Z,WAAS,yBAA0B2B,KAAKtJ,QAAQ0hB,eAAe,IAAI9D,WAE9E5c,oBAAkB2c,GAAQ,CAC3B,IAAIgE,EAAehE,EAAMU,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEX,KAChE4C,EAAUva,KAAKtJ,OAAO6hB,cAAcC,sBAAsBH,EAAckC,GAAS,KAI7F,GAAIva,KAAKtJ,OAAOiB,KAAKugB,WAAW3gB,QAA2D,IAAjDyI,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQC,QACtB,IAAnDyI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiByI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACxG,IAAIojB,EAAcpiB,YAAU,QAASwK,GACjCrL,oBAAkBijB,KAClBA,EAActc,WAAS,yBAA0B2B,KAAKtJ,QAAQ0hB,eAAe,IAAI9D,UAEjF+D,EAAesC,EAAY5F,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEX,KACtE4C,EAAUva,KAAKtJ,OAAO6hB,cAAcC,sBAAsBH,EAAcrY,KAAKtJ,OAAO8G,UAAU,GAElG,GAAIwC,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQC,OAAS,GAAKyI,KAAK2T,aAAc,CACvE3T,KAAK2T,cAAe,EAIpB,IAAK,IAHDpW,EAAayC,KAAKtJ,OAAO6G,WAEzBqd,GADAvG,EAAQ9b,YAAU,QAASwK,GAClB,IAAIuR,SACRuG,EAAM7a,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQC,OAAS,EAAGsjB,GAAO,EAAGA,IAAO,CAC9E,IAAI/O,EAAM9L,KAAKtJ,OAAOiB,KAAKmjB,iBAAiB9a,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQujB,GAAKxI,OACnF0I,EAAUjP,EAAIkP,cAAgBxhB,EAAUwG,KAAKtJ,QAC7CoV,EAAIkP,aAAaC,KAAKnP,GACtB9L,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQujB,GAAKK,UAC/CN,EAAOO,OAAOnb,KAAKtJ,OAAOiB,KAAK4G,aAAajH,QAAQujB,GAAKxI,MAAO0I,GAEpE,IACIK,GAAa1f,aADE,IAAI9E,cAAY2G,GAAYuY,aAAa8E,GACfF,aAAcH,EAASK,OAAQA,GAM5E,GALA5a,KAAKtJ,OAAOub,OAAO,aAAcmJ,GACjCb,EAAUa,EAAS1f,aACnBsE,KAAK4T,YAAYT,OAAS,KAC1BnT,KAAK0T,WAAa6G,EAClBva,KAAKtJ,OAAOub,OAAO,kBACfjS,KAAKtJ,OAAOiB,KAAKugB,WAAW3gB,OAAS,IAAMG,oBAAkB2c,GAAQ,CAGjEgE,EADU9f,YAAU,QAASwK,GACNgS,QAAQtX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEX,KAClE4C,EAAUva,KAAKtJ,OAAO6hB,cAAcC,sBAAsBH,EAAcrY,KAAK0T,YAHhE,IAMrBvF,EAAQhX,EAAgB6I,KAAKtJ,QAAU2H,WAAS,QAAS2B,KAAKtJ,OAAOC,YAC/D4jB,EAAQhjB,OACd,IAAI8jB,EAAOrb,KAAKsb,OAAOf,EAASpM,EAAOuL,EAAUG,EAAYD,EAAY7W,GACzEwX,EAAUc,EAAKlI,OACfhF,EAAQkN,EAAKlN,MACbpL,EAAKoQ,OAASoH,EACdxX,EAAKoL,MAAQA,EACbnO,KAAKtJ,OAAOub,OAAO,gBAAiBlP,IAExCqQ,EAAiBvW,UAAUye,OAAS,SAAUf,EAASpM,EAAOuL,EAAUG,EAAYD,EAAY7W,GAC5F,IAAI/C,KAAKtJ,OAAOga,aAAiBgJ,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1B7Z,KAAKtJ,OAAO6kB,WAM9B,IAAKvb,KAAKtJ,OAAO0H,sBAAwB4B,KAAKtJ,OAAOmiB,4BAA8Ba,GAA2B,gBAAfE,IAC3D,SAAlCvb,WAAS,cAAe0E,GAAkB,CAC7C,IAAIyY,EAAUxb,KAAKtJ,OAAOmiB,wBAA0B9V,EAAO1E,WAAS,aAAc0E,GAClF/C,KAAKtJ,OAAOub,OAAOwJ,GAAwBtI,OAAQoH,EAASpM,MAAOA,EAAO2L,WAAY0B,IACtFjB,EAAUva,KAAK4T,YAAYT,OAC3BhF,EAAQnO,KAAK4T,YAAYzF,YAVzBnO,KAAKtJ,OAAOub,OAAOwJ,GAAwBtI,OAAQoH,EAASpM,MAAOA,IACnEoM,EAAUva,KAAK4T,YAAYT,OAC3BhF,EAAQhX,EAAgB6I,KAAKtJ,QAAU2H,WAAS,QAAS2B,KAAKtJ,OAAOC,YAC/DqJ,KAAK4T,YAAYzF,MAS3B,IACIuN,EAA0B,0BAC9B,KAAoB,IAAf7B,GAAwB9W,EAAgB,cAAMrL,oBAAkBqL,EAAK2Y,KACnE3Y,EAAK2Y,MAAyD,aAA1B1b,KAAKtJ,OAAO6kB,UAA0B,CAE7E,IAAK,IADDI,KACKtkB,EAAI,EAAGA,EAAIkjB,EAAQhjB,OAAQF,IAAK,CAClBoB,EAAgBuH,KAAKtJ,OAAQ6jB,EAAQljB,GAAI2I,KAAKtJ,OAAO6G,aAEpEoe,EAAcnjB,KAAK+hB,EAAQljB,IAInC8W,GADAoM,EAAUoB,GACMpkB,OAGpB,OADc4b,OAAQoH,EAASpM,MAAOA,IAG1CiF,EAAiBvW,UAAUkX,WAAa,SAAU6H,GAC9C5b,KAAK4T,YAAcgI,GAEvBxI,EAAiBvW,UAAUud,aAAe,SAAUL,EAAYze,EAAQuE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKtJ,OAAOub,OAAO4J,IAAqB5hB,MAAO8f,EAAYze,OAAQA,GAAUuE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKtJ,OAAOmF,aAAaC,MACxDkE,KAAKtJ,OAAOub,OAAO6J,QAGpB1I,MC1kBX,SAAW2I,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,aAdlD,CAeGA,gBAAgBA,mBAOnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SAhBxD,CAiBGA,qBAAqBA,wBC7CxB,IAAIvb,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5Dya,GAA8B,SAAUna,GAExC,SAASma,IACL,OAAkB,OAAXna,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KA0B/D,OA5BAS,GAAUwb,EAAcna,GAIxBZ,IACIc,WAAS,KACVia,EAAapf,UAAW,gBAAY,GACvCqE,IACIc,WAAS,IACVia,EAAapf,UAAW,iBAAa,GACxCqE,IACIc,WAAS,IACVia,EAAapf,UAAW,mBAAe,GAC1CqE,IACIc,cACDia,EAAapf,UAAW,yBAAqB,GAChDqE,IACIc,YAAS,IACVia,EAAapf,UAAW,yBAAqB,GAChDqE,IACIc,YAAS,IACVia,EAAapf,UAAW,iBAAa,GACxCqE,IACIc,WAAS,OACVia,EAAapf,UAAW,gBAAY,GACvCqE,IACIc,WAAS,QACVia,EAAapf,UAAW,oBAAgB,GACpCof,GACTha,iBCrDExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAQ5D0a,GAAiC,SAAUpa,GAE3C,SAASoa,IACL,IAAI9U,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAGhE,OAFAoH,EAAM+U,KAAO,IAAIC,uBACjBhV,EAAMoL,cACCpL,EAiFX,OAtFA3G,GAAUyb,EAAiBpa,GAe3Boa,EAAgBrf,UAAUwf,aAAe,SAAUC,GAC3Ctc,KAAKuc,SAAWvc,KAAKuc,OAAOC,UAAYxc,KAAKuc,OAAOA,UACpDvc,KAAKyc,SAAWzc,KAAK0c,kBAAkB1c,KAAKuc,UAQpDL,EAAgBrf,UAAU6f,kBAAoB,SAAUH,GACpD,OAAIA,EAAOvZ,KACAhD,KAAKmc,KAAKQ,cAAcJ,GAGxBvc,KAAKmc,KAAKS,gBAAgBL,IAOzCL,EAAgBrf,UAAUggB,aAAe,WACrC,OAAO7c,KAAKyc,UAOhBP,EAAgBrf,UAAUigB,YAAc,SAAUC,QAC/B,IAAXA,IAAqBA,WACGC,IAAxBhd,KAAKid,iBACLjd,KAAKwS,WAAW0K,eAAaC,WAAUA,WAASC,WAAczF,GAAI0F,UAAQrd,KAAKid,eAAgBF,GAC3FO,SAAU,oBAQtBpB,EAAgBrf,UAAU0gB,YAAc,SAAUva,GAC9C,OAAOhD,KAAKwS,WAAW0K,eAAaC,WAAUna,KAOlDkZ,EAAgBrf,UAAU2gB,oBAAsB,SAAUC,GACtDzd,KAAK0d,cAAcD,GAAM,IAE7Bvc,IACIc,cACDka,EAAgBrf,UAAW,YAAQ,GACtCqE,IACIc,cACDka,EAAgBrf,UAAW,sBAAkB,GAChDqE,IACIc,cACDka,EAAgBrf,UAAW,aAAS,GACvCqE,IACIc,cACDka,EAAgBrf,UAAW,cAAU,GACxCqE,IACIc,cACDka,EAAgBrf,UAAW,kBAAc,GAC5CqE,IACIc,cACDka,EAAgBrf,UAAW,uBAAmB,GAC1Cqf,GACTja,iBAEE0b,GAA8B,SAAU7b,GAExC,SAAS6b,IACL,OAAkB,OAAX7b,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAQ/D,OAVAS,GAAUkd,EAAc7b,GAIxBZ,IACIiB,gBAAe+Z,KAChByB,EAAa9gB,UAAW,eAAW,GACtCqE,IACIc,YAAS,IACV2b,EAAa9gB,UAAW,wBAAoB,GACxC8gB,GACT1b,iBC/HExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5Doc,GAA8B,SAAU9b,GAExC,SAAS8b,IACL,OAAkB,OAAX9b,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAmC/D,OArCAS,GAAUmd,EAAc9b,GAIxBZ,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,mBAAe,GAC1CqE,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,oBAAgB,GAC3CqE,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,qBAAiB,GAC5CqE,IACIc,WAAS,SACV4b,EAAa/gB,UAAW,YAAQ,GACnCqE,IACIc,WAAS,QACV4b,EAAa/gB,UAAW,sBAAkB,GAC7CqE,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,2BAAuB,GAClDqE,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,yBAAqB,GAChDqE,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,+BAA2B,GACtDqE,IACIc,WAAS,KACV4b,EAAa/gB,UAAW,gBAAY,GACvCqE,IACIc,gBACD4b,EAAa/gB,UAAW,cAAU,GACrCqE,IACIc,YAAS,IACV4b,EAAa/gB,UAAW,wBAAoB,GACxC+gB,GACT3b,iBC9DExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5Dqc,GAAgC,SAAU/b,GAE1C,SAAS+b,IACL,OAAkB,OAAX/b,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAQ/D,OAVAS,GAAUod,EAAgB/b,GAI1BZ,IACIc,cACD6b,EAAehhB,UAAW,aAAS,GACtCqE,IACIc,cACD6b,EAAehhB,UAAW,iBAAa,GACnCghB,GACT5b,iBAKE6b,GAA8B,SAAUhc,GAExC,SAASgc,IACL,OAAkB,OAAXhc,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAQ/D,OAVAS,GAAUqd,EAAchc,GAIxBZ,IACIiB,gBAAe0b,KAChBC,EAAajhB,UAAW,eAAW,GACtCqE,IACIc,YAAS,IACV8b,EAAajhB,UAAW,mBAAe,GACnCihB,GACT7b,iBCpDExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5Duc,GAAwC,SAAUjc,GAElD,SAASic,IACL,OAAkB,OAAXjc,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAW/D,OAbAS,GAAUsd,EAAwBjc,GAIlCZ,IACIc,YAAS,IACV+b,EAAuBlhB,UAAW,mBAAe,GACpDqE,IACIc,WAAS,IACV+b,EAAuBlhB,UAAW,iBAAa,GAClDqE,IACIc,WAAS,IACV+b,EAAuBlhB,UAAW,qBAAiB,GAC/CkhB,GACT9b,iBCtCExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GA0C5Dwc,GAA0B,SAAUlc,GAEpC,SAASkc,EAASje,EAASiT,GACvB,IAAI5L,EAAQtF,EAAO/E,KAAKiD,KAAMD,EAASiT,IAAYhT,KACnDoH,EAAMwM,eACNxM,EAAM6W,sBACN7W,EAAM8W,4BACN9W,EAAM+W,eAAiB,iBACvB/W,EAAMgX,eAAiB,iBACvBhX,EAAMiM,aAAe,eACrBjM,EAAMiX,sBAAwB,SAAUC,EAAKC,GACzC,GAAID,EAAK,CAGL,IAAK,IAFDhmB,EAAOD,OAAOC,KAAKgmB,GACnBE,GAAU,EACLnnB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIinB,EAAIhmB,EAAKjB,MAAQknB,EAAQjmB,EAAKjB,IAAK,CACnCmnB,GAAU,EACV,MAGR,OAAOA,EAGP,OAAO,GAGfC,EAAW/b,OAAOgc,IAClBpJ,WAAS,mBAAoBlO,EAAMuX,yBAA0BvX,GAM7D,OAJK1P,oBAAkB0P,EAAMwX,gBAAsB,SAC/Cnc,OAAKC,OAAOF,UAEhB4E,EAAMzP,KAAO,IAAI8K,OACV2E,EAhCX3G,GAAUud,EAAUlc,GAkCpB2c,EAAaT,EAYbA,EAASnhB,UAAUgiB,YAAc,SAAUC,EAAuBC,EAAkBC,EAAUC,GAE1F,OAAOjf,KAAKkf,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAajGjB,EAASnhB,UAAUuiB,UAAY,SAAUN,EAAuBC,EAAkBC,EAAUC,GAExF,OAAOjf,KAAKkf,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAYjGjB,EAASnhB,UAAUwiB,UAAY,SAAUC,EAAqBP,EAAkBQ,EAAQN,GACpF,OAAOjf,KAAKwf,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAQnFjB,EAASnhB,UAAU+F,cAAgB,WAC/B,MAAO,YAQXob,EAASnhB,UAAU4iB,UAAY,WAC3Bzf,KAAK0f,iBACL1f,KAAK2f,iBACL3f,KAAK4f,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhBngB,KAAKogB,KAAO,IAAIC,OAAK,WAAYrgB,KAAK4f,cAAe5f,KAAKsgB,QACtDtgB,KAAKhF,iBAAmBtD,oBAAkBsI,KAAK5C,gBAC/C4C,KAAK5C,aAAe,aAW5B4gB,EAASnhB,UAAU0jB,aAAe,SAAUplB,EAAY+f,EAAWsF,GAC/DxgB,KAAKygB,WAAWC,WAAWvlB,EAAY+f,EAAWsF,IAOtDxC,EAASnhB,UAAU8jB,aAAe,WAC1B3gB,KAAKygB,YACLzgB,KAAKygB,WAAWE,gBAUxB3C,EAASnhB,UAAU+jB,iBAAmB,SAAUvO,GAC5CrS,KAAKygB,WAAWG,iBAAiBvO,IAUrC2L,EAASnhB,UAAUgkB,OAAS,SAAUC,GAClC9gB,KAAKrI,KAAKkpB,OAAOC,IAarB9C,EAASnhB,UAAUkkB,eAAiB,SAAUC,GAC1ChhB,KAAKihB,aAAaF,eAAeC,GACjChhB,KAAKkhB,qBASTlD,EAASnhB,UAAUskB,eAAiB,SAAUC,EAAWC,GACrDrhB,KAAKrI,KAAKwpB,eAAeC,EAAWC,IAExCrD,EAASnhB,UAAU6iB,eAAiB,WAEhC,IAAIY,EAASD,OAAKC,OACdgB,KACJhM,WAAStV,KAAKsgB,UAAYgB,GAC1B,IAAIC,EACJA,KACAA,EAAahpB,YAAUyH,KAAKsgB,OAAQA,GACpC,IAAIkB,EACJA,KACAA,EAAiBjpB,YAAUyH,KAAK4C,gBAAiB2e,GACjDjM,WAAS,OAAQkM,EAAgBjpB,YAAUyH,KAAKsgB,OAAQgB,IACxDjB,OAAKoB,KAAKH,IASdtD,EAASnhB,UAAUqT,MAAQ,WACvBlQ,KAAK0hB,YAAYxR,SAErB8N,EAASnhB,UAAU8kB,yBAA2B,SAAUjkB,GACpD,GAAIsC,KAAK4hB,cAAe,CACpB,IACIC,OAAe,EAEfljB,OAAM,EACNmjB,OAAiB,EACrB,OAAQpkB,EAAEpC,QACN,IAAK,gBACD0E,KAAK+hB,YACL,MACJ,IAAK,cACD/hB,KAAKgiB,cACL,MACJ,IAAK,mBAIW,QADZrjB,EAFSjB,EAAE0D,OACK0J,QAAQ,cACXA,QAAQ,aACOkS,IAARre,GAChBqB,KAAKiiB,sBAAsBtjB,EAAIkM,cAAc,sBAEjD,MACJ,IAAK,qBAIW,QADZlM,EAFSjB,EAAE0D,OACK0J,QAAQ,cACXA,QAAQ,aACOkS,IAARre,GAChBqB,KAAKiiB,sBAAsBtjB,EAAIkM,cAAc,wBAEjD,MACJ,IAAK,YAGD,GAFAgX,EAAenkB,EAAE0D,OAAO8gB,cAED,QADvBJ,EAAiB9hB,KAAKmiB,mBAAmBN,IACZ,CACzB,IAAInY,EAAWoY,EAAepY,SAC9B1J,KAAKoiB,UAAU1Y,GACf,IAAI2Y,EAAY3kB,EAAE0D,OAAOihB,UACrBC,EAAQR,EAAehP,SAASuP,GACpCpS,YAAUqS,GAAQ,aAClBrS,YAAUqS,GAAQ,gBAGlBtiB,KAAKuiB,iBAET,MACJ,IAAK,UAGD,GAFAV,EAAenkB,EAAE0D,OAAO8gB,cAED,QADvBJ,EAAiB9hB,KAAKwiB,uBAAuBX,IAChB,CACzB,IAAIY,EAASX,EAAepY,SAC5B1J,KAAKoiB,UAAUK,GACf,IAAIC,EAAShlB,EAAE0D,OAAOihB,UAClBva,EAAOga,EAAehP,SAAS4P,GACnCzS,YAAUnI,GAAO,aACjBmI,YAAUnI,GAAO,gBAGjB9H,KAAKuiB,oBAMzBvE,EAASnhB,UAAUslB,mBAAqB,SAAUQ,GAC9C,IAAIrX,EAAaqX,EAAkB1X,mBAKnC,OAJmB,OAAfK,IAA0E,IAAlDA,EAAWgB,UAAU9N,QAAQ,iBACxB,SAA7B8M,EAAW9Q,MAAMG,UACjB2Q,EAAatL,KAAKmiB,mBAAmB7W,IAElCA,GAGX0S,EAASnhB,UAAU2lB,uBAAyB,SAAUG,GAClD,IAAIrX,EAAaqX,EAAkBC,uBAKnC,OAJmB,OAAftX,IAA0E,IAAlDA,EAAWgB,UAAU9N,QAAQ,iBACxB,SAA7B8M,EAAW9Q,MAAMG,UACjB2Q,EAAatL,KAAKwiB,uBAAuBlX,IAEtCA,GAEX0S,EAASnhB,UAAU8iB,eAAiB,WAChC3f,KAAK4f,iBACL5f,KAAKxC,YACLwC,KAAKzC,cACLyC,KAAK6iB,eACL7iB,KAAK8iB,aAAc,EACnB9iB,KAAK+iB,eAAgB,EACrB/iB,KAAKgjB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbtjB,KAAKma,cAAiBna,KAAKrJ,sBAAsBC,gBAAgBoJ,KAAKrJ,WAAWA,WAAW4sB,UACnF7rB,oBAAkBsI,KAAKrJ,WAAW+C,QAAWsG,KAAKrJ,WAAWE,mBAAmB2sB,oBACzFxjB,KAAKhF,iBAAmBtD,oBAAkBsI,KAAK/C,kBAQnD+gB,EAASnhB,UAAU4mB,WAAa,WAC5BC,eAAahX,IAAI1M,KAAKrI,KAAKqb,QAAS,QAAShT,KAAK2jB,kBAAmB3jB,MACrE0jB,eAAahX,IAAI1M,KAAKgT,QAAS,WAAYhT,KAAK2jB,kBAAmB3jB,MACnEA,KAAK4jB,eAAiB,IAAIC,iBAAe7jB,KAAKgT,SAC1C8Q,UAAW9jB,KAAK2hB,yBAAyB1G,KAAKjb,MAC9CgjB,WAAYhjB,KAAKgjB,WACjBe,UAAW,YAEX/jB,KAAK4hB,gBACL5hB,KAAKgT,QAAQgR,UAAsC,IAA3BhkB,KAAKgT,QAAQgR,SAAkB,EAAIhkB,KAAKgT,QAAQgR,WAShFhG,EAASnhB,UAAUonB,gBAAkB,WACjC,IAAIC,KACJ,OAAIlkB,KAAKwK,YACE0Z,GAEXA,EAAQ1rB,MACJ2rB,OAAQ,SAAUphB,MAAO/C,KAAMA,KAAKhI,kBAEnCN,oBAAkBsI,KAAKokB,UACxBF,EAAQ1rB,MACJ2rB,OAAQ,UACRphB,MAAO/C,QAGXA,KAAKqkB,kBACLH,EAAQ1rB,MACJ2rB,OAAQ,cACRphB,MAAO/C,QAGXA,KAAK0Q,aACLwT,EAAQ1rB,MACJ2rB,OAAQ,QACRphB,MAAO/C,KAAMA,KAAK2Q,gBAGtB3Q,KAAKI,iBACL8jB,EAAQ1rB,MACJ2rB,OAAQ,UACRphB,MAAO/C,QAGXA,KAAKM,cACL4jB,EAAQ1rB,MACJ2rB,OAAQ,OACRphB,MAAO/C,QAGXA,KAAKkY,WAAW3gB,OAAS,GACzB2sB,EAAQ1rB,MACJ2rB,OAAQ,UAAWphB,MAAO/C,QAGlCkkB,EAAQ1rB,MACJ2rB,OAAQ,SAAUphB,MAAO/C,QAEzBA,KAAKskB,kBACLJ,EAAQ1rB,MACJ2rB,OAAQ,cAAephB,MAAO/C,SAGlCA,KAAKsR,eAAiBtR,KAAKhB,YAAcgB,KAAKf,qBAC9CilB,EAAQ1rB,MACJ2rB,OAAQ,SAAUphB,MAAO/C,QAG7BA,KAAKukB,gBACLL,EAAQ1rB,MACJ2rB,OAAQ,YAAaphB,MAAO/C,QAGhCA,KAAKwkB,gBACLN,EAAQ1rB,MACJ2rB,OAAQ,YAAaphB,MAAO/C,QAGhCA,KAAKK,gBACL6jB,EAAQ1rB,MACJ2rB,OAAQ,aAAcphB,MAAO/C,QAGjCA,KAAKykB,mBACLP,EAAQ1rB,MACJ2rB,OAAQ,gBAAiBphB,MAAO/C,QAGxCA,KAAK0kB,sBAAsBR,GACpBA,IAEXlG,EAASnhB,UAAU6nB,sBAAwB,SAAUR,GAC7ClkB,KAAKX,qBACL6kB,EAAQ1rB,MACJ2rB,OAAQ,iBACRphB,MAAO/C,SAGXA,KAAKnE,aAAa8oB,aAAe3kB,KAAKnE,aAAa+oB,eAAiB5kB,KAAKnE,aAAaoE,eACtFikB,EAAQ1rB,MACJ2rB,OAAQ,OACRphB,MAAO/C,QAGXA,KAAK6kB,gBAAgB7kB,KAAK1I,UAC1B4sB,EAAQ1rB,MACJ2rB,OAAQ,gBACRphB,MAAO/C,QAGXA,KAAK8kB,gBACLZ,EAAQ1rB,MACJ2rB,OAAQ,YACRphB,MAAO/C,QAGXA,KAAK5B,sBACL8lB,EAAQ1rB,MACJ2rB,OAAQ,gBACRphB,MAAO/C,QAGXA,KAAK6Y,yBACLqL,EAAQ1rB,MACJ2rB,OAAQ,iBACRphB,MAAO/C,QAGfkkB,EAAQ1rB,MACJ2rB,OAAQ,SACRphB,MAAO/C,KAAKrI,SAGpBqmB,EAASnhB,UAAUgoB,gBAAkB,SAAUvtB,GAC3C,IAAI8P,EAAQpH,KACZ,OAAO1I,EAAQytB,KAAK,SAAUjZ,GAC1B,OAAIA,EAAIxU,QACG8P,EAAMyd,gBAAgB/Y,EAAIxU,YAE3BwU,EAAIkZ,WAAYlZ,EAAImZ,qBAStCjH,EAASnhB,UAAUqoB,aAAe,WAC1BllB,KAAKrI,MAAQqI,KAAKrI,KAAKqb,SACvB0Q,eAAayB,OAAOnlB,KAAKrI,KAAKqb,QAAS,QAAShT,KAAK2jB,oBAY7D3F,EAASnhB,UAAUgG,IAAM,SAAUC,EAAOC,GAClC/C,KAAKolB,cACLplB,KAAKolB,aAAarhB,QAAQjB,EAAOC,EAAM/C,OAS/Cge,EAASnhB,UAAUwoB,OAAS,WACxB,IAAIje,EAAQpH,KACRA,KAAKkT,UACLlT,KAAKrI,KAAKub,SAAU,GAExBoS,iBAAgBlkB,OAAQpB,KAAKgT,SAAWhT,KAAKqM,eAC7CrM,KAAK6C,KAAK,2BACV7C,KAAKT,aAAe,IAAI8Q,GAAOrQ,MAC/BA,KAAKulB,WAAa,IAAInS,GAAiBpT,MACvCA,KAAK0hB,YAAc,IAAIlS,GAAMxP,MAC7BA,KAAKiJ,QdxiBK,QcyiBVjJ,KAAKwlB,sBACLxlB,KAAK/G,eAAgB,EAChBvB,oBAAkBsI,KAAKrJ,aACxBqJ,KAAKylB,gBAAgBzlB,KAAKrJ,YAE9BqJ,KAAK0lB,WACD1lB,KAAKgT,QAAQ5K,UAAUC,SAAS,eAAiBrI,KAAK2lB,gBAAgBC,WACtE5lB,KAAKrI,KAAKguB,gBAAgBC,UAAY,gBAE1C5lB,KAAK6lB,cACL,IAAIC,EAAgBzZ,gBAAc,OAAS4G,GAAIjT,KAAKgT,QAAQC,GAAK,iBACjEhD,YAAUjQ,KAAKgT,SAAU,cACpBtb,oBAAkBsI,KAAK+lB,SAAoC,iBAAjB/lB,KAAW,SAAgD,IAA9BA,KAAK+lB,OAAOvnB,QAAQ,OAC5FwB,KAAKgT,QAAQxY,MAAMurB,OAAS/lB,KAAK+lB,QAEhCruB,oBAAkBsI,KAAK2M,QAAkC,iBAAhB3M,KAAU,QAA+C,IAA7BA,KAAK2M,MAAMnO,QAAQ,OACzFwB,KAAKgT,QAAQxY,MAAMmS,MAAQ3M,KAAK2M,OAEpC3M,KAAKgT,QAAQvF,YAAYqY,GACzB,IAAIE,EAAsBhmB,KAAKrI,KAAKssB,gBACpCjkB,KAAKrI,KAAKssB,gBAAkB,WACxB,IAAIC,KACJA,EAAU8B,EAAoBjkB,MAAM/B,MACpC,IAAK,IAAI3I,EAAI,EAAGA,EAAI6sB,EAAQ3sB,OAAQF,IACN,kBAAtB6sB,EAAQ7sB,GAAG8sB,SACXD,EAAQ7sB,GAAG8sB,OAAS,qBAG5B,OAAOD,GAEXlkB,KAAKrI,KAAKsuB,SAASH,GACnB9lB,KAAKyjB,aACLzjB,KAAKkmB,iBACL,IACIC,EAAoBnmB,KAAKrI,KAAoB,gBAEjDqI,KAAKrI,KAAoB,gBAAI,SAAUoL,EAAM7I,GACzCisB,EAAkBpkB,MAAMqF,EAAMzP,MAExByP,EAAM8L,SAAWxb,oBAAkB0P,EAAa,UAClDA,EAAMgf,cAAcrjB,EAAM7I,KAItC8jB,EAASnhB,UAAUwpB,gBAAkB,WAC5B3uB,oBAAkBsI,KAAKrI,KAAK2uB,kBAC7BtmB,KAAKrI,KAAK2uB,gBAAgB1c,UAE9B5J,KAAKsmB,gBAAkBtmB,KAAKrI,KAAK2uB,gBAAkB,IAAInf,GAAcnH,OAEzEge,EAASnhB,UAAU4oB,gBAAkB,SAAUhnB,GAC3C,IAAI2I,EAAQpH,KAIZ,GAHI7I,EAAgB6I,QAChBvB,EAAOJ,WAAS,SAAUI,IAE1BA,aAAgB/B,OAAS+B,EAAKlH,OAAS,GAAKc,OAAOwE,UAAUC,eAAeC,KAAK0B,EAAK,GAAI,SAC1FuB,KAAKxC,SAAWiB,EAChBuB,KAAKxC,SAASC,OAAO,SAAUC,GAC3B4X,WAAS,sBAAwB5X,EAAE1E,SAAU0E,EAAG0J,GAChC,IAAZ1J,EAAEvD,OACFiN,EAAM7J,WAAW/E,KAAKkF,UAK9B,GAAIvG,EAAgB6I,MAAO,CACvB,IAAIumB,EAAWloB,WAAS,SAAU2B,KAAKrJ,YACvCqJ,KAAKulB,WAAWnR,kBAAkBmS,QAGlCvmB,KAAKulB,WAAWnR,kBAAkB3V,IAa9Cuf,EAASnhB,UAAU2pB,mBAAqB,WACpCxmB,KAAKymB,mBACLzmB,KAAKrI,KAAK+uB,UAAY1mB,KAAK0mB,UAC3B1mB,KAAKrI,KAAKiqB,cAAgB5hB,KAAK4hB,cAC/B5hB,KAAKrI,KAAKL,QAAU0I,KAAK2mB,eAAe3mB,KAAK1I,SAC7C0I,KAAKrI,KAAK2sB,iBAAmBtkB,KAAKskB,iBAClCtkB,KAAKrI,KAAK6sB,eAAiBxkB,KAAKwkB,eAChCxkB,KAAKrI,KAAK0c,MAAQrU,KAAKqU,MACvBrU,KAAKrI,KAAKivB,gBAAkB5mB,KAAK4mB,gBACjC5mB,KAAKrI,KAAK+Y,YAAc1Q,KAAK0Q,YAC7B1Q,KAAKrI,KAAKgZ,aAAekW,sBAAoB7mB,KAAK2Q,cAClD3Q,KAAKrI,KAAKmvB,cAAgB9mB,KAAK8mB,cAC/B9mB,KAAKrI,KAAK0I,eAAiBL,KAAKK,eAChCL,KAAKrI,KAAK2I,aAAeN,KAAKM,aAC9BN,KAAKrI,KAAKI,eAAiBiI,KAAKjI,eAChCiI,KAAKrI,KAAKyG,qBAAuB4B,KAAK5B,qBACtC4B,KAAKrI,KAAKkhB,wBAA0B7Y,KAAK6Y,wBACzC7Y,KAAKrI,KAAKovB,uBAAyB/mB,KAAK+mB,uBACxC/mB,KAAKrI,KAAKgV,MAAQ3M,KAAK2M,MACvB3M,KAAKrI,KAAKouB,OAAS/lB,KAAK+lB,OACxB/lB,KAAKrI,KAAKqvB,aAAehnB,KAAKgnB,aAC9BhnB,KAAKrI,KAAKyI,gBAAkBJ,KAAKI,gBACjCJ,KAAKrI,KAAKoa,cAAgB/R,KAAK+R,cAC/B/R,KAAKrI,KAAK4I,cAAgBP,KAAKO,cAC/BP,KAAKrI,KAAKsvB,YAAcjnB,KAAKinB,YAC7BjnB,KAAKrI,KAAKuvB,eAAiBlnB,KAAKknB,eAChClnB,KAAKrI,KAAK2H,oBAAsBU,KAAKV,oBACrCU,KAAKrI,KAAK0H,oBAAsBW,KAAKX,oBACrCW,KAAKrI,KAAKguB,gBAAkBkB,sBAAoB7mB,KAAK2lB,iBACrD3lB,KAAKrI,KAAKwvB,UAAYnnB,KAAKmnB,UAC3BnnB,KAAKrI,KAAKyvB,UAAYpnB,KAAKonB,UAC3BpnB,KAAKrI,KAAKmtB,eAAiB9kB,KAAK8kB,eAChC9kB,KAAKrI,KAAKysB,QAAUyC,sBAAoB7mB,KAAKqnB,kBAC7CrnB,KAAKrI,KAAK2vB,gBAAkBtnB,KAAKsnB,gBACjCtnB,KAAKrI,KAAK8sB,kBAAoBzkB,KAAKykB,kBACnCzkB,KAAKrI,KAAKK,eAAiB6uB,sBAAoB7mB,KAAKhI,gBACpDgI,KAAKrI,KAAKoQ,kBAAoB8e,sBAAoB7mB,KAAK+H,mBACvD/H,KAAKrI,KAAK4G,aAAesoB,sBAAoB7mB,KAAKzB,cAClDyB,KAAKrI,KAAKC,eAAiBivB,sBAAoB7mB,KAAKpI,gBACpDoI,KAAKrI,KAAKugB,WAAa2O,sBAAoB7mB,KAAKkY,YAChDlY,KAAKrI,KAAK4vB,iBAAmBV,sBAAoB7mB,KAAKunB,kBACtDvnB,KAAKrI,KAAK4jB,UAAYsL,sBAAoB7mB,KAAKub,WAC/Cvb,KAAKrI,KAAK2oB,OAASuG,sBAAoB7mB,KAAKsgB,QAC5CtgB,KAAKrI,KAAK6vB,iBAAmBxnB,KAAKwnB,iBAClCxnB,KAAKrI,KAAK0sB,iBAAmBwC,sBAAoB7mB,KAAKynB,kBACtDznB,KAAKrI,KAAK+vB,gBAAkBb,sBAAoB7mB,KAAK0nB,iBACrD1nB,KAAKrI,KAAKkE,aAAemE,KAAK2nB,sBAC9B3nB,KAAKrI,KAAK2a,YAAcuU,sBAAoB7mB,KAAKsS,aACjDtS,KAAKrI,KAAK4sB,eAAiBsC,sBAAoB7mB,KAAKukB,gBACpDvkB,KAAKrI,KAAKqH,WAAagB,KAAKhB,WAC5BgB,KAAKrI,KAAK2Z,cAAgBtR,KAAKsR,cAC/B,IAAIsW,EAAmB,yBACvB5nB,KAAKrI,KAAKiwB,GAAoB5nB,KAAK4nB,GAEnC5nB,KAAKrI,KAAkB,eAAI,GAE/BqmB,EAASnhB,UAAUgrB,cAAgB,SAAU9kB,GACzC/C,KAAKiJ,QAAQ1Q,YAAU,OAAQwK,GAAOA,IAE1Cib,EAASnhB,UAAUirB,eAAiB,WAChC,IAAI1gB,EAAQpH,KACZA,KAAKrI,KAAKowB,aAAe,SAAUhlB,GAC1BrL,oBAAkBqL,EAAK3B,WAAY2B,EAAK3B,OAAOgH,UAAUC,SAAS,qBAChEtF,EAAK3B,OAAOgH,UAAUC,SAAS,uBAAyBtF,EAAK3B,OAAOgH,UAAUC,SAAS,kBAI9FjB,EAAM6B,Qd/qBQ,ec+qBqBlG,GAH/BA,EAAKiG,QAAS,GAKtBhJ,KAAKrI,KAAKgN,YAAc,SAAU5B,GAC9BqE,EAAMogB,iBAAmBpgB,EAAMzP,KAAK6vB,iBACpCpgB,EAAM6K,OAAO+V,EAAoBjlB,GACjCqE,EAAM6B,QAAQ+e,EAAoBjlB,IAEtC/C,KAAKrI,KAAKkN,cAAgB,SAAU9B,GAChCqE,EAAMogB,iBAAmBpgB,EAAMzP,KAAK6vB,iBACpCpgB,EAAM6B,QAAQgf,EAAsBllB,IAExC/C,KAAKrI,KAAKuwB,WAAa,SAAUnlB,GAC7BqE,EAAM8Z,oBACN9Z,EAAM6B,Qd9qBM,ac8qBqBlG,IAErC/C,KAAKrI,KAAKwwB,mBAAqB,SAAUplB,GACrCqE,EAAM6K,OAAO,gBAAiBlP,GAC9BA,EAAOqE,EAAMwM,aAEjB5T,KAAKrI,KAAKywB,iBAAmB,SAAUrlB,GACnCqE,EAAM6K,OAAO,cAAelP,GAC5BA,EAAOqE,EAAMwM,aAEjB5T,KAAKrI,KAAK0wB,eAAiB,SAAUtlB,GACjCqE,EAAM6B,QAAQyC,EAAuB3I,IAEzC/C,KAAKrI,KAAK2wB,kBAAoBtoB,KAAK6nB,cAAc5M,KAAKjb,MACtDA,KAAKrI,KAAK4wB,oBAAsBvoB,KAAK6nB,cAAc5M,KAAKjb,MACxDA,KAAKrI,KAAK6wB,yBAA2BxoB,KAAK6nB,cAAc5M,KAAKjb,MAC7DA,KAAKrI,KAAK8wB,uBAAyBzoB,KAAK6nB,cAAc5M,KAAKjb,MAC3DA,KAAKrI,KAAK+wB,kBAAoB1oB,KAAK6nB,cAAc5M,KAAKjb,MACtDA,KAAKrI,KAAKgO,kBAAoB3F,KAAK6nB,cAAc5M,KAAKjb,MACtDA,KAAKrI,KAAKgxB,eAAiB3oB,KAAK6nB,cAAc5M,KAAKjb,MACnDA,KAAKrI,KAAKixB,eAAiB5oB,KAAK6nB,cAAc5M,KAAKjb,MACnDA,KAAKrI,KAAKkxB,gBAAkB7oB,KAAK6nB,cAAc5M,KAAKjb,MACpDA,KAAKrI,KAAKmxB,eAAiB9oB,KAAK6nB,cAAc5M,KAAKjb,MACnDA,KAAKrI,KAAKoxB,gBAAkB/oB,KAAK6nB,cAAc5M,KAAKjb,MACpDA,KAAKrI,KAAKqxB,aAAehpB,KAAK6nB,cAAc5M,KAAKjb,MACjDA,KAAKrI,KAAKsxB,eAAiBjpB,KAAK6nB,cAAc5M,KAAKjb,MACnDA,KAAKrI,KAAKuxB,YAAclpB,KAAK6nB,cAAc5M,KAAKjb,MAChDA,KAAKrI,KAAKwxB,SAAWnpB,KAAK6nB,cAAc5M,KAAKjb,MAC7CA,KAAKrI,KAAKyxB,WAAappB,KAAK6nB,cAAc5M,KAAKjb,MAC/CA,KAAKrI,KAAK0xB,gBAAkBrpB,KAAK6nB,cAAc5M,KAAKjb,MACpDA,KAAKrI,KAAK2xB,WAAatpB,KAAK6nB,cAAc5M,KAAKjb,MAC/CA,KAAKrI,KAAK4xB,YAAcvpB,KAAK6nB,cAAc5M,KAAKjb,MAChDA,KAAKrI,KAAK6xB,WAAaxpB,KAAK6nB,cAAc5M,KAAKjb,MAC/CA,KAAKrI,KAAK8xB,YAAc,SAAU1mB,GAG9B,IAFA,IAAI+E,EAAOV,EAAMvI,UAEViJ,EAAK/E,EAAa,UAAGqF,UAAUC,SAAS,iBAC3CtF,EAAa,WAEjBqE,EAAM6B,Qd7rBO,cc6rBqBlG,IAEtC/C,KAAKrI,KAAK8pB,KAAO,WAEb,GADAra,EAAMzP,KAAKuS,GAAG,cAAe9C,EAAMif,gBAAiBjf,IAC/C1P,oBAAkB0P,EAAMge,cAAe,CAExChe,EAAMge,aAAehe,EAAMzP,KAAiB,aAAI,IAAI+xB,EAAWtiB,EAAMzP,QAG7EqI,KAAKrI,KAAKgyB,cAAgB3pB,KAAK6nB,cAAc5M,KAAKjb,MAClDA,KAAKrI,KAAKiyB,cAAgB5pB,KAAK6nB,cAAc5M,KAAKjb,MAClDA,KAAK6pB,6BACL7pB,KAAK8pB,qBACL9pB,KAAK+pB,2BACL/pB,KAAKgqB,yBACLhqB,KAAKiqB,qBACLjqB,KAAKkqB,sBAETlM,EAASnhB,UAAUstB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,IAAItwB,EAAI,EAAGA,EAAIqwB,EAAW1qB,MAAMnI,OAAQwC,IACrCswB,EACApa,YAAUma,EAAW1qB,MAAM3F,IAAK,iBAGhCoT,eAAaid,EAAW1qB,MAAM3F,IAAK,kBAI/CikB,EAASnhB,UAAUytB,cAAgB,WAC/B,MAAoB,SAAhBtqB,KAAK+lB,SAA8D,IAAzC/lB,KAAK+lB,OAAOne,WAAWpJ,QAAQ,MAOjEwf,EAASnhB,UAAUgtB,2BAA6B,WAC5C,IAAIziB,EAAQpH,KACZA,KAAKrI,KAAK4yB,UAAY,SAAUxnB,GAK5B,GAJAqE,EAAMojB,oBACNpjB,EAAM8Z,oBACN9Z,EAAMqjB,aAAarjB,EAAMvI,WACzBuI,EAAM6K,OAAO,eAAgBlP,GACzBtM,EAAa2Q,KAAW5N,EAAU4N,KAAWA,EAAMwN,gBAAiB,CACpE,IAAI8V,EAAMnyB,YAAU,sBAAuB6O,GAAO3J,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE0X,YAAYC,aACtB9d,OACH+d,WAAS,gCAAiCoV,EAAM,GAAItjB,GAExD,GAAIA,EAAMkjB,iBAAmBljB,EAAMnO,cAG/B,IAAK,IAFD6O,EAAOV,EAAM0P,kBAAkBhP,KAC/B6iB,KAAeriB,MAAMvL,KAAK+K,GACrBzQ,EAAIszB,EAAUpzB,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKiD,EAASqwB,EAAUtzB,IAAK,CACrBszB,EAAUtzB,GAAG4T,oBACb7D,EAAM+iB,cAAcQ,EAAUtzB,IAAI,GAEtC,MAIZ+P,EAAM6B,Qd5yBK,Yc4yBqBlG,GAChCqE,EAAMnO,eAAgB,GAG1B,IAAI+K,EAAWhE,KACfA,KAAKrI,KAAK6M,gBAAkB,SAAUzB,GAClC,IACIlD,EAActH,YAAU,SAAUwK,GACtC,IAAMtM,EAAauN,KAAcxK,EAAUwK,IAAc7M,EAAgB6I,QAA0B,SAAhBH,EAC/EmE,EAASiO,OAAO,oBAAqBlP,GACrCA,EAAQiB,EAAoB,iBAE3B,GAAiC,IAA7BA,EAASxG,SAASjG,QAAgBiC,EAAUwK,IAAaA,EAASrN,sBAAsBC,cAAa,CAC1G,IAAI6C,EAAKuK,EAASrN,WAClBqN,EAASuhB,WAAWnR,kBAAkB3a,EAAG9C,WAAW8E,MACpDsH,EAAKoQ,OAASnP,EAASrM,KAAKhB,WAAqB,WAAE8E,KAAOuI,EAASxG,SAiBvE,GAfK/G,EAAauN,IAAc7M,EAAgB6I,OAAUtI,oBAAkBsM,EAASrN,cAC7EqJ,KAAK6Z,YACLvE,WAAS,cAAc,EAAMvS,GAEjCiB,EAASiO,OAAO,gBAAiBlP,IAGrC3G,SAAO2G,EAAMiB,EAAS4P,aAClB5P,EAAS1E,sBACTyD,EAAKoQ,OAASpQ,EAAKoQ,OAAO7K,SAE1BtE,EAAS/K,gBACT+G,KAAK+Y,cAAcsF,sBAAwBra,EAASqa,wBAGnDre,KAAK6Z,WAAY,CAClB,IAAI+Q,EAAoB,IAAIC,WAI5B,OAHA7mB,EAASiF,QAAQ+G,EAAwBjN,EAAM,SAAU+nB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGf5qB,KAAKrI,KAAKkL,IAAM,SAAUG,EAAMD,GACxBqE,EAAMge,cACNhe,EAAMge,aAAaviB,IAAIG,EAAMD,KAIzCib,EAASnhB,UAAUqtB,mBAAqB,WACpC,IAAI9iB,EAAQpH,KACZA,KAAKrI,KAAKmN,aAAe,SAAU/B,GAC/B,IAAIioB,EAAkB,IAAIH,WAO1B,OANAzjB,EAAM6B,QAAQgiB,EAAqBloB,EAAM,SAAUmoB,GAC1CA,EAAYliB,QACb5B,EAAM6K,OAAOgZ,EAAqBloB,GAEtCioB,EAAgBD,QAAQG,KAErBF,GAEXhrB,KAAKrI,KAAKwzB,cAAgB,SAAUpoB,GAChC,IAAIioB,EAAkB,IAAIH,WAI1B,OAHAzjB,EAAM6B,QAAQ1Q,YAAU,OAAQwK,GAAOA,EAAM,SAAUqoB,GACnDJ,EAAgBD,QAAQK,KAErBJ,GAEXhrB,KAAKrI,KAAK8N,UAAY,SAAU1C,GAC5B,GAAKrL,oBAAkBqL,EAAKpE,OAAQoE,EAAKpE,IAAIyJ,UAAUC,SAAS,gBAAhE,CAIA,IAAI2iB,EAAkB,IAAIH,WAI1B,OAHAzjB,EAAM6B,QAAQoiB,GAAkBtoB,EAAM,SAAUuoB,GAC5CN,EAAgBD,QAAQO,KAErBN,EAPHjoB,EAAKiG,QAAS,IAU1BgV,EAASnhB,UAAUmtB,uBAAyB,WACxC,IAAI5iB,EAAQpH,KACZA,KAAKrI,KAAKiM,gBAAkB,SAAUb,GAC9BqE,EAAMmkB,iBACNnkB,EAAMmkB,iBAAkB,EACxBnkB,EAAMzP,KAAKhB,YAAewc,OAAQ/L,EAAM5J,SAAU2Q,MAAO9P,WAAS,QAAS+I,EAAMzP,KAAKhB,cAGtFyQ,EAAM6B,QAAQuiB,EAAwBzoB,IAG9C/C,KAAKrI,KAAKiO,SAAW,SAAU7C,GAC3B,GAAIqE,EAAMzP,KAAK8zB,oBAAqB,CAChC,IAAIC,EAAetkB,EAAMzP,KAAKg0B,kBAAkBC,YAAY5Y,QAAQiE,uBAAuB,cAAc,IACpGvf,oBAAkBg0B,IAAiBA,EAAazY,KAAO7L,EAAM4L,QAAQC,GAAK,6BAC3ElQ,EAAKiG,QAAS,GAGtB,IAAIgiB,EAAkB,IAAIH,WAO1B,OANAzjB,EAAM6B,QAAQ4iB,GAAiB9oB,EAAM,SAAU+oB,GACtCA,EAAa9iB,QACd5B,EAAM6K,OAAO4Z,GAAiBC,GAElCd,EAAgBD,QAAQe,KAErBd,GAEXhrB,KAAKrI,KAAKkO,UAAY,SAAU9C,GAC5BqE,EAAM6B,QAAQ8iB,GAAkBhpB,GAChCqE,EAAM6K,OAAO8Z,GAAkBhpB,IAEnC/C,KAAKrI,KAAKmO,SAAW,SAAU/C,GAC3B,IACIipB,EAAU,IAAInB,WAGlB,OAFA9nB,EAAS,QAAIipB,EACb5kB,EAAM6K,OAAOga,GAAiBlpB,GACvBipB,GAEXhsB,KAAKrI,KAAKsO,SAAW,SAAUlD,GAC3BqE,EAAM6B,QAAQijB,GAAiBnpB,GAC/BqE,EAAM6K,OAAOia,GAAiBnpB,IAElC/C,KAAKrI,KAAKyO,gBAAkB,SAAUrD,GAClCqE,EAAM6B,QAAQkjB,GAAwBppB,GACtCqE,EAAM6K,OAAOka,GAAwBppB,IAEzC/C,KAAKrI,KAAKwO,eAAiB,SAAUpD,GACjCqE,EAAM6B,QAAQmjB,GAAuBrpB,GACrCqE,EAAM6K,OAAOma,GAAuBrpB,IAExC/C,KAAKrI,KAAKoO,YAAc,SAAUhD,GAC9BqE,EAAM6B,QAAQojB,GAAoBtpB,GAClCqE,EAAM6K,OAAOoa,GAAoBtpB,IAErC/C,KAAKrI,KAAKuO,kBAAoB,SAAUnD,GACpCqE,EAAM6B,QAAQqjB,GAA0BvpB,GACxCqE,EAAM6K,OAAOqa,GAA0BvpB,IAE3C/C,KAAKrI,KAAKqO,YAAc,SAAUjD,GACE,SAA5BqE,EAAMvL,aAAaC,MACnBsL,EAAM6B,QAAQsjB,GAAoBxpB,GAEtCqE,EAAM6K,OAAOsa,GAAoBxpB,KAGzCib,EAASnhB,UAAU2tB,kBAAoB,WACnCxqB,KAAKwsB,yBAETxO,EAASnhB,UAAU4pB,iBAAmB,WAClC,IAAI9vB,EAAa,aAIjB,GAAIqJ,KAAKrJ,YAAcQ,EAAgB6I,MAAO,CAC1C,IAAIvB,EAAOuB,KAAKxC,SACZivB,EAAYpuB,WAAS,QAAS2B,KAAKrJ,YACvCqJ,KAAKrI,KAAKhB,YAAewc,OAAQ1U,EAAM0P,MAAOse,QAG9CzsB,KAAKrI,KAAKhB,WAAeqJ,KAAKrJ,sBAAsBC,cAChC,IAAIA,cAAYoJ,KAAKrJ,WAAWA,WAAYqJ,KAAKrJ,WAAW+1B,aAAc1sB,KAAKrJ,WAAWE,SAA1GmJ,KAAKxC,SAEb,GAAIwC,KAAKrJ,sBAAsBC,gBAAgBoJ,KAAKrJ,WAAWA,WAAW4sB,SAAWvjB,KAAKrJ,WAAW+C,OAAQ,CACzGsG,KAAKrI,KAAKhB,WAAWA,GAAY8E,KAAO9B,EAAYqG,KAAKrJ,WAAWA,GAAY8E,MAChFuE,KAAKrI,KAAKhB,WAAgB,MAAIqJ,KAAKrJ,WAAW+C,MAC9C,IAAIizB,EAAO3sB,KAAKrI,KAAKhB,WAChBe,oBAAkBsI,KAAKrI,KAAKhB,WAAgB,QAC7CqJ,KAAKrI,KAAKhB,WAAgB,MAAEse,KAAK,SAAUvX,GACvCivB,EAAKh2B,GAAY4sB,SAAU,EAC3BoJ,EAAoB,iBAAI,EACxBA,EAAKh2B,GAAY8E,KAAOiC,EAAEyV,OAC1BwZ,EAAY,QAAI,IAAIC,kBAKpC5O,EAASnhB,UAAUktB,yBAA2B,WAC1C,IAAI3iB,EAAQpH,KACZA,KAAKrI,KAAK8M,YAAc,SAAU1B,GACL,YAArBA,EAAKlD,aAA6BkD,EAAK3B,QAAU2B,EAAK3B,OAAO8gB,eAC7Dnf,EAAK3B,OAAO8gB,cAAc9Z,UAAUC,SAAS,yBAC7CtF,EAAKiG,QAAS,GAGE,YADFzQ,YAAU,cAAewK,IAEvCqE,EAAM6K,OAAO,qBAEjB7K,EAAM6K,OAAO,eAAiBpX,WAAYkI,IACrCtM,EAAa2Q,IAAW1P,oBAAkB0P,EAAM4G,eAAkB7W,EAAgBiQ,IAClC,IAA7CA,EAAMzP,KAAKK,eAAeV,QAAQC,QAAyD,IAAzC6P,EAAMzP,KAAKC,eAAeC,IAAIN,SACpF6P,EAAM6K,OAAO,gBAAkBzU,SAAU4J,EAAMzP,KAAKhB,aACpDyQ,EAAMzP,KAAKhB,WAAayQ,EAAMwM,YAAYT,QAE9C,IAAI6X,EAAkB,IAAIH,WAO1B,OANAzjB,EAAM6B,QAAQ4jB,EAAoB9pB,EAAM,SAAU+W,GACzCA,EAAW9Q,QACZ5B,EAAM6K,OAAOoZ,GAAkBvR,GAEnCkR,EAAgBD,QAAQjR,KAErBkR,GAEXhrB,KAAKrI,KAAK+M,eAAiB,SAAU3B,GACjCqE,EAAM6K,OAAO,iBAAkBlP,GAC/BqE,EAAM8Z,oBACN9Z,EAAM0lB,sBACmB,YAArB/pB,EAAKlD,aACLuH,EAAM6K,OAAO,qBAEjB7K,EAAM6K,OAAO,kBAAoBpX,WAAYkI,IACpB,QAArBA,EAAKlD,aAAgE,QAAtCuH,EAAMvL,aAAaQ,gBAAkE,WAAtC+K,EAAMvL,aAAaQ,gBACjG+K,EAAM6K,OAAO8a,GAAiBhqB,GAET,cAArBA,EAAKlD,aACLuH,EAAM6K,OAAO6J,GAAkB/Y,GAEnCqE,EAAM6K,OAAO,oBAAqBlP,GAClCqE,EAAM6B,QAAQgP,EAAuBlV,KAG7Cib,EAASnhB,UAAUitB,mBAAqB,WACpC,IAAI1iB,EAAQpH,KAERgE,EAAWhE,KACfA,KAAKrI,KAAKgO,kBAAoB,SAAU5C,GACpCqE,EAAM6B,QAAQ+jB,GAA0BjqB,GACxCqE,EAAM6K,OAAO+a,GAA0BjqB,IAE3C/C,KAAKrI,KAAKkP,gBAAkB,SAAU9D,GAClCqE,EAAM6K,OAAO,kBAAmBlP,GAChCqE,EAAM6B,QAAQgkB,GAAwBlqB,IAE1C/C,KAAKrI,KAAK2M,aAAe,SAAUvB,GAC3BrL,oBAAkBsI,KAAK6Z,YACvBvE,WAAS,cAAc,EAAOvS,GAG9BuS,WAAS,aAActV,KAAK6Z,WAAY9W,GAE5CiB,EAASzE,aAAakR,YAAY1N,IAEtC/C,KAAKrI,KAAK4M,cAAgB,SAAUxB,GAC5BrL,oBAAkBsI,KAAK6Z,YACvBvE,WAAS,cAAc,EAAOvS,GAG9BuS,WAAS,aAActV,KAAK6Z,WAAY9W,GAE5CiB,EAASzE,aAAaC,WAAWuD,IAErC/C,KAAKrI,KAAK4N,iBAAmB,SAAUxC,GACnCqE,EAAM6K,OAAOib,GAAyBnqB,GACtCqE,EAAM6B,QAAQikB,GAAyBnqB,IAE3C/C,KAAKrI,KAAK2N,gBAAkB,SAAUvC,GAClCqE,EAAM6K,OAAOkb,EAAwBpqB,GACrCqE,EAAM6B,QAAQkkB,EAAwBpqB,IAE1C/C,KAAKrI,KAAK4M,cAAgB,SAAUxB,GAChCqE,EAAM7H,aAAaC,WAAWuD,KAGtCib,EAASnhB,UAAUotB,mBAAqB,WACpC,IAAI7iB,EAAQpH,KACZA,KAAKrI,KAAKmP,mBAAqB,SAAU/D,GACrCqE,EAAM6B,QAAQmkB,GAA2BrqB,IAE7C/C,KAAKrI,KAAK01B,aAAe,SAAUtqB,GAC/BqE,EAAM6B,Qdv8BQ,ecu8BqBlG,IAEvC/C,KAAKrI,KAAK21B,QAAU,SAAUvqB,GACtBqE,EAAMzP,KAAK41B,OACXxqB,EAAKiG,QAAS,GAGlB5B,EAAM6K,OAAOub,GAAmBzqB,GAChCqE,EAAM6B,Qdr9BG,Ucq9BqBlG,KAElC/C,KAAKrI,KAAK81B,QAAU,SAAU1qB,GACtBqE,EAAMzP,KAAK41B,OACXxqB,EAAKiG,QAAS,GAGlB5B,EAAM6K,OAAOyb,GAAmB3qB,GAChCA,EAAKiG,QAAS,KAStBgV,EAASnhB,UAAU6oB,SAAW,WAC1B1lB,KAAKwmB,qBACLxmB,KAAK8nB,iBACLxS,WAAS,qBAAsBtV,KAAK2tB,mBAAoB3tB,KAAKrI,MAE7D2d,WAAS,mBAAoBtV,KAAQ,iBAAGA,KAAKrI,OAQjDqmB,EAASnhB,UAAU2oB,oBAAsB,WACrC,IAAKxlB,KAAK1I,QAAQC,SAAYyI,KAAKulB,WAAWpR,YAAc9b,OAAOC,KAAK0H,KAAKrJ,YAAYY,OAAS,CAC9FyI,KAAK1I,WAOL,IAAK,IAHDoB,EAASsH,KAAKrJ,WAAW,GAEzB2B,EAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/D2I,KAAK5C,aAAc4C,KAAK/C,iBAAiBuB,QAAQlG,EAAKjB,KACvD2I,KAAK1I,QAAQkB,KAAKF,EAAKjB,MAKvC2mB,EAASnhB,UAAU8qB,oBAAsB,WACrC,IAAIznB,KAaJ,OAXAA,EAAKykB,YAAc3kB,KAAKnE,aAAa8oB,YACrCzkB,EAAKD,aAAeD,KAAKnE,aAAaoE,aACtCC,EAAK0kB,cAAgB5kB,KAAKnE,aAAa+oB,cACvC1kB,EAAK7D,eAAsD,WAArC2D,KAAKnE,aAAaQ,eAA8B,SAAW,MACjF6D,EAAK0tB,oBAAsB5tB,KAAKnE,aAAa+xB,oBAC7C1tB,EAAK2tB,kBAAoB7tB,KAAKnE,aAAagyB,kBAC3C3tB,EAAKwS,SAAW1S,KAAKnE,aAAa6W,SAClCxS,EAAK4tB,wBAA0B9tB,KAAKnE,aAAaiyB,wBACjD5tB,EAAK6tB,iBAAmB/tB,KAAKnE,aAAakyB,iBAC1C7tB,EAAS,KAAIF,KAAKnE,aAAiB,KACnCqE,EAAK8tB,OAAShuB,KAAKnE,aAAamyB,OACxBhuB,KAAKnE,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDoE,EAAKpE,KAAOkE,KAAKnE,aAAaC,KAC9B,MACJ,IAAK,MACDoE,EAAKpE,KAAO,SACZ,MACJ,IAAK,OACDoE,EAAKpE,KAAO,SACZoE,EAAK2tB,mBAAoB,EAGjC,OAAO3tB,GAQX8d,EAASnhB,UAAU4qB,eAAiB,WAChC,GAAIznB,KAAKqkB,iBAAkB,CAEvB,IAAK,IADDpO,KACK5e,EAAI,EAAGA,EAAI2I,KAAKqkB,iBAAiB9sB,OAAQF,IAC9C,OAAQ2I,KAAKqkB,iBAAiBhtB,IAC1B,IAAK,SACL,KAAK2kB,mBAAiB+D,OAClB9J,EAAMzd,MAAOy1B,KAAMjuB,KAAKogB,KAAK8N,YAAY,UACrC9sB,OAAQ,aAAc6R,GAAIjT,KAAKgT,QAAQC,GAAK,4BAC5CgD,QAAUgY,KAAMjuB,KAAKogB,KAAK8N,YAAY,SAAUjb,GAAI,UAAagb,KAAMjuB,KAAKogB,KAAK8N,YAAY,SAAUjb,GAAI,YAC/G,MACJ,QACIgD,EAAMzd,KAAKwH,KAAKqkB,iBAAiBhtB,IAG7C,OAAO4e,EAGP,OAAO,MASf+H,EAASnhB,UAAUwqB,eAAiB,WAChC,GAAIrnB,KAAKokB,QAAS,CAGd,IAAK,IAFDnO,KACAkY,OAAc,EACT92B,EAAI,EAAGA,EAAI2I,KAAKokB,QAAQ7sB,OAAQF,IACrC,OAAQ2I,KAAKokB,QAAQ/sB,IACjB,IAAK,SACL,KAAK0kB,cAAYqS,OACbnY,EAAMzd,KAAK,UACX,MACJ,IAAK,QACL,KAAKujB,cAAYvM,MACbyG,EAAMzd,KAAK,SACX,MACJ,IAAK,YACL,KAAKujB,cAAYiE,UACbmO,EAAcnuB,KAAKogB,KAAK8N,YAAY,aACpCjY,EAAMzd,MAAOy1B,KAAME,EAAaA,YAAaA,EACzCE,WAAY,WAAYpb,GAAIjT,KAAKgT,QAAQC,GAAK,2BAClD,MACJ,IAAK,cACL,KAAK8I,cAAYkE,YACbkO,EAAcnuB,KAAKogB,KAAK8N,YAAY,eACpCjY,EAAMzd,MAAOy1B,KAAME,EACfA,YAAaA,EAAaE,WAAY,aAAcpb,GAAIjT,KAAKgT,QAAQC,GAAK,6BAE9E,MACJ,IAAK,SACL,KAAK8I,cAAYmE,UACbiO,EAAcnuB,KAAKogB,KAAK8N,YAAY,aACpCjY,EAAMzd,MACFy1B,KAAME,EAAaA,YAAaA,EAChCE,WAAY,WAAYpb,GAAIjT,KAAKgT,QAAQC,GAAK,wBAElD,MACJ,IAAK,UACL,KAAK8I,cAAYoE,WACbgO,EAAcnuB,KAAKogB,KAAK8N,YAAY,cACpCjY,EAAMzd,MACFy1B,KAAME,EAAaA,YAAaA,EAChCE,WAAY,YAAapb,GAAIjT,KAAKgT,QAAQC,GAAK,yBAEnD,MACJ,QACIgD,EAAMzd,KAAKwH,KAAKokB,QAAQ/sB,IAGpC,OAAO4e,EAGP,OAAO,MAGf+H,EAASnhB,UAAU8pB,eAAiB,SAAUrvB,GAC1C,IAAIqI,EAASrI,EACb0I,KAAK6iB,eAIL,IAAK,IAHDyL,EACAC,EACAC,KACKn3B,EAAI,EAAGA,EAAIsI,EAAOpI,OAAQF,IAAK,CACpC,IAAIkb,EAAavS,KAAKrI,KAAKyZ,eAAezR,EAAOtI,GAAG0U,KAGpD,GAFAwiB,EAAahc,MACb+b,KAC+B,iBAApBtuB,KAAK1I,QAAQD,GACpBk3B,EAAWlc,MAAQic,EAAejc,MAAQrS,KAAK1I,QAAQD,QAGvD,IAAK,IAAIo3B,EAAK,EAAGC,EAAKr2B,OAAOC,KAAKqH,EAAOtI,IAAKo3B,EAAKC,EAAGn3B,OAAQk3B,IAAM,CAChE,IAAIhR,EAAOiR,EAAGD,GACVp3B,IAAM2I,KAAKZ,iBAA4B,aAATqe,EAC9B6Q,EAAe7Q,GAAQ9d,EAAOtI,GAAGomB,GAEnB,YAATA,GACL8Q,EAAW9Q,GAAQzd,KAAK2mB,eAAehnB,EAAOtI,GAAGomB,IACjD6Q,EAAe7Q,GAAQ9d,EAAOtI,GAAGomB,IAGjC8Q,EAAW9Q,GAAQ6Q,EAAe7Q,GAAQ9d,EAAOtI,GAAGomB,GAIhEzd,KAAK6iB,YAAYrqB,KAAK,IAAIsH,EAAOwuB,IACjCE,EAAqBh2B,KAAK+1B,GAE9B,OAAOC,GASXxQ,EAASnhB,UAAU8xB,kBAAoB,SAAUC,GAG7C,IAAK,IADDC,GAAiB,EACZJ,EAAK,EAAGK,EAFAz2B,OAAOC,KAAKs2B,GAEeH,EAAKK,EAAav3B,OAAQk3B,IAAM,CACxE,IAAIhR,EAAOqR,EAAaL,GACxB,OAAQhR,GACJ,IAAK,UACDzd,KAAKrI,KAAKL,QAAU0I,KAAK2mB,eAAe3mB,KAAK1I,SAC7C,MACJ,IAAK,kBACD0I,KAAKrI,KAAKo3B,iBACV,MACJ,IAAK,cACD/uB,KAAKrI,KAAK+Y,YAAc1Q,KAAK0Q,YAC7B,MACJ,IAAK,eACD1Q,KAAKrI,KAAKgZ,aAAekW,sBAAoB7mB,KAAK2Q,cAClDke,GAAiB,EACjB,MACJ,IAAK,uBACD7uB,KAAKrI,KAAKyG,qBAAuB4B,KAAK5B,qBACtC,MACJ,IAAK,UACD4B,KAAKrI,KAAKysB,QAAUpkB,KAAKqnB,iBACzB,MACJ,IAAK,iBACDrnB,KAAKrI,KAAKmtB,eAAiB9kB,KAAK8kB,eAChC,MACJ,IAAK,oBACD9kB,KAAKrI,KAAKoQ,kBAAoB8e,sBAAoB7mB,KAAK+H,mBACvD,MACJ,IAAK,eACD/H,KAAKrI,KAAK2I,aAAeN,KAAKM,aAC9B,MACJ,IAAK,oBACDN,KAAKrI,KAAKq3B,kBAAoBhvB,KAAKgvB,kBACnC,MACJ,IAAK,eACDhvB,KAAKrI,KAAK4G,aAAesoB,sBAAoB7mB,KAAKzB,cAClD,MACJ,IAAK,iBACDyB,KAAKrI,KAAKC,eAAiBivB,sBAAoB7mB,KAAKpI,gBACpD,MACJ,IAAK,iBACDoI,KAAKrI,KAAKI,eAAiBiI,KAAKjI,eAChC,MACJ,IAAK,iBACIiI,KAAK/G,gBACN+G,KAAKrI,KAAKK,eAAiB6uB,sBAAoB7mB,KAAKhI,iBAExD,MACJ,IAAK,iBACDgI,KAAKrI,KAAK0I,eAAiBL,KAAKK,eAChC,MACJ,IAAK,sBACDL,KAAKrI,KAAK0H,oBAAsBW,KAAKX,oBACrC,MACJ,IAAK,aACDW,KAAKrI,KAAKugB,WAAa2O,sBAAoB7mB,KAAKkY,YAChD,MACJ,IAAK,0BACDlY,KAAKrI,KAAKkhB,wBAA0B7Y,KAAK6Y,wBACzC,MACJ,IAAK,aAID,GAHA7Y,KAAKma,cAAiBna,KAAKrJ,sBAAsBC,iBAAkBc,oBAAkBsI,KAAKrJ,WAAW+C,QAC9FsG,KAAKrJ,WAAWE,mBAAmB2sB,oBAC1CxjB,KAAKylB,gBAAgBzlB,KAAKrJ,YACtBqJ,KAAKma,YAAa,CAClB,GAAIhjB,EAAgB6I,MAAO,CACvB,IAAImO,EAAQ9P,WAAS,QAAS2B,KAAKrJ,YACnCqJ,KAAKrI,KAAKhB,YAAewc,OAAQnT,KAAKxC,SAAU2Q,MAAOA,OAEtD,CACD,IAAI1P,EAAOuB,KAAKrJ,WAChBqJ,KAAKrI,KAAKhB,WAAe8H,aAAgB7H,cACrB,IAAIA,cAAY6H,EAAK9H,WAAY8H,EAAKiuB,aAAcjuB,EAAK5H,SAAzEmJ,KAAKxC,SAETwC,KAAK5B,uBACL4B,KAAKrI,KAAKohB,cAAckW,qBAAsB,QAIlDjvB,KAAKymB,mBACDzmB,KAAK5B,uBACL4B,KAAKrI,KAAKohB,cAAcxO,sBACxBvK,KAAKrI,KAAKohB,cAAcmW,cAAc,MACtClvB,KAAKrI,KAAKohB,cAAcoW,eAGhC,MACJ,IAAK,QACDnvB,KAAKrI,KAAK0c,MAAQrU,KAAKqU,MACvB,MACJ,IAAK,oBACGua,EAAQnR,GACRzd,KAAKgiB,cAGLhiB,KAAK+hB,YAET,MACJ,IAAK,qBACD/hB,KAAKrI,KAAKy3B,UACV,MACJ,IAAK,YACDpvB,KAAKrI,KAAKyvB,UAAYpnB,KAAKonB,UAC3B,MACJ,IAAK,cACDpnB,KAAKrI,KAAK2a,YAAcuU,sBAAoB7mB,KAAKsS,aACjD,MACJ,IAAK,aACDtS,KAAKrI,KAAKqH,WAAagB,KAAKhB,WAC5B,MACJ,IAAK,gBACDgB,KAAKrI,KAAK2Z,cAAgBtR,KAAKsR,cAC/B,MACJ,IAAK,YACDtR,KAAKrI,KAAKwvB,UAAYnnB,KAAKmnB,UAC3B,MACJ,IAAK,SACIzvB,oBAAkBsI,KAAK+lB,SAAoC,iBAAjB/lB,KAAW,SAAgD,IAA9BA,KAAK+lB,OAAOvnB,QAAQ,OAC5FwB,KAAKgT,QAAQxY,MAAMurB,OAAS/lB,KAAK+lB,QAErC/lB,KAAKrI,KAAKouB,OAAS/lB,KAAK+lB,OACxB,MACJ,IAAK,QACIruB,oBAAkBsI,KAAK2M,QAAkC,iBAAhB3M,KAAU,QAA+C,IAA7BA,KAAK2M,MAAMnO,QAAQ,OACzFwB,KAAKgT,QAAQxY,MAAMmS,MAAQ3M,KAAK2M,OAEpC3M,KAAKrI,KAAKgV,MAAQ3M,KAAK2M,MACvB,MACJ,IAAK,SACD3M,KAAKrI,KAAK2oB,OAAStgB,KAAKsgB,OACxB,MACJ,IAAK,mBACDtgB,KAAKrI,KAAK6vB,iBAAmBxnB,KAAKwnB,iBAClC,MACJ,IAAK,eACDxnB,KAAKrI,KAAKqvB,aAAehnB,KAAKgnB,aAC9B,MACJ,IAAK,cACDhnB,KAAKrI,KAAKsvB,YAAcjnB,KAAKinB,YAC7B,MACJ,IAAK,iBACDjnB,KAAKrI,KAAKuvB,eAAiBlnB,KAAKknB,eAChC,MACJ,IAAK,sBACDlnB,KAAKrI,KAAK2H,oBAAsBU,KAAKV,oBACrC,MACJ,IAAK,mBACDU,KAAKrI,KAAK2sB,iBAAmBtkB,KAAKskB,iBAClC,MACJ,IAAK,iBACDtkB,KAAKrI,KAAK6sB,eAAiBxkB,KAAKwkB,eAChC,MACJ,IAAK,YACDxkB,KAAKrI,KAAK+uB,UAAY1mB,KAAK0mB,UAC3B,MACJ,IAAK,kBACD1mB,KAAKrI,KAAKyI,gBAAkBJ,KAAKI,gBACjC,MACJ,IAAK,gBACDJ,KAAKrI,KAAK4I,cAAgBP,KAAKO,cAC/B,MACJ,IAAK,mBACDP,KAAKrI,KAAK4vB,iBAAmBV,sBAAoB7mB,KAAKunB,kBACtD,MACJ,IAAK,gBACDvnB,KAAKrI,KAAKoa,cAAgB8U,sBAAoB7mB,KAAK+R,eACnD/R,KAAKrI,KAAKy3B,UACV,MACJ,IAAK,mBACDpvB,KAAKrI,KAAK0sB,iBAAmBrkB,KAAKynB,iBAClC,MACJ,IAAK,oBACDznB,KAAKrI,KAAK8sB,kBAAoBzkB,KAAKykB,kBACnC,MACJ,IAAK,iBACDzkB,KAAKrI,KAAK4sB,eAAiBsC,sBAAoB7mB,KAAKukB,gBACpD,MACJ,IAAK,kBACDvkB,KAAKrI,KAAK+vB,gBAAkBb,sBAAoB7mB,KAAK0nB,iBACrD,MACJ,IAAK,eACG1nB,KAAKrI,KAAK41B,QAA0C,WAAhCvtB,KAAKrI,KAAKkE,aAAaC,MAAqB8yB,EAAQnR,GAAM3hB,OACtD,SAAvB8yB,EAAQnR,GAAM3hB,MAA0C,QAAvB8yB,EAAQnR,GAAM3hB,OAChDkE,KAAKrI,KAAK03B,YAEdrvB,KAAKrI,KAAKkE,aAAemE,KAAK2nB,sBAGlCkH,GACA7uB,KAAKrI,KAAKy3B,YAUtBpR,EAASnhB,UAAU+M,QAAU,WACzB5J,KAAKsvB,iBACLtvB,KAAKklB,eACLpjB,EAAOjF,UAAU+M,QAAQ7M,KAAKiD,MAC1BA,KAAKrI,MACLqI,KAAKrI,KAAKiS,UAEV5J,KAAKulB,YACLvlB,KAAKulB,WAAW3b,UAMpB,IAAK,IAJDsa,GAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnD7sB,EAAI,EAAGA,EAAI6sB,EAAQ3sB,OAAQF,IAC5B2I,KAAKkkB,EAAQ7sB,MACb2I,KAAKkkB,EAAQ7sB,IAAM,MAG3B2I,KAAKgT,QAAQzF,UAAY,GACzBvN,KAAKrI,KAAO,MAShBqmB,EAASnhB,UAAU0yB,SAAW,WAC1BztB,EAAOjF,UAAU0yB,SAASxyB,KAAKiD,MAC/BA,KAAKrI,KAAK43B,YAQdvR,EAASnhB,UAAU2yB,eAAiB,WAWhC,IAAK,IAVDC,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACA/e,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG3Y,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvC2G,gBAAkBjH,WAAakwB,qBAI1BnwB,EAAI,EAAGA,EAAIo4B,EAAUl4B,OAAQF,IAElC,IAAK,IADDs4B,EAAgB3vB,KAAKyvB,EAAUp4B,IAC1Bo3B,EAAK,EAAGC,EAAKgB,EAAgBD,EAAUp4B,IAAKo3B,EAAKC,EAAGn3B,OAAQk3B,IAAM,QAEhEkB,EADGjB,EAAGD,IAKrB,OADAzuB,KAAK4vB,gBATiB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAQC5vB,KAAK1I,SAClC0I,KAAK6vB,aAAaJ,IAE7BzR,EAASnhB,UAAU+yB,eAAiB,SAAUE,EAAgBx4B,GAC1D,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACX0I,KAAK+vB,eAAeD,EAAgBx4B,EAAQD,IAC5C2I,KAAK4vB,eAAeE,EAAgBx4B,EAAQD,GAAGC,UAG/C0I,KAAK+vB,eAAeD,EAAgBx4B,EAAQD,KAIxD2mB,EAASnhB,UAAUkzB,eAAiB,SAAUD,EAAgBnwB,GAC1D,IAAK,IAAItI,EAAI,EAAGA,EAAIy4B,EAAev4B,OAAQF,WAChCsI,EAAOmwB,EAAez4B,IAC7BsI,EAAOlC,WAGfugB,EAASnhB,UAAU8mB,kBAAoB,SAAUjmB,GAC7C,GAAKhG,oBAAkBgG,EAAEsyB,SAAzB,CAGA,IAAI5uB,EAAS1D,EAAE0D,QACVA,EAAOgH,UAAUC,SAAS,sBAC3BjH,EAAOgH,UAAUC,SAAS,uBAA4BrI,KAAKiwB,gBAAmBjwB,KAAKrI,KAAK41B,QACxFvtB,KAAKiiB,sBAAsB7gB,GAE/BpB,KAAKiwB,gBAAiB,EACtBjwB,KAAKiS,OAAO,qBAAuB7Q,OAAQA,MAO/C4c,EAASnhB,UAAUgC,QAAU,WACzB,OAAOmB,KAAKrI,KAAKkH,WAOrBmf,EAASnhB,UAAUqzB,SAAW,WAC1B,OAAOlwB,KAAKrI,KAAKu4B,YAWrBlS,EAASnhB,UAAUszB,UAAY,SAAU1xB,EAAMvE,EAAOk2B,GAC9CpwB,KAAKjE,YACLiE,KAAKjE,WAAWo0B,UAAU1xB,EAAMvE,EAAOk2B,IAQ/CpS,EAASnhB,UAAUwyB,UAAY,WACvBrvB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWszB,aAQ7BrR,EAASnhB,UAAUwzB,SAAW,WACtBrwB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWs0B,YAW7BrS,EAASnhB,UAAUyzB,WAAa,SAAU5mB,EAAU2I,EAAOpY,GACnD+F,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWu0B,WAAW5mB,EAAU2I,EAAOpY,IAUzD+jB,EAASnhB,UAAU0zB,UAAY,SAAUr2B,EAAOuE,GAC5C,GAAIuB,KAAKrI,KAAKoE,WACV,GAAKrE,oBAAkBwC,GAMnB8F,KAAKrI,KAAKoE,WAAWw0B,UAAUr2B,EAAOuE,OANX,CAC3B,IAAI8nB,EAAWvmB,KAAKrI,KAAKwE,wBAAwBjC,GACjDkC,SAAOmqB,EAAU9nB,GACjBuB,KAAKrI,KAAKoE,WAAWw0B,UAAUr2B,EAAOqsB,KAelDvI,EAASnhB,UAAU2zB,aAAe,SAAUC,EAAWhyB,GAC/CuB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWy0B,aAAaC,EAAWhyB,IASrDuf,EAASnhB,UAAU6zB,UAAY,SAAU/xB,GACjCqB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAW20B,UAAU/xB,IAUvCqf,EAASnhB,UAAU8zB,SAAW,SAAUjnB,EAAU2I,GAC1CrS,KAAKjE,YACLiE,KAAKjE,WAAW40B,SAASjnB,EAAU2I,IAU3C2L,EAASnhB,UAAU+zB,mBAAqB,SAAU3a,EAAO4a,GACjD7wB,KAAKrI,KAAKm5B,eACV9wB,KAAKrI,KAAKm5B,cAAcC,YAAY9a,EAAO4a,IAQnD7S,EAASnhB,UAAUm0B,QAAU,WACrBhxB,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWi1B,WAU7BhT,EAASnhB,UAAUo0B,kBAAoB,SAAUC,EAAGC,GAC5CnxB,KAAKoxB,qBACLpxB,KAAKoxB,oBAAoBH,kBAAkBC,EAAGC,IAStDnT,EAASnhB,UAAUw0B,UAAY,SAAUviB,GACjC9O,KAAKrI,KAAKoE,YACViE,KAAKrI,KAAKoE,WAAWs1B,UAAUviB,IAQvCkP,EAASnhB,UAAUtB,wBAA0B,WACzC,OAAOyE,KAAKrI,KAAK4D,2BAWrByiB,EAASnhB,UAAUy0B,aAAe,SAAUz5B,EAAKwa,EAAOpY,GACpD+F,KAAKrI,KAAK25B,aAAaz5B,EAAKwa,EAAOpY,GACnC,IAAIyP,EAAW1J,KAAKrI,KAAKmH,wBAAwBjH,GAC7Ca,EAASsH,KAAK7D,wBAAwBuN,GACrChS,oBAAkBgB,IACnBmC,GAAaZ,MAAOvB,EAAQ4C,OAAQ,QAAU0E,KAAMA,KAAKhF,gBAAiBtC,EAAOwB,MAAO8F,KAAKrI,KAAK6vB,iBAAkBnV,IAW5H2L,EAASnhB,UAAU6B,WAAa,SAAU7G,EAAK2T,GAC3C,IAAItN,EAAiB8B,KAAK7D,wBACtBo1B,EAAavxB,KAAKrI,KAAK4D,0BAA0B,GACjDpB,EAAQ,EACRzB,KACJwF,EAAe6mB,KAAK,SAAU9qB,GAC1B,OAAIA,EAAMs3B,KAAgB15B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACfqR,EAAQrR,MAAQA,EAChBqR,EAAQtR,MAAQxB,EAAOwB,MACvBsR,EAAQlS,aAAeZ,EAAOY,aAC9BkS,EAAQpR,SAAW1B,EAAO0B,SAC1BoR,EAAQxS,SAAWN,EAAOM,SAC1BwS,EAAQ1S,WAAaJ,EAAOI,WAC5B0S,EAAQyB,cAAgBvU,EAAOuU,cAC/BzB,EAAQnS,gBAAkBX,EAAOW,gBACjCmS,EAAQlN,eAAiB5F,EAAO4F,eAChCkN,EAAQrS,SAAWT,EAAOS,SAC1B6G,KAAKrI,KAAK+G,WAAW7G,EAAK2T,IAQ9BwS,EAASnhB,UAAU20B,SAAW,SAAUC,GAChCzxB,KAAKrI,KAAK+5B,aACV1xB,KAAKrI,KAAK+5B,YAAYF,SAASC,IASvCzT,EAASnhB,UAAU80B,sBAAwB,SAAUruB,GAC7CtD,KAAK0xB,aACL1xB,KAAKrI,KAAK+5B,YAAYC,sBAAsBruB,IAUpD0a,EAASnhB,UAAU+0B,iBAAmB,SAAUloB,EAAUmC,GACtD,OAAO7L,KAAKrI,KAAKi6B,iBAAiBloB,EAAUmC,IAQhDmS,EAASnhB,UAAUie,iBAAmB,SAAUzI,GAC5C,OAAOwf,uBAAqB7xB,KAAK6iB,YAAa,SAAU5f,GACpD,GAAIA,EAAKoP,QAAUA,EACf,OAAOpP,IAGZ,IAQP+a,EAASnhB,UAAUuU,eAAiB,SAAUrF,GAC1C,OAAO8lB,uBAAqB7xB,KAAKrI,KAAKL,QAAS,SAAU2L,GACrD,GAAIA,EAAK8I,MAAQA,EACb,OAAO9I,IAGZ,IAOP+a,EAASnhB,UAAUi1B,oBAAsB,WACrC,OAAO9xB,KAAKrI,KAAKm6B,uBAOrB9T,EAASnhB,UAAUk1B,iBAAmB,WAClC,OAAO/xB,KAAKrI,KAAKo6B,oBAOrB/T,EAASnhB,UAAUm1B,sBAAwB,WACvC,OAAOhyB,KAAKrI,KAAKq6B,yBASrBhU,EAASnhB,UAAUo1B,YAAc,SAAU35B,EAAM45B,GAC7ClyB,KAAKrI,KAAKs6B,YAAY35B,EAAM45B,GAC5BlyB,KAAKkhB,qBASTlD,EAASnhB,UAAUs1B,YAAc,SAAU75B,EAAM85B,GAC7CpyB,KAAKrI,KAAKw6B,YAAY75B,EAAM85B,GAC5BpyB,KAAKkhB,qBAQTlD,EAASnhB,UAAUw1B,uBAAyB,SAAUhgB,GAClD,OAAOrS,KAAKrI,KAAK06B,uBAAuBhgB,IAQ5C2L,EAASnhB,UAAUy1B,uBAAyB,SAAUp4B,GAClD,OAAO8F,KAAKrI,KAAK26B,uBAAuBp4B,IAQ5C8jB,EAASnhB,UAAU01B,qBAAuB,SAAUxmB,GAChD,OAAO/L,KAAKrI,KAAK46B,qBAAqBxmB,IAQ1CiS,EAASnhB,UAAU21B,sBAAwB,SAAUngB,GACjD,OAAOrS,KAAKrI,KAAK66B,sBAAsBngB,IAQ3C2L,EAASnhB,UAAU0U,oBAAsB,SAAUxF,GAC/C,OAAO/L,KAAKrI,KAAK4Z,oBAAoBxF,IAQzCiS,EAASnhB,UAAU+C,WAAa,SAAU6yB,GAEtC,OADAzyB,KAAKkhB,kBAAkBlhB,KAAKrI,KAAKiI,WAAW6yB,IACrCzyB,KAAK6iB,aAEhB7E,EAASnhB,UAAUqkB,kBAAoB,SAAUvhB,GAC7C,IAAI0b,EACAhJ,EACAqgB,EAAch7B,oBAAkBiI,GAAUK,KAAKrI,KAAKiI,aAAeD,GACzC,IAA1BK,KAAKZ,iBAA0BY,KAAK1I,QAAQ0I,KAAKZ,mBAChD1H,oBAAkBsI,KAAK1I,QAAQ0I,KAAKZ,iBAAiBsT,YACtD2I,EAAOrb,KAAK1I,QAAQ0I,KAAKZ,iBAAiBsT,SAC1CL,EAAQrS,KAAK1I,QAAQ0I,KAAKZ,iBAAiBiT,OAE/CrS,KAAK6iB,eAGL,IAAK,IADD0L,EADAoE,GAAgB,EAEXt7B,EAAI,EAAGA,EAAIq7B,EAAYn7B,OAAQF,IAAK,CACzCk3B,KACA,IAAK,IAAIE,EAAK,EAAGC,EAAKr2B,OAAOC,KAAKo6B,EAAYr7B,IAAKo3B,EAAKC,EAAGn3B,OAAQk3B,IAAM,CACrE,IAAIhR,EAAOiR,EAAGD,GACdF,EAAW9Q,GAAQiV,EAAYr7B,GAAGomB,GAEtCzd,KAAK6iB,YAAYrqB,KAAK,IAAIsH,EAAOyuB,IAC7Blc,IAAUrS,KAAK6iB,YAAYxrB,GAAGgb,OAAW3a,oBAAkB2jB,IAAkB,KAATA,IACpErb,KAAK6iB,YAAYxrB,GAAGqb,SAAW2I,GAYvC,OARArb,KAAU,WAAK,WACXA,KAAKrI,KAAKL,QAAQC,SAAWyI,KAAK6iB,YAAYtrB,SAC9Co7B,GAAgB,GAEfA,GACD3yB,KAAK0d,eAAgBpmB,QAAS0I,KAAK6iB,cAAe,GAEtD7iB,KAAU,eAAIgd,EACPhd,KAAK6iB,aAOhB7E,EAASnhB,UAAU+1B,WAAa,WAC5B,OAAO5yB,KAAKrI,KAAKi7B,cAErB5U,EAASnhB,UAAU8hB,yBAA2B,WAE1C3e,KAAKrI,KAAa,qBAAEoK,MAAM/B,OAE9Bge,EAASnhB,UAAUg2B,aAAe,SAAUC,EAAcx7B,GAEtD0I,KAAKrI,KAAa,aAAEoK,MAAM/B,MAAO8yB,EAAcx7B,KAEnD0mB,EAASnhB,UAAUiwB,oBAAsB,WACrC9sB,KAAK0d,eAAgB1lB,eAAgBO,YAAU,aAAcyH,KAAKrI,KAAKK,kBAAmB,GAC1FgI,KAAK0d,eAAgB/M,aAAcpY,YAAU,aAAcyH,KAAKrI,KAAKgZ,gBAAiB,GACtF3Q,KAAK0d,eAAgB9lB,eAAgBW,YAAU,aAAcyH,KAAKrI,KAAKC,kBAAmB,GAC1FoI,KAAK0d,eAAgBnf,aAAchG,YAAU,aAAcyH,KAAKrI,KAAK4G,gBAAiB,IAO1Fyf,EAASnhB,UAAUia,gBAAkB,WACjC,OAAO9W,KAAKrI,KAAKmf,mBAOrBkH,EAASnhB,UAAUk2B,YAAc,WAG7B,IAAK,IAFDC,KACAlrB,EAAO9H,KAAKrI,KAAKo7B,cACZ17B,EAAI,EAAGe,EAAM0P,EAAKvQ,OAAQF,EAAIe,EAAKf,IACnCyQ,EAAKzQ,GAAG+Q,UAAUC,SAAS,iBAC5B2qB,EAAMx6B,KAAKsP,EAAKzQ,IAGxB,OAAO27B,GAQXhV,EAASnhB,UAAUV,sBAAwB,WACvC,OAAO6D,KAAKrI,KAAKkgB,iBAOrBmG,EAASnhB,UAAUb,gBAAkB,WACjC,OAAOgE,KAAKrI,KAAKoE,WAAWC,mBAOhCgiB,EAASnhB,UAAUoP,iBAAmB,WAClC,OAAOjM,KAAKrI,KAAKsU,oBAOrB+R,EAASnhB,UAAUo2B,eAAiB,WAChC,OAAOjzB,KAAKrI,KAAKs7B,kBAQrBjV,EAASnhB,UAAU+B,cAAgB,SAAU1E,GACzC,OAAO8F,KAAKrI,KAAKiH,cAAc1E,IAQnC8jB,EAASnhB,UAAUq2B,WAAa,SAAU9xB,GACtC,OAAOpB,KAAKrI,KAAKu7B,WAAW9xB,IAQhC4c,EAASnhB,UAAUs2B,oBAAsB,SAAU9gB,GAC/C,OAAOrS,KAAKrI,KAAKw7B,oBAAoB9gB,IAOzC2L,EAASnhB,UAAUiM,kBAAoB,WAEnC,IAAK,IADDsqB,KACK3E,EAAK,EAAGC,EAAK1uB,KAAK6iB,YAAa4L,EAAKC,EAAGn3B,OAAQk3B,IAAM,CAC1D,IAAI3iB,EAAM4iB,EAAGD,GACT3iB,EAAIunB,SACJD,EAAK56B,KAAKsT,GAGlB,OAAOsnB,GAOXpV,EAASnhB,UAAU+a,YAAc,WAC7BA,cAAY5X,KAAKgT,UAOrBgL,EAASnhB,UAAU4Y,YAAc,WAC7BA,cAAYzV,KAAKgT,UAOrBgL,EAASnhB,UAAUuyB,QAAU,WACzBpvB,KAAKie,sBACLje,KAAKylB,gBAAgBzlB,KAAKrJ,YACrBQ,EAAgB6I,QACjBA,KAAKrI,KAAKhB,WAAeqJ,KAAKrJ,sBAAsBC,cAChD,IAAIA,cAAYoJ,KAAKrJ,WAAWA,WAAYqJ,KAAKrJ,WAAW+1B,aAAc1sB,KAAKrJ,WAAWE,SAD3BmJ,KAAKxC,UAG5EwC,KAAKrI,KAAKy3B,WAQdpR,EAASnhB,UAAU4O,kBAAoB,WACnC,OAAOzL,KAAKszB,gBAAgBhkB,qBAQhC0O,EAASnhB,UAAU02B,kBAAoB,WACnC,IAAIC,KACAt3B,EAAqB8D,KAAK7D,wBAC9B,GAAK6D,KAAK0Q,YASN8iB,EAAiBt3B,OARjB,IAAK,IAAI7E,EAAI,EAAGA,EAAI6E,EAAmB3E,OAAQF,IAC3Cm8B,EAAeh7B,KAAK0D,EAAmB7E,IAClC6E,EAAmB7E,GAAG8B,WACvB9B,GAAK+B,EAAoB8C,EAAmB7E,IAAIE,QAO5D,OAAOi8B,GAOXxV,EAASnhB,UAAU0S,qBAAuB,WACtC,OAAOvP,KAAKszB,gBAAgB/jB,wBAQhCyO,EAASnhB,UAAUkO,iBAAmB,SAAU0oB,GAC5CzzB,KAAKszB,gBAAgBvoB,iBAAiB0oB,IAQ1CzV,EAASnhB,UAAUkyB,eAAiB,SAAU2E,GACtCh8B,oBAAkBg8B,IAAcA,GAChC1zB,KAAKrI,KAAKL,QAAU0I,KAAK2mB,eAAe3mB,KAAK1I,SAC7C0I,KAAKrI,KAAKo3B,kBAGV/uB,KAAKrI,KAAK+lB,eAAgBpmB,QAAS0I,KAAK2mB,eAAe3mB,KAAK1I,WAAY,IAQhF0mB,EAASnhB,UAAU82B,cAAgB,WAC/B3zB,KAAKrI,KAAKg8B,iBASd3V,EAASnhB,UAAUolB,sBAAwB,SAAU7gB,GACjD,GAA+B,UAA3BpB,KAAKnE,aAAaC,KAAkB,CAGpC,GAAIkE,KAAKhE,kBAAkBgE,KAAKme,gBAAgB5mB,QAC5CyI,KAAKhE,kBAAkBgE,KAAKoe,gBAAgB7mB,QAAUyI,KAAKhE,kBAAkBgE,KAAKqT,cAAc9b,OAAQ,CACxG,IAAIq8B,EAAY5zB,KAAKrI,KAAKoE,WAAc,UAGxC,OAFAiE,KAAKrI,KAAKoE,WAAqB,WAAE,aAAc63B,QAC/C5zB,KAAK6zB,cAAgBzyB,IAI7B,GAAIpB,KAAKsS,YAAa,CAClB,IAAIwhB,EAAU1yB,EAAO0J,QAAQ,kBAAkBoX,cAC3CxpB,EAASsH,KAAK7D,wBAAwB23B,EAAQpqB,UAC9CtI,EAAOgH,UAAUC,SAAS,oBAC1BrI,KAAK+zB,YAAYD,EAASp7B,GAG1BsH,KAAKg0B,UAAUF,EAASp7B,OAG3B,CAEGA,GADAo7B,EAAU9zB,KAAKrI,KAAKu7B,WAAW9xB,IACdoK,QACjBxL,KAAKV,qBAAsD,IAA/BjH,OAAOC,KAAKI,GAAQnB,SAChDmB,EAASsH,KAAK7D,wBAAwB23B,EAAQpqB,WAE9CtI,EAAOgH,UAAUC,SAAS,oBAC1BrI,KAAK+zB,YAAYD,EAAQn1B,IAAKjG,GAG9BsH,KAAKg0B,UAAUF,EAAQn1B,IAAKjG,KAWxCslB,EAASnhB,UAAUm3B,UAAY,SAAUr1B,EAAKjG,GAC1C,IAAI0O,EAAQpH,KACZtH,EAASsH,KAAKi0B,yBAAyBt1B,EAAKjG,IACvChB,oBAAkBiH,IAAQA,EAAIe,MAAM,GAAG0I,UAAUC,SAAS,kBAC3DrI,KAAKmqB,cAAcxrB,GAAK,GAE5B,IAAIoE,GAAStE,KAAM/F,EAAQiG,IAAKA,EAAKqK,QAAQ,GAC7ChJ,KAAKiJ,QdrsEU,YcqsEgBlG,EAAM,SAAUmxB,GAC3C,IAAKA,EAAclrB,OAAQ,CACvB5B,EAAM+sB,eAAe,SAAUx1B,EAAKjG,GAEpC,KAAMjC,EAAa2Q,IAAW5N,EAAU4N,OAAajQ,EAAgBiQ,KAAW1P,oBAAkBgB,EAAe,WAAK,CAClH,IAAI07B,GAAiB31B,KAAM/F,EAAQiG,IAAKA,GACxCyI,EAAMitB,4BACNjtB,EAAM6B,QAAQ6P,EAAiBsb,QAK/CpW,EAASnhB,UAAUw3B,0BAA4B,WACvCr0B,KAAKrI,KAAKsH,mBAAqB,GAC/Be,KAAKrI,KAAKohB,cAAcub,uBAGhCtW,EAASnhB,UAAUo3B,yBAA2B,SAAUt1B,EAAKjG,GAUzD,OATIsH,KAAK0Q,aAAkD,QAAnC1Q,KAAK2Q,aAAaC,cAA0B5Q,KAAK8iB,aAAeprB,oBAAkBgB,KACrGjC,EAAauJ,MACdtH,EAASsH,KAAKxC,SAASC,OAAO,SAAUC,GACpC,OAAOA,EAAErE,kBAGR3B,oBAAkBgB,KACvBA,EAASsH,KAAKrI,KAAKwE,wBAAwBwC,EAAI+K,WAE5ChR,GASXslB,EAASnhB,UAAUk3B,YAAc,SAAUp1B,EAAKjG,GAC5C,IAAI0O,EAAQpH,KAER+C,GAAStE,KADb/F,EAASsH,KAAKi0B,yBAAyBt1B,EAAKjG,GACjBiG,IAAKA,EAAKqK,QAAQ,GAC7ChJ,KAAKiJ,QdzuEW,acyuEgBlG,EAAM,SAAUwxB,GAC5C,IAAKA,EAAevrB,OAAQ,CACxB5B,EAAM+sB,eAAe,WAAYx1B,EAAKjG,GACtC,IAAI07B,GAAiB31B,KAAM/F,EAAQiG,IAAKA,GACxC,IAAKlI,EAAa2Q,KACdA,EAAMitB,4BACNjtB,EAAM6B,QAAQurB,EAAkBJ,GAC5BhtB,EAAMyR,yBAAyB,CACZzR,EAAMzP,KAAKi7B,aAAa6B,kBAAkBC,aAC7CttB,EAAMzP,KAAKi7B,aAAa6B,kBAAkBE,UACzBvtB,EAAMzP,KAAKi9B,iBAAkBxtB,EAAM2e,QAChE3e,EAAMzP,KAAKi7B,aAAa6B,kBAAkBI,SAAS,EAAGztB,EAAMzP,KAAKi9B,qBAazF5W,EAASnhB,UAAUi4B,cAAgB,SAAU36B,GACzC,IAAM6F,KAAK0Q,aAAkD,QAAnC1Q,KAAK2Q,aAAaC,cAA2B5Q,KAAK5B,wBAA0B3H,EAAauJ,MAAO,CACtH,IAAIyO,EAAMzO,KAAKrI,KAAKhB,WAAW8G,OAAO,SAAUC,GAI5C,OAHIA,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IACjCuD,EAAEvE,UAAW,GAEVuE,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IAE5C6F,KAAKg0B,UAAU,KAAMvlB,OAMhB,CAHDA,EAAMzO,KAAK+0B,iBAAiB56B,GAGhC,IAAK,IAFDwE,EAAMpG,YAAU,OAAQkW,GACxB/V,EAASH,YAAU,UAAWkW,GACzBpX,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B2I,KAAKg0B,UAAUr1B,EAAItH,GAAIqB,EAAOrB,MAI1C2mB,EAASnhB,UAAUk4B,iBAAmB,SAAU56B,GAC5C,IAAI2N,EAAO9H,KAAKnB,UAAUpB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAE4O,UAAU9N,QAAQ,QAAUrE,KAC9BuD,EAAEmN,cAAc,wBAA0BnN,EAAEmN,cAAc,wBAMtE,OADY3S,QAHE8H,KAAK7D,wBAAwBsB,OAAO,SAAUC,GACxD,OAAOA,EAAEvD,QAAUA,GAASuD,EAAErE,kBAEJyO,KAAMA,IASxCkW,EAASnhB,UAAUm4B,gBAAkB,SAAU76B,GAC3C,IAAM6F,KAAK0Q,aAAkD,QAAnC1Q,KAAK2Q,aAAaC,cAA2B5Q,KAAK5B,wBAA0B3H,EAAauJ,MAAO,CACtH,IAAItH,EAASsH,KAAKrI,KAAKhB,WAAW8G,OAAO,SAAUC,GAI/C,OAHIA,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IACjCuD,EAAEvE,UAAW,GAEVuE,EAAErE,iBAAmBqE,EAAEvD,QAAUA,IAE5C6F,KAAK+zB,YAAY,KAAMr7B,QAMvB,IAAK,IAHD+V,EAAMzO,KAAK+0B,iBAAiB56B,GAC5B2N,EAAOvP,YAAU,OAAQkW,GACzBvW,EAAUK,YAAU,UAAWkW,GAC1BpX,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC2I,KAAK+zB,YAAYjsB,EAAKzQ,GAAIa,EAAQb,IAG1C,IAAK2I,KAAKrI,KAAKohB,cAAckW,qBAAuBjvB,KAAK5B,sBAAwB4B,KAAKnB,WAC/EmB,KAAKzC,WAAWhG,SAAWyI,KAAKnB,UAAUtH,OAAQ,CAErDyI,KAAKrI,KAAKohB,cAAckc,YAAc,EACtCj1B,KAAKrI,KAAKohB,cAAsB,UAAK,IAQ7CiF,EAASnhB,UAAUklB,UAAY,WAC3B/hB,KAAKk1B,kBAAkB,WAO3BlX,EAASnhB,UAAUmlB,YAAc,WAC7BhiB,KAAKk1B,kBAAkB,aAE3BlX,EAASnhB,UAAUq4B,kBAAoB,SAAU55B,GAC7C,IAAIwM,EAAO9H,KAAKnB,UAAUpB,OAAO,SAAUC,GACvC,OAAOA,EAAEmN,cAAc,eAA4B,WAAXvP,EAAsB,WAAa,aAO/E,IALKwM,EAAKvQ,QAAUyI,KAAKnB,UAAUtH,QAC/BuQ,EAAKtP,KAAKwH,KAAKnB,UAAU,IAE7BmB,KAAK8iB,aAAc,EACnB9iB,KAAK+iB,eAAgB,GACf/iB,KAAK0Q,aAAkD,QAAnC1Q,KAAK2Q,aAAaC,cAA2B5Q,KAAK5B,wBAA0B3H,EAAauJ,OAM/G,GALAA,KAAKxC,SAASC,OAAO,SAAUC,GACvBA,EAAErE,kBACFqE,EAAEvE,SAAsB,aAAXmC,KAGjBwM,EAAKvQ,OACU,aAAX+D,EACA0E,KAAK+zB,YAAYjsB,EAAK,IAGtB9H,KAAKg0B,UAAUlsB,EAAK,SAGvB,GAAI9H,KAAK0Q,YAAa,CACvB,IAAIykB,EAAsBn1B,KAAK6Q,kBAC/B7Q,KAAK0d,eAAgB7M,mBAAmB,IAAQ,GAChD7Q,KAAKrI,KAAK+5B,YAAYF,SAAS,GAC/BxxB,KAAK0d,eAAgB7M,kBAAmBskB,IAAuB,SAInE,IAAK,IAAI99B,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IACd,aAAXiE,EACA0E,KAAK+zB,YAAYjsB,EAAKzQ,IAGtB2I,KAAKg0B,UAAUlsB,EAAKzQ,IAIhC2I,KAAK8iB,aAAc,EACnB9iB,KAAK+iB,eAAgB,GAEzB/E,EAASnhB,UAAUs3B,eAAiB,SAAU74B,EAAQqD,EAAKjG,EAAQke,GAC/D,IAIII,EAJAkd,GAAkBv1B,IAAKA,EAAKF,KAAM/F,EAAQmR,aAAehK,YAAavE,GACtEhC,EAAe0G,KAAK7D,wBAAwBsB,OAAO,SAAUC,GAC7D,OAAOA,EAAEY,iBAAmB5F,EAAOM,YAGlCvC,EAAauJ,OAAoB,WAAX1E,GAAuB0E,KAAKhF,iBAAmB7D,EAAgB6I,QAAU1G,EAAa/B,QAC7GyI,KAAKo1B,oBAAoBlB,GAE7B,IAAIrd,EAAW7W,KAAKnB,UACpB,GAAImB,KAAKsS,YAAa,CAClB,IAAIxK,EAAO9H,KAAK8W,kBAAkBhP,KAClC+O,KAAcvO,MAAMvL,KAAK+K,GAa7B,GAVIpQ,oBAAkBiH,GAElBA,EAAMkY,EADK7W,KAAK7D,wBAAwBqC,QAAQ9F,KAIpCiG,EAAIuN,aAAa,iBAE5BxU,oBAAkBiH,IACnBA,EAAIqO,aAAa,gBAA4B,WAAX1R,EAAsB,OAAS,WAE/D0E,KAAK0Q,aAAkD,QAAnC1Q,KAAK2Q,aAAaC,cAA2B5Q,KAAK5B,uBAA0B3H,EAAauJ,OAC3G7I,EAAgB6I,MAGnB,CACD,IAAIq1B,OAAgB,EACpB,GAAe,WAAX/5B,EAAqB,CAarB,GAZA+5B,EAAgB,YACXze,IACDle,EAAOS,UAAW,EAClB6G,KAAKie,mBAAmBvlB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBiH,KACnBqY,EAAYrY,EAAIsY,uBAAuB,sBAAsB,IAE7DL,IAAYlf,oBAAkBgB,EAAOsH,KAAK9G,sBAC1CR,EAAOsH,KAAK9G,qBAAuBxB,oBAAkBsf,KACrDA,EAAYrY,EAAIsY,uBAAuB,oBAAoB,IAE3Dvf,oBAAkBsf,GAClB,OAECA,EAAU5O,UAAUC,SAAS,qBAC9B4H,YAAU+G,GAAY,oBAE1B7J,eAAa6J,GAAY,0BAExB,CAaD,GAZAqe,EAAgB,OACXze,IAAWzf,EAAgB6I,QAC5BtH,EAAOS,UAAW,EAClB6G,KAAKie,mBAAmBvlB,EAAOM,UAAUG,SAAWT,EAAOS,UAE1DzB,oBAAkBiH,KACnBqY,EAAYrY,EAAIsY,uBAAuB,oBAAoB,IAE3DL,IAAYlf,oBAAkBgB,EAAOsH,KAAK9G,uBACzCR,EAAOsH,KAAK9G,qBAAuBxB,oBAAkBsf,KACtDA,EAAYrY,EAAIsY,uBAAuB,sBAAsB,IAE7Dvf,oBAAkBsf,GAClB,OAECA,EAAU5O,UAAUC,SAAS,uBAC9B4H,YAAU+G,GAAY,sBAE1B7J,eAAa6J,GAAY,oBAE7B,IAAIse,EAAaze,EAASpZ,OAAO,SAAU+D,GACvC,OAAOA,EAAE4G,UAAUC,SAAS,uBAAyB3P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAUlG,GARI1D,EAAauJ,QAAUxG,EAAUwG,MACjCA,KAAKkF,aAAa5J,EAAQqD,EAAKjG,GAGzBvB,EAAgB6I,QAAS1G,EAAa/B,QAAsB,aAAX+D,GACnD0E,KAAKu1B,YAAYj6B,EAAQqD,EAAKjG,GAGlCsH,KAAKsqB,kBAAoB3rB,EAAIe,MAAM,GAAG0I,UAAUC,SAAS,iBAIzD,IAAK,IAHDsiB,EAAY3qB,KAAKnB,UAGZxH,GAFLyQ,EAAO9H,KAAK8W,kBAAkBhP,MAClC6iB,KAAeriB,MAAMvL,KAAK+K,IACHvQ,OAAS,GAAGF,EAAI,EAAGA,IACtC,IAAKiD,EAASqwB,EAAUtzB,IAAK,CACzB,IACIm+B,EADQx1B,KAAK8W,kBACG4d,aAChBe,EAAez1B,KAAK4yB,aAAa6C,aACrCz1B,KAAKmqB,cAAcQ,EAAUtzB,GAAIm+B,GAAWC,GAC5C,MAIZz1B,KAAKiS,OAAO,qBAAuBqjB,WAAYA,EAAYh6B,OAAQ+5B,EAAe38B,OAAQA,EAAQiG,IAAKA,IACvGqB,KAAKyqB,aAAa5T,QAxElB7W,KAAKiS,OAAOyjB,GAAmCp6B,OAAQA,EAAQqD,IAAKA,EAAKjG,OAAQA,KA2EzFslB,EAASnhB,UAAUu4B,oBAAsB,SAAUlB,GAC/C,IAAI9sB,EAAQpH,KACR21B,EAAO,IAAI9K,WAEfqJ,EAA2B,cAAIyB,EAAK5K,QACpC,IAAIryB,EAASw7B,EAAcz1B,KAC3BuB,KAAKiJ,QAAQuiB,EAAwB0I,GACrCyB,EAAK3J,QAAQ/W,KAAK,WACd,GAAIif,EAAcrqB,UAAUtS,OAAQ,CAGhC,IAAK,IAFDiiB,EAAepS,EAAc,SAC7BlN,EAAQ,EACH7C,EAAI,EAAGA,EAAImiB,EAAYjiB,OAAQF,IACpC,GAAImiB,EAAYniB,GAAG+C,WAAa1B,EAAO0B,SAAU,CAC7CF,EAAQ7C,EACR,MAOH,IAJDu+B,EAASv3B,WAAS,SAAU+I,EAAMzQ,YAClCkT,EAAYlQ,EAAYu6B,EAAcrqB,WACtCgsB,EAAWn9B,EAAO0O,EAAMhK,eAAgB1E,EAAO0O,EAAMhK,cAAc7F,OAASsS,EAAUtS,OACtFmB,EAAO0O,EAAMhK,cAAc7F,OAA4BsS,EAAUtS,OACrE,IAASF,EAAI,EAAGA,EAAIw+B,EAAUx+B,IACtBqB,EAAO0O,EAAMhK,eACbw4B,EAAOn4B,OAAO,SAAUC,EAAGrG,GACnBqG,EAAE0J,EAAMnK,mBAAqBvE,EAAO0O,EAAMlK,YAC1C04B,EAAOz4B,OAAO9F,EAAG,KAIzBwS,EAAUxS,IACVwS,EAAUxS,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpC0P,EAAUxS,GAAG6C,MAAQsc,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC7M,EAAUxS,GAAGyB,WAAasD,YAAW1D,GACrCmR,EAAUxS,GAAG+C,SAAWgC,YAAWyN,EAAUxS,WACtCwS,EAAUxS,GAAGyB,WAAWQ,oBACxBuQ,EAAUxS,GAAG+C,SAAStB,WAC7B+Q,EAAUxS,GAAGiH,eAAiB5F,EAAOM,SACrC6Q,EAAUxS,GAAG2B,SAAWud,SAAOnP,EAAM4L,QAAQC,GAAK,UAClDqC,WAAS,sBAAwBzL,EAAUxS,GAAG2B,SAAU6Q,EAAUxS,GAAI+P,KACjE1P,oBAAkBmS,EAAUxS,GAAG+P,EAAMhK,gBACrCyM,EAAUxS,GAAG+P,EAAMwN,kBAAoBzd,EAAgBiQ,MACxDyC,EAAUxS,GAAGgC,iBAAkB,GAEnCmgB,EAAYrc,OAAOjD,EAAQ,EAAI7C,EAAGqB,EAAO0O,EAAMhK,eAAiB1E,EAAO0O,EAAMhK,cAAc/F,GAAK,EAAI,EAAGwS,EAAUxS,KAGjHmiB,EAAYrc,OAAOjD,EAAQ,EAAI7C,EAAG,GAG1CmiB,EAAYtf,GAAOkN,EAAMhK,cAAgByM,EACzC2P,EAAYtf,GAAOZ,aAAeuQ,EAClC2P,EAAYtf,GAAOf,UAAW,EAC9Bmc,WAAS,sBAAwBkE,EAAYtf,GAAOlB,SAAUwgB,EAAYtf,GAAQkN,GAClF,IAAK,IAAIrN,EAAI,EAAGA,EAAIm6B,EAAcrqB,UAAUtS,OAAQwC,IAChD67B,EAAOp9B,KAAK07B,EAAcrqB,UAAU9P,IAG5CqN,EAAMmkB,iBAAkB,EACxBnkB,EAAMzP,KAAKy3B,UACXhoB,EAAMitB,4BACNjtB,EAAM6B,QAAQ6P,EAAiBob,MAGvClW,EAASnhB,UAAUqI,aAAe,SAAU5J,EAAQqD,EAAKjG,GACrD,IAAIme,EAAW7W,KAAKnB,UACpB,GAAImB,KAAKsS,YAAa,CAClB,IAAIwjB,EAAS91B,KAAK8W,kBAAkBhP,KACpC+O,KAAcvO,MAAMvL,KAAK+4B,GAE7B,IAAI/yB,GAAStE,KAAM/F,EAAQiG,IAAKA,GAC5BmJ,KAIJ,GAHAA,EAAO+O,EAASpZ,OAAO,SAAU+D,GAC7B,OAAOA,EAAEqJ,cAAc,kBAAoBnS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXmB,EAAqB,CACrB0E,KAAKiS,OAAO+B,GAAuBtb,OAAQA,EAAQoP,KAAMA,EAAMsP,UAAWzY,IAC1E,IAAIo3B,GAAWp3B,IAAKA,EAAKF,KAAM/F,GAC3BoP,EAAKvQ,OAAS,IACdyI,KAAKq0B,4BACLr0B,KAAKiJ,QAAQ6P,EAAiBid,SAIlC/1B,KAAKg2B,qBAAsBt9B,OAAQA,EAAQoP,KAAMA,IACjD9H,KAAKq0B,4BACLr0B,KAAKiJ,QAAQurB,EAAkBzxB,IAGvCib,EAASnhB,UAAU04B,YAAc,SAAUj6B,EAAQqD,EAAKjG,GACpD,IAAIoP,EACAxO,EAAe0G,KAAK7D,wBAAwBsB,OAAO,SAAUC,GAC7D,OAAOA,EAAEY,iBAAmB5F,EAAOM,WAEnCgH,KAAKsqB,iBAAmB3rB,EAAIe,MAAM,GAAG0I,UAAUC,SAAS,kBACxDrI,KAAKmqB,cAAcxrB,GAAK,GAE5B,IAAIs3B,EACApf,EAAW7W,KAAKnB,UACpB,GAAImB,KAAKsS,YAAa,CAClB,IAAI4jB,EAASl2B,KAAK8W,kBAAkBhP,KACpC+O,KAAcvO,MAAMvL,KAAKm5B,GAE7B,IAAIb,EAA4B,WAAX/5B,EAAuB,YAAc,OACtD66B,EAAkBn2B,KAAKzE,0BAA0B,GACrD,GAAIyE,KAAKV,sBAAwBU,KAAK0Q,YAAa,CAC/C5I,KACA,IAAK,IAAIzQ,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IAAK,CAC1C,IAAIqS,EAAW1J,KAAKrI,KAAKmH,wBAAwBxF,EAAajC,GAAG8+B,IACjEruB,EAAKtP,KAAKwH,KAAKnB,UAAU6K,UAI7B5B,EAAO+O,EAASpZ,OAAO,SAAU+D,GAC7B,OAAOA,EAAEqJ,cAAc,kBAAoBnS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAGxF6F,KAAKhB,YAAcgB,KAAKsR,eAAiBtR,KAAKf,sBAC9Cg3B,EAAcj2B,KAAKo2B,iBAAiB34B,OAAO,SAAU+D,GACjD,OAAOA,EAAEqJ,cAAc,kBAAoBnS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAG5F,IAAS9C,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IACxBK,oBAAkBoQ,EAAKzQ,MACxByQ,EAAKzQ,GAAGmD,MAAMG,QAAU06B,GAEvB39B,oBAAkBu+B,KACnBA,EAAY5+B,GAAGmD,MAAMG,QAAU06B,GAEnCr1B,KAAKiS,OAAO,kBAAoBtT,IAAKmJ,EAAKzQ,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAXgC,IACrD5D,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/D6G,KAAKm0B,eAAe74B,EAAQwM,EAAKzQ,GAAIiC,EAAajC,IAAI,GAClD2I,KAAKsR,eAAiBtR,KAAKZ,kBAAoB1H,oBAAkBu+B,IACjEj2B,KAAKm0B,eAAe74B,EAAQ26B,EAAY5+B,GAAIiC,EAAajC,IAAI,KAK7E2mB,EAASnhB,UAAU4tB,aAAe,SAAU3iB,GACxC,GAAI9H,KAAKgnB,eAAiBhnB,KAAKsS,YAE3B,IAAK,IADD+jB,EAAkB,EACbh/B,EAAI,EAAGyQ,GAAQzQ,EAAIyQ,EAAKvQ,OAAQF,IAAK,CAC1C,IAAIi/B,EAAUxuB,EAAKzQ,GACW,SAA1Bi/B,EAAQ97B,MAAMG,UACV27B,EAAQluB,UAAUC,SAAS,aAC3B8E,eAAampB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQluB,UAAUC,SAAS,iBAAoBiuB,EAAQluB,UAAUC,SAAS,gBACxG4H,YAAUqmB,GAAU,YAEnBA,EAAQluB,UAAUC,SAAS,iBAAoBiuB,EAAQluB,UAAUC,SAAS,gBAC3EguB,OAMpBrY,EAASnhB,UAAU2vB,sBAAwB,WACvC,GAAIxsB,KAAKsS,YAAa,CAClB,IAAIxK,EAAO9H,KAAK8W,kBAAkBhP,KAClCA,KAAUQ,MAAMvL,KAAK+K,GACrB,IAAK,IAAIzQ,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IAAK,CAClC,IAAIk/B,EAAQv2B,KAAKrI,KAAKmf,kBAAkBhP,KAAKzQ,GAAGqI,MAAMM,KAAKZ,iBACvDT,EAAMmJ,EAAKzQ,GAEXm/B,GAAQ/3B,KADEuB,KAAKrI,KAAKogB,gBAAgB1gB,GAAGoH,KAChBE,IAAKA,EAAKc,KAAM82B,EAAO52B,OAAQK,KAAKJ,aAAaI,KAAKZ,kBACjFY,KAAKT,aAAaC,WAAWg3B,MAIzCxY,EAASnhB,UAAUm5B,oBAAsB,SAAUrf,EAAYC,GACtDA,IACDD,EAAWje,OAAOS,UAAW,GAIjC,IAAK,IADD4d,EADAjP,EAAO6O,EAAW7O,KAEbzQ,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IAAK,CAClCyQ,EAAKzQ,GAAGmD,MAAMG,QAAU,OACxB,IAAI87B,EAAe3uB,EAAKzQ,GAAGwT,cAAc,sBAIzC,GAHKnT,oBAAkB++B,IACnBz2B,KAAKrI,KAAK2f,gBAAgBof,SAASD,GAEnC3uB,EAAKzQ,GAAGwT,cAAc,6CAA8C,CACpE,IAAI8rB,EAAgB7uB,EAAKzQ,GAAGwT,cAAc,6CAC1CkM,EAAc/W,KAAKsS,YAActS,KAAKrI,KAAKwE,wBAAwB2L,EAAKzQ,GAAGqS,UACvE1J,KAAKrI,KAAKuf,oBAAoBpP,EAAKzQ,GAAG6U,aAAa,aAAazN,MAC/D/G,oBAAkBi/B,IAAkB5f,EAAY5d,WACjDgU,eAAawpB,GAAgB,oBAC7B1mB,YAAU0mB,GAAgB,uBAI9B,IAAK,IAFDC,KACAC,EAAQ72B,KAAKnB,UACRi4B,EAAM,EAAGA,EAAMD,EAAMt/B,OAAQu/B,IAC9BD,EAAMC,GAAKjsB,cAAc,kBAAoBkM,EAAY7c,MAAQ,SAAW6c,EAAY5c,MAAQ,KAChGy8B,EAAKp+B,KAAKq+B,EAAMC,IAGpBF,EAAKr/B,QAAUwf,EAAY5d,UAC3B6G,KAAKg2B,qBAAsBt9B,OAAQqe,EAAajP,KAAM8uB,IAAQ,MAS9E5Y,EAASnhB,UAAUgpB,YAAc,WAC7B7lB,KAAKkK,GAAG,gBAAiBlK,KAAK+2B,kBAAmB/2B,MACjDA,KAAKrI,KAAKuS,GAAG,cAAelK,KAAKqmB,gBAAiBrmB,OAEtDge,EAASnhB,UAAUk6B,kBAAoB,SAAUC,GAC7Ch3B,KAAK4T,YAAcojB,GAMvBhZ,EAASnhB,UAAUyyB,eAAiB,WAC5BtvB,KAAKwK,cAGTxK,KAAKyK,IAAI,gBAAiBzK,KAAK+2B,mBAC/B/2B,KAAKrI,KAAK8S,IAAI,cAAezK,KAAKqmB,mBAiBtCrI,EAASnhB,UAAUo6B,eAAiB,SAAUxG,EAAWyG,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIx3B,KAAKrI,KAAKs/B,eAAexG,EAAWyG,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAO5HxZ,EAASnhB,UAAU46B,eAAiB,WAChCz3B,KAAKrI,KAAK8/B,kBAUdzZ,EAASnhB,UAAU66B,0BAA4B,SAAUrlB,EAAOslB,GAC5D33B,KAAKrI,KAAK+/B,0BAA0BrlB,EAAOslB,IAS/C3Z,EAASnhB,UAAUulB,UAAY,SAAUloB,EAAO09B,GAC5C53B,KAAKrI,KAAKyqB,UAAUloB,EAAO09B,IAQ/B5Z,EAASnhB,UAAUg7B,WAAa,SAAUnqB,GACtC1N,KAAKrI,KAAKkgC,WAAWnqB,IAOzBsQ,EAASnhB,UAAU0lB,eAAiB,WAChCviB,KAAKrI,KAAK4qB,kBAQdvE,EAASnhB,UAAU2M,KAAO,SAAU/B,GAChCzH,KAAKsmB,gBAAgB9c,KAAK/B,IAU9BuW,EAASnhB,UAAU4M,MAAQ,SAAUhL,EAAMiL,EAAUC,GACjD3J,KAAKsmB,gBAAgB7c,MAAMhL,EAAMiL,EAAUC,IAS/CqU,EAASnhB,UAAUi7B,WAAa,SAAUzV,EAAWuV,GACjD53B,KAAKrI,KAAKmgC,WAAWzV,EAAWuV,IAOpC5Z,EAASnhB,UAAUk7B,gBAAkB,WACjC,OAAO/3B,KAAKrI,KAAKogC,mBASrB/Z,EAASnhB,UAAUm7B,wBAA0B,SAAUtuB,EAAUmC,GAC7D,OAAO7L,KAAKrI,KAAKqgC,wBAAwBtuB,EAAUmC,IAOvDmS,EAASnhB,UAAUmS,mBAAqB,WACpC,OAAOhP,KAAKrI,KAAKqX,sBAQrBgP,EAASnhB,UAAUqC,qBAAuB,SAAUhF,GAChD,OAAO8F,KAAKrI,KAAKuH,qBAAqBhF,IAO1C8jB,EAASnhB,UAAUu5B,eAAiB,WAChC,OAAOp2B,KAAKrI,KAAKy+B,kBAQrBpY,EAASnhB,UAAUoC,iBAAmB,WAClC,OAAOe,KAAKi4B,eAAej4B,KAAK1I,QAAS,GAAK0I,KAAKsR,eAEvD0M,EAASnhB,UAAUo7B,eAAiB,SAAU7E,EAAM8E,GAChD,IAAK,IAAIn+B,EAAI,EAAG3B,EAAMg7B,EAAK77B,OAAQwC,EAAI3B,EAAK2B,IACpCq5B,EAAKr5B,GAAGzC,QACR4gC,EAAMl4B,KAAKi4B,eAAe7E,EAAKr5B,GAAGzC,QAAS4gC,GAGvC9E,EAAKr5B,GAAGo+B,UACRD,IAIZ,OAAOA,GAOXla,EAASnhB,UAAUoL,sBAAwB,WACvC,OAAOjI,KAAKrI,KAAKsQ,yBAOrB+V,EAASnhB,UAAUu7B,0BAA4B,WAC3C,OAAOp4B,KAAKrI,KAAKygC,6BAQrBpa,EAASnhB,UAAU4L,mBAAqB,WACpC,OAAOzI,KAAKrI,KAAK8Q,sBAOrBuV,EAASnhB,UAAU2a,cAAgB,WAC/B,OAAS6gB,WAAYr4B,KAAKrI,KAAK6f,gBAAiB8gB,WAAYt4B,KAAKulB,aAUrEvH,EAASnhB,UAAU07B,YAAc,SAAUC,EAAaC,EAASrI,GAC7DpwB,KAAK04B,qBAAqBH,YAAYC,EAAaC,EAASrI,IAEhE,IAAI3R,EA2XJ,OA1XAvd,IACIc,WAAS,IACVgc,EAASnhB,UAAW,kBAAc,GACrCqE,IACIc,WAAS,IACVgc,EAASnhB,UAAW,qBAAiB,GACxCqE,IACIc,WAAS,aACVgc,EAASnhB,UAAW,gBAAY,GACnCqE,IACIc,gBACDgc,EAASnhB,UAAW,eAAW,GAClCqE,IACIc,WAAS,OACVgc,EAASnhB,UAAW,oBAAgB,GACvCqE,IACIc,WAAS,OACVgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,WAAS,IACVgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,WAAS,OACVgc,EAASnhB,UAAW,iBAAa,GACpCqE,IACIc,WAAS,OACVgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACIc,WAAS,OACVgc,EAASnhB,UAAW,0BAAsB,GAC7CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,2BAAuB,GAC9CqE,IACIc,gBACDgc,EAASnhB,UAAW,kBAAc,GACrCqE,IACIc,cACDgc,EAASnhB,UAAW,aAAS,GAChCqE,IACIc,cACDgc,EAASnhB,UAAW,kBAAc,GACrCqE,IACIc,WAAS,aACVgc,EAASnhB,UAAW,iBAAa,GACpCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,mBAAe,GACtCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,qBAAiB,GACxCqE,IACIy3B,aAAYv2B,IACb4b,EAASnhB,UAAW,wBAAoB,GAC3CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,0BAAsB,GAC7CqE,IACIy3B,aAAY1c,KACb+B,EAASnhB,UAAW,oBAAgB,GACvCqE,IACIy3B,aAAYC,oBACb5a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,cACDgc,EAASnhB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,sBAAkB,GACzCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,oBAAgB,GACvCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACIy3B,aAAY7a,KACbE,EAASnhB,UAAW,oBAAgB,GACvCqE,IACIiB,gBAAewb,KAChBK,EAASnhB,UAAW,kBAAc,GACrCqE,IACIy3B,aAAY/a,KACbI,EAASnhB,UAAW,oBAAgB,GACvCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,sBAAkB,GACzCqE,IACIc,cACDgc,EAASnhB,UAAW,sBAAkB,GACzCqE,IACIy3B,aAAYz2B,IACb8b,EAASnhB,UAAW,sBAAkB,GACzCqE,IACIy3B,aAAYxoB,KACb6N,EAASnhB,UAAW,sBAAkB,GACzCqE,IACIc,cACDgc,EAASnhB,UAAW,eAAW,GAClCqE,IACIc,cACDgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,WAAS,YACVgc,EAASnhB,UAAW,iBAAa,GACpCqE,IACIc,cACDgc,EAASnhB,UAAW,wBAAoB,GAC3CqE,IACIc,cACDgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACIc,cACDgc,EAASnhB,UAAW,mBAAe,GACtCqE,IACIc,WAAS,WACVgc,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACIc,WAAS,OACVgc,EAASnhB,UAAW,iBAAa,GACpCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,oBAAgB,GACvCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,mBAAe,GACtCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,sBAAkB,GACzCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,2BAAuB,GAC9CqE,IACIc,WAAS,SACVgc,EAASnhB,UAAW,cAAU,GACjCqE,IACIc,WAAS,SACVgc,EAASnhB,UAAW,aAAS,GAChCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,4BAAwB,GAC/CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,+BAA2B,GAClDqE,IACIy3B,aAAY5a,KACbC,EAASnhB,UAAW,8BAA0B,GACjDqE,IACIc,WAAS,QACVgc,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,eAAW,GAClCqE,IACI23B,WACD7a,EAASnhB,UAAW,YAAQ,GAC/BqE,IACI23B,WACD7a,EAASnhB,UAAW,iBAAa,GACpCqE,IACI23B,WACD7a,EAASnhB,UAAW,gBAAY,GACnCqE,IACI23B,WACD7a,EAASnhB,UAAW,kBAAc,GACrCqE,IACI23B,WACD7a,EAASnhB,UAAW,iBAAa,GACpCqE,IACI23B,WACD7a,EAASnhB,UAAW,gBAAY,GACnCqE,IACI23B,WACD7a,EAASnhB,UAAW,iBAAa,GACpCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,iBAAa,GACpCqE,IACI23B,WACD7a,EAASnhB,UAAW,gBAAY,GACnCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,gBAAY,GACnCqE,IACI23B,WACD7a,EAASnhB,UAAW,qBAAiB,GACxCqE,IACI23B,WACD7a,EAASnhB,UAAW,iBAAa,GACpCqE,IACI23B,WACD7a,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACI23B,WACD7a,EAASnhB,UAAW,oBAAgB,GACvCqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,qBAAiB,GACxCqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,oBAAgB,GACvCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,qBAAiB,GACxCqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,qBAAiB,GACxCqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,oBAAgB,GACvCqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,gBAAY,GACnCqE,IACI23B,WACD7a,EAASnhB,UAAW,kBAAc,GACrCqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,kBAAc,GACrCqE,IACI23B,WACD7a,EAASnhB,UAAW,kBAAc,GACrCqE,IACI23B,WACD7a,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,qBAAiB,GACxCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,oBAAgB,GACvCqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,wBAAoB,GAC3CqE,IACI23B,WACD7a,EAASnhB,UAAW,kBAAc,GACrCqE,IACI23B,WACD7a,EAASnhB,UAAW,mBAAe,GACtCqE,IACI23B,WACD7a,EAASnhB,UAAW,eAAW,GAClCqE,IACI23B,WACD7a,EAASnhB,UAAW,oBAAgB,GACvCqE,IACI23B,WACD7a,EAASnhB,UAAW,0BAAsB,GAC7CqE,IACI23B,WACD7a,EAASnhB,UAAW,eAAW,GAClCqE,IACIc,YAAU,IACXgc,EAASnhB,UAAW,wBAAoB,GAC3CqE,IACIy3B,aAAYvoB,KACb4N,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,wBAAoB,GAC3CqE,IACIc,YAAS,IACVgc,EAASnhB,UAAW,sBAAkB,GACzCqE,IACI23B,WACD7a,EAASnhB,UAAW,wBAAoB,GAC3CqE,IACI23B,WACD7a,EAASnhB,UAAW,8BAA0B,GACjDqE,IACI23B,WACD7a,EAASnhB,UAAW,0BAAsB,GAC7CqE,IACI23B,WACD7a,EAASnhB,UAAW,gCAA4B,GACnDqE,IACI23B,WACD7a,EAASnhB,UAAW,yBAAqB,GAC5CqE,IACI23B,WACD7a,EAASnhB,UAAW,2BAAuB,GAC9CqE,IACI23B,WACD7a,EAASnhB,UAAW,uBAAmB,GAC1CqE,IACI23B,WACD7a,EAASnhB,UAAW,yBAAqB,GAC5CmhB,EAAWS,EAAavd,IACpB43B,yBACD9a,IAEL+a,aC1yGEC,GAAyB,WAMzB,SAASA,EAAQtiC,GACb+L,OAAKC,OAAOu2B,WACZj5B,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBAgDT,OAxCA+uB,EAAQn8B,UAAU+F,cAAgB,WAC9B,MAAO,WAMXo2B,EAAQn8B,UAAUoN,iBAAmB,WACjCjK,KAAKtJ,OAAOwT,GAAG,iBAAkBlK,KAAKk5B,cAAel5B,OAEzDg5B,EAAQn8B,UAAU0N,oBAAsB,WAChCvK,KAAKtJ,OAAO8T,aAGhBxK,KAAKtJ,OAAO+T,IAAI,iBAAkBzK,KAAKk5B,gBAQ3CF,EAAQn8B,UAAU+M,QAAU,WACxB5J,KAAKuK,uBAETyuB,EAAQn8B,UAAUq8B,cAAgB,WAK9B,IAAK,IAFDC,EADA5mB,EAAavS,KAAKtJ,OAAkB,YAAEsJ,KAAKtJ,OAAO0I,iBAElDg6B,EAAcp5B,KAAKtJ,OAAOkJ,aACrBy5B,EAAI,EAAGA,EAAID,EAAY7hC,OAAQ8hC,IAAK,CAGzC,GAFsB9gC,YAAU,QAASga,KACjBha,YAAU,QAAS6gC,EAAYC,IACZ,CACvCF,EAAYE,EACZ,OAGRr5B,KAAKtJ,OAAOgnB,eAAgBte,gBAAiB+5B,IAAa,IAEvDH,KCzDPM,GAAwB,WAMxB,SAASA,EAAO5iC,GACZ+L,OAAKC,OAAO62B,UACZv5B,KAAKtJ,OAASA,EAgClB,OAxBA4iC,EAAOz8B,UAAUkkB,eAAiB,SAAUyY,GACxCx5B,KAAKtJ,OAAOiB,KAAKopB,eAAeyY,IAQpCF,EAAOz8B,UAAU+F,cAAgB,WAC7B,MAAO,UAQX02B,EAAOz8B,UAAU+M,QAAU,WACnB5J,KAAKtJ,OAAO8T,aAGhBxK,KAAKtJ,OAAOiB,KAAKspB,aAAarX,WAE3B0vB,KClCPG,GAAuB,WAMvB,SAASA,EAAM/iC,GAEXsJ,KAAK05B,SAAU,EAEf15B,KAAK25B,oBAAqB,EAE1B35B,KAAK45B,eAAgB,EACrBn3B,OAAKC,OAAOm3B,SACZ75B,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBA0kCT,OAxkCAwvB,EAAM58B,UAAUi9B,0BAA4B,SAAU7mB,GAWlD,OATIjT,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QAC3CsJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAGvCuE,KAAKtJ,OAAOiB,KAAKhB,YAEV8G,OAAO,SAAUC,GAC7C,OAAOA,EAAE1E,WAAaia,KAQ9BwmB,EAAM58B,UAAUoN,iBAAmB,WAC/BjK,KAAKtJ,OAAOwT,GAAGsjB,GAAmBxtB,KAAK+5B,WAAY/5B,MACnDA,KAAKtJ,OAAOwT,GAAGwjB,GAAmB1tB,KAAKkH,WAAYlH,MACnDA,KAAKtJ,OAAOwT,GAAG8vB,GAAgBh6B,KAAKi6B,UAAWj6B,MAC/CA,KAAKtJ,OAAOwT,GAAGgwB,GAAmBl6B,KAAKm6B,YAAan6B,OAUxDy5B,EAAM58B,UAAU07B,YAAc,SAAUC,EAAaC,EAASrI,GAC1D,IAAIgK,EAAOp6B,KAAKtJ,OAChB,GAAI8hC,EAAY,KAAOC,IAA8D,KAAlD,QAAS,QAAS,SAASj6B,QAAQ4xB,GAAtE,CACqB,UAAbA,IACApwB,KAAKq6B,aAAe,cAEP,UAAbjK,IACApwB,KAAKq6B,aAAe,iBAEP,UAAbjK,IACApwB,KAAKq6B,aAAe,iBAGxB,IAAK,IADD57B,KACKpH,EAAI,EAAGA,EAAImhC,EAAYjhC,OAAQF,IACpCoH,EAAKpH,GAAK2I,KAAKtJ,OAAOyF,wBAAwBq8B,EAAYnhC,IAE9D,IACI0L,GACAtE,KAAMA,EACN67B,UAAW7B,GAUf,GARKthC,EAAgB6I,KAAKtJ,SACtBsJ,KAAKu6B,SAASx3B,GAND,GASbq3B,EAAKjgB,cACLigB,EAAK58B,SAAWwC,KAAKw6B,aAAaJ,EAAK58B,WAE3CwC,KAAKtJ,OAAOiB,KAAKy3B,UACbpvB,KAAKtJ,OAAO4I,qBAA6C,kBAAtBU,KAAKq6B,aAAkC,CAC1E,IAAIngC,EAAQ8F,KAAKtJ,OAAO0I,gBAAkB,EACtCT,EAAMqB,KAAKtJ,OAAOmI,UAAU25B,EAAY,IACxCiC,EAAW13B,EAAKtE,KAAK,GACrBi8B,KACA5yB,KACJ4yB,EAAYliC,KAAKiiC,GACjB3yB,EAAKtP,KAAKmG,GACV,IACIpB,EAAaxE,EAAciH,KAAKtJ,OAAQqM,EAAKtE,KAAK,GAAiB,gBACnEk8B,EAAY36B,KAAKtJ,OAAOmI,UAAU45B,GACtCiC,EAAYliC,KAAK+E,GACjBuK,EAAKtP,KAAKmiC,GACV,IAAStjC,EAAI,EAAGA,EAAIqjC,EAAYnjC,OAAQF,IACpC2I,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAMi8B,EAAYrjC,GAAIoI,KAAMqI,EAAKzQ,GAAGqI,MAAMxF,GAC1CyF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,sBASjC45B,EAAM58B,UAAU29B,aAAe,SAAUhhB,GAUrC,IAAK,IATD5c,EAAU,SAAUvF,GAEpB,GADAmiB,EAAYniB,GAAG6C,MAAQ7C,GAClBK,oBAAkB8hB,EAAYniB,GAAGyB,YAAa,CAC/C,IAAI8hC,EAAgBphB,EAAY/b,OAAO,SAAUgB,GAC7C,OAAOA,EAAKzF,WAAawgB,EAAYniB,GAAGiH,iBACzC,GACHkb,EAAYniB,GAAGyB,WAAWoB,MAAQ0gC,EAAc1gC,QAG/C7C,EAAI,EAAGA,EAAImiB,EAAYjiB,OAAQF,IACpCuF,EAAQvF,GAEZ,OAAOmiB,GAEXigB,EAAM58B,UAAUo9B,UAAY,SAAUv8B,GAGlC,IAAK,IAFDm9B,EACAC,EAAcp9B,EAAExF,QACXb,EAAIqG,EAAExF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAwjC,EAAgBC,EAAYzjC,IACViH,eAAgB,CAC9B,IAAI5F,EAASoiC,EAAYr9B,OAAO,SAAUgB,GACtC,OAAOA,EAAKzF,WAAa6hC,EAAcv8B,iBAE3C,GAAI5F,EAAOnB,OAAQ,CACf,IAAI2C,EAAQxB,EAAO,GAAGY,aAAakF,QAAQq8B,GACvChiC,EAAeH,EAAO,IACX,IAAXwB,IACIxC,oBAAkBsI,KAAKtJ,OAAOwG,aAC9BrE,EAAaS,aAAa6D,OAAOjD,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAa+Y,yBAA0B,IAG/C5R,KAAK25B,oBAAqB,IAK1C,GAAIjiC,oBAAkBsI,KAAKtJ,OAAOC,cAAgBqJ,KAAKtJ,OAAOC,WAAWY,OAAQ,CAKxE,IAHDwjC,EADAX,EAAOp6B,KAAKtJ,OAEZskC,EAAgBt9B,EAAExF,QAEtB,IAASb,EADQqG,EAAExF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtC0jC,EAAkBC,EAAc3jC,GAShC,GAPKK,oBAAkB0iC,EAAKn9B,mBACxBm9B,EAAKh9B,aAAe,MAEnB1F,oBAAkBqjC,EAAgB3gC,WAClC/B,OAAOwE,UAAUC,eAAeC,KAAKg+B,EAAgB3gC,SAAUggC,EAAKh9B,gBACrE29B,EAAgB3gC,SAASggC,EAAKh9B,kBAE9B/E,OAAOwE,UAAUC,eAAeC,KAAKg+B,EAAiBX,EAAKh9B,eAC1D29B,EAAgBX,EAAKh9B,cAAe7F,SAAWyI,KAAK25B,qBACpDjiC,oBAAkB0iC,EAAKn9B,iBAExB,IAAK,IADD4M,EAAakxB,EAAgBX,EAAKh9B,cAC7BrD,EAAI,EAAGA,EAAI8P,EAAUtS,OAAQwC,KACW,IAAzCihC,EAAcx8B,QAAQqL,EAAU9P,MAChCihC,EAAc79B,OAAOpD,EAAG,EAAG8P,EAAU9P,IACrC8P,EAAU9P,GAAGK,SAAWgC,YAAWyN,EAAU9P,IAC7C1C,GAAK,GAIbgB,OAAOwE,UAAUC,eAAeC,KAAKg+B,EAAiBX,EAAKn9B,kBAA6D,MAAzC89B,EAAgBX,EAAKn9B,mBAChG+C,KAAK25B,qBACToB,EAAgB3gC,SAASggC,EAAKn9B,iBAAmB,YAC1C89B,EAAgBjiC,kBAChBiiC,EAAgBz8B,gBAEvB5G,oBAAkB0iC,EAAKzjC,cACvByjC,EAAKzjC,eAETyjC,EAAKzjC,WAAWwG,OA7BG,EA6BkB,EAAG49B,EAAgB3gC,UAE5DggC,EAAK1c,eAAgB/mB,WAAYyjC,EAAKzjC,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIyjC,EAAYvjC,OAAQF,IACpCie,WAAS,sBAAwBwlB,EAAYzjC,GAAG2B,SAAU8hC,EAAYzjC,GAAI2I,KAAKtJ,QAEnF,IAAIqM,GAAStE,KAAMf,EAAExF,QAASoiC,UAAW58B,EAAE+6B,SACvCz4B,KAAKtJ,OAAOC,sBAAsBC,eAClCoJ,KAAKuZ,aAAevZ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KACtDuE,KAAKxE,SAAWwE,KAAKtJ,OAAOC,WAAWA,WAAW8E,OAGlDuE,KAAKuZ,aAAevZ,KAAKtJ,OAAOiB,KAAKhB,WACrCqJ,KAAKxE,SAAWwE,KAAKtJ,OAAOC,YAE5Be,oBAAkBsI,KAAKq6B,gBACvBr6B,KAAKq6B,aAAe,gBAEpBt3B,EAAKu3B,UAAYt6B,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,EAAIyI,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,EAAIwL,EAAKu3B,UACxHv3B,EAAKtE,KAAOsE,EAAKtE,KAAKN,IAAI,SAAU9G,GAChC,OAAIA,EAAEgC,iBAAmB3B,oBAAkBL,EAAEyB,aACzCzB,EAAE8C,MAAQ,EACH9C,WAGAA,EAAEyB,kBACFzB,EAAEiH,eACTjH,EAAE8C,MAAQ,EACH9C,MAInB2I,KAAKu6B,SAASx3B,KAGtB02B,EAAM58B,UAAUs9B,YAAc,SAAUz8B,GACpC,IAAK,IAAIrG,EAAI,EAAGA,EAAIqG,EAAExF,QAAQX,OAAQF,IAClC2I,KAAK66B,cAAgBn9B,EAAExF,QAAQb,IAC3B2I,KAAK66B,cAAcxhC,iBAAmB2G,KAAK66B,cAAc/hC,aAE8B,IADvFkH,KAAKtJ,OAAOiB,KAAKhB,WACb6H,QAAQwB,KAAK85B,0BAA0B95B,KAAK66B,cAAcv8B,gBAAgB,KACjD,IAA7B0B,KAAK66B,cAAc1gC,QACnB6F,KAAKi7B,iBAIjBxB,EAAM58B,UAAUq+B,sBAAwB,WACpC,IAGIC,EACAC,EAJAP,EAAgB76B,KAAK66B,cACrBQ,EAAgBr7B,KAAKq7B,cACrBC,EAAQt7B,KAAKtJ,OAUjB,KANIykC,EADAn7B,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QAC/C4kC,EAAM3kC,WAAWA,WAAW8E,KAG5B6/B,EAAM3kC,aAGHe,oBAAkB2jC,IAAmBA,EAAcviC,YAAgBpB,oBAAkB2jC,EAAcjhC,WAiBtH,IAAK4F,KAAKtJ,OAAOuG,kBAAqBvF,oBAAkB2jC,IAAkBA,EAAcviC,aAC/D,eAAtBkH,KAAKq6B,cAAuD,kBAAtBr6B,KAAKq6B,cAGtC,CAAA,IADD/gC,EADS0G,KAAK85B,0BAA0BuB,EAAc/8B,gBAAgB,GAChDhF,aAC1B,IAASjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCgkC,EAAcviC,WAAWsB,SAAS4F,KAAKtJ,OAAO0G,cAAc/F,GAAKiC,EAAajC,GAAG+C,cAtByC,CAClI,IAAK,IAAI/C,EAAI,EAAGA,EAAIgB,OAAOC,KAAK6iC,GAAgB5jC,OAAQF,IAChD8jC,EAAe9jC,GAAG2I,KAAKtJ,OAAO0G,gBAAkBi+B,EAAcjhC,SAAS4F,KAAKtJ,OAAO0G,gBACnFg+B,EAAM/jC,GAGY,eAAtB2I,KAAKq6B,aACAr6B,KAAKtJ,OAAOwG,WACbi+B,EAAeh+B,OAAOi+B,EAAK,EAAGP,EAAczgC,UAGrB,kBAAtB4F,KAAKq6B,eACLr6B,KAAKtJ,OAAOwG,WACbi+B,EAAeh+B,OAAOi+B,EAAM,EAAG,EAAGP,EAAczgC,WAaxD4F,KAAKtJ,OAAOuG,kBACR49B,EAAc/hC,WACY,eAAtBkH,KAAKq6B,cAAuD,kBAAtBr6B,KAAKq6B,cAC3CQ,EAAc76B,KAAKtJ,OAAOuG,iBAAmBo+B,EAAcr7B,KAAKtJ,OAAOuG,iBACvE49B,EAAczgC,SAAS4F,KAAKtJ,OAAOuG,iBAAmBo+B,EAAcr7B,KAAKtJ,OAAOuG,mBAGhF49B,EAAc76B,KAAKtJ,OAAOuG,iBAAmBo+B,EAAcr7B,KAAKtJ,OAAOwG,WACvE29B,EAAczgC,SAAS4F,KAAKtJ,OAAOuG,iBAAmBo+B,EAAcr7B,KAAKtJ,OAAOwG,aAIpF29B,EAAczgC,SAAS4F,KAAKtJ,OAAOuG,iBAAmB,KACtD49B,EAAc76B,KAAKtJ,OAAOuG,iBAAmB,QAIzDw8B,EAAM58B,UAAU0+B,qBAAuB,SAAUvoB,GAC7C,IAAIwoB,EAAkC,kBAAtBx7B,KAAKq6B,aACjBr6B,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,qBAAqB1f,OAAS,GAAKyb,IACxD,IAArBA,EAAQtJ,UAAkB8xB,IAC3Bx7B,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,qBAAqB,GAAGkO,UAG3EsU,EAAM58B,UAAU4+B,oBAAsB,SAAUzoB,GAC5C,IAAI0oB,EAAa1oB,IAAYA,EAAQ5K,UAAUC,SAAS,eAAiB2K,EAAQ5K,UAAUC,SAAS,mBAChGszB,EAAiB3oB,IAAY0oB,GAC7B17B,KAAKtJ,OAAOkI,cAAcoB,KAAKtJ,OAAOmI,UAAUtH,OAAS,GAAG2U,aAAa,cACrE8G,EAAQ9G,aAAa,YACzBsvB,EAAYG,GAAwC,eAAtB37B,KAAKq6B,aACnCr6B,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,oBAAoB1f,OAAS,GAAKyb,IAAY2oB,GAAkBH,IAC3Gx7B,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,oBAAoB,GAAGkO,UAG1EsU,EAAM58B,UAAU++B,WAAa,SAAUj9B,EAAKzE,EAAO6I,GAC/C,IAAI84B,EAAS94B,EAAK3B,OAAS0J,UAAQ/H,EAAK3B,OAAQ,MAAQ,KACxDpB,KAAKq6B,kBAAerd,EACpB,IAAI8e,EAAoB,EACxB97B,KAAKu7B,qBAAqBM,GAC1B77B,KAAKy7B,oBAAoBI,GACzB,IAAK,IAAIxkC,EAAI,EAAGA,EAAI0L,EAAK+E,KAAKvQ,OAAQF,KAC7BK,oBAAkBmkC,IAAWA,EAAO3vB,aAAa,cAAgBnJ,EAAK+E,KAAKzQ,GAAG6U,aAAa,cACxFtB,eAAa7H,EAAK3B,OAAQ,mBAC9BpB,KAAKq6B,aAAe,UACpBr6B,KAAK+7B,gBAIb,IAAI3B,EAAOp6B,KAAKtJ,OACZslC,EAAS,EAETC,EAAa7B,EAAKhW,SAAWgW,EAAKhW,QAAQ7sB,OAC1C2kC,SAASC,eAAe/B,EAAKpnB,QAAQC,GAAK,6BAA6BmpB,aAAe,EAEtFC,EAAiBr8B,KAAKs8B,UAAUlC,EAAKpnB,SAErCupB,EAAgBnC,EAAKnuB,mBAAmBmwB,aAAeC,EAAeG,IAAMP,EAC5EtH,EAAYyF,EAAKxH,aAAa6B,kBAAkBE,UAC/Cj9B,oBAAkBmkC,KACnBC,EAAoBD,EAAOY,UAAY9H,GAI3C,IAEI+H,IAHJV,EAASF,EAAoBS,EAZd,GAaU59B,EAAI,GAAGy9B,aACHJ,GACH,EACtBW,EAAgBX,EAASU,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAEtCI,EADavkC,YAAU,sBAAuBwK,GAC5Bg6B,MAClBC,EAAeF,GAAQH,EACvBM,EAAsBH,EAAOH,GAAiBG,GAAQF,EACtDM,EAAsBJ,EAAOF,GAAoBE,GAAQD,EAC7D,GAAIG,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtBh9B,KAAKq6B,eACrBr6B,KAAKm9B,oBACLn9B,KAAKq6B,aAAe,aACpBr6B,KAAKo9B,0BACLp9B,KAAKq9B,kBAAkBxB,GACvB77B,KAAKs9B,kBACLt9B,KAAKy7B,oBAAoBI,GACzB77B,KAAKu9B,kBAAkBx6B,EAAK3B,SAE5B67B,GAA4C,YAAtBj9B,KAAKq6B,aAA4B,CACvDr6B,KAAKo9B,0BACL,IAAI9xB,KACA0H,EAAUlI,UAAQ/H,EAAK3B,OAAQ,OACnCkK,KAAgBhD,MAAMvL,KAAKiW,EAAQzK,iBAAiB,oDACrChR,OAAS,GACpByI,KAAKw9B,iBAAiBlyB,GAAY,EAAM,iBAE5CtL,KAAKy9B,iBAAiB5B,GACtB77B,KAAKq9B,kBAAkBxB,GACvB77B,KAAKq6B,aAAe,gBAEpB6C,GAA4C,YAAtBl9B,KAAKq6B,eAC3Br6B,KAAKs9B,kBACLt9B,KAAKo9B,0BACLp9B,KAAKm9B,oBACLn9B,KAAKq6B,aAAe,gBACpBr6B,KAAKy9B,iBAAiB5B,GACtB77B,KAAKu7B,qBAAqBM,GAC1B77B,KAAKu9B,kBAAkBx6B,EAAK3B,SAGpC,OAAOpB,KAAKq6B,cAEhBZ,EAAM58B,UAAUsgC,kBAAoB,WAChC,IAAIO,MACJA,KAAgBp1B,MAAMvL,KAAKiD,KAAKtJ,OAAOsc,QAAQzK,iBAAiB,oBACjDhR,OAAS,GACpByI,KAAKw9B,iBAAiBE,GAAY,EAAO,kBAGjDjE,EAAM58B,UAAUwgC,kBAAoB,SAAUM,GAC1C,IAAIC,EAAO59B,KAAKtJ,OAAOsc,QACnBonB,EAAOp6B,KAAKtJ,OAChB,GAAIinC,GAAoC,IAAvBA,EAAUj0B,WAAmBi0B,EAAUv1B,UAAUC,SAAS,cAAe,CACtF,IAAIw1B,EAAM79B,KAAKtJ,OAAO2V,cAAc,OAASC,UAAW,sBACpDwxB,EAAgB99B,KAAKtJ,OAAOuV,mBAC5B8xB,EAAgB,EAChB3D,EAAKhW,UACL2Z,EAAgB3D,EAAKtJ,cAAckN,aAAa5B,cAEpD,IAAI6B,GAAgBvmC,oBAAkBsI,KAAKtJ,OAAOivB,gBAAgBC,UAC9DqY,IACAJ,EAAIrjC,MAAMgiC,IAAMx8B,KAAKtJ,OAAOiB,KAAKqb,QAAQiE,uBAAuB,gBAAgB,GAAGmlB,aAC7E2B,EAAgB,MAE1BF,EAAIrjC,MAAMmS,MAAQsxB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAcl+B,KAAKm+B,iBAAmB,KAC1CL,EAAcv1B,iBAAiB,sBAAsBhR,QACtDumC,EAAcrwB,YAAYowB,KAItCpE,EAAM58B,UAAU4gC,iBAAmB,SAAUW,GACzC,IAAI1C,EAAa0C,IAAcA,EAAUh2B,UAAUC,SAAS,eACxD+1B,EAAUh2B,UAAUC,SAAS,mBACjC,GAAI+1B,IAAc1C,GAAc17B,KAAKtJ,OAAOkI,cAAcoB,KAAKtJ,OAAOmI,UAAUtH,OAAS,GAAG2U,aAAa,cACrGkyB,EAAUlyB,aAAa,YAAa,CACpC,IAAImyB,EAAer+B,KAAKtJ,OAAO2V,cAAc,OAASC,UAAW,qBAC7DgyB,EAAiBt+B,KAAKtJ,OAAOk8B,aACjCyL,EAAa7jC,MAAMmS,MAAQ3M,KAAKtJ,OAAOsc,QAAQkrB,YAAcl+B,KAAKm+B,iBAAmB,KAChFG,EAAe/1B,iBAAiB,qBAAqBhR,SACtD+mC,EAAel2B,UAAUsE,IAAI,uBAC7B4xB,EAAe7wB,YAAY4wB,GAC3BA,EAAa7jC,MAAM+jC,OAASv+B,KAAKm+B,iBAAmB,QAIhE1E,EAAM58B,UAAUshC,eAAiB,WAC7B,IAAIK,EAAax+B,KAAKtJ,OAAOk8B,aAAa6B,kBAC1C,OAAO+J,EAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FlF,EAAM58B,UAAUk/B,aAAe,WAC3B,IAAI6C,EAAW1C,SAASjlB,uBAAuB,qBAAqB,GAEpE,IADgB2nB,EAASr2B,iBAAiB,gBAAgBhR,SACvCyI,KAAKtJ,OAAOivB,gBAAgBC,SAAU,CACrD,IAAIiZ,EAAM3C,SAAS7vB,cAAc,OACjCjE,YAAUy2B,GAAM,wBAChBz2B,YAAUy2B,GAAM,UAAW,mBAC3B,IAAIC,EAAWF,EAAS/zB,cAAc,eAClCk0B,EAAUH,EAAS/zB,cAAc,cAAc0C,UAC/CuxB,IACAC,EAAUD,EAASvxB,UACnBuxB,EAASE,WAAWC,YAAYH,IAEpCF,EAAS/zB,cAAc,cAAc0C,UAAY,GACjD,IAAI2xB,EAAchD,SAAS7vB,cAAc,QACzC6yB,EAAY5yB,UAAY,aACxB4yB,EAAY1kC,MAAM2kC,YAAc,OAChCD,EAAY3xB,UAAYwxB,EACxBH,EAAS/zB,cAAc,cAAc4C,YAAYoxB,GACjDD,EAAS/zB,cAAc,cAAc4C,YAAYyxB,KAGzDzF,EAAM58B,UAAUygC,gBAAkB,WAC9B,IAAI8B,EAAYlD,SAASrxB,cAAc,gBACnCu0B,GACAA,EAAUja,UAGlBsU,EAAM58B,UAAU0gC,kBAAoB,SAAUn8B,GAC1C,IAAIkK,KACA0H,EAAUlI,UAAQ1J,EAAQ,OAC9BkK,EAAa0H,KAAa1K,MAAMvL,KAAKiW,EAAQzK,iBAAiB,uDAC/ChR,SACe,eAAtByI,KAAKq6B,eACLr6B,KAAKw9B,iBAAiBlyB,GAAY,EAAM,aACpCtL,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,wBAAwB1f,OAAS,GAC5EyI,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,wBAAwB,GAAGkO,UAGpD,kBAAtBnlB,KAAKq6B,cACLr6B,KAAKw9B,iBAAiBlyB,GAAY,EAAM,kBAIpDmuB,EAAM58B,UAAUugC,wBAA0B,WACtC,IAAIiC,MACJA,KAAY/2B,MAAMvL,KAAKiD,KAAKtJ,OAAOsc,QAAQzK,iBAAiB,+BACjDhR,SACPyI,KAAKw9B,iBAAiB6B,GAAQ,EAAO,gBACrCr/B,KAAKw9B,iBAAiB6B,GAAQ,EAAO,eAG7C5F,EAAM58B,UAAU2gC,iBAAmB,SAAU99B,EAAOgN,EAAKJ,GACrD,IAAK,IAAIjV,EAAI,EAAGe,EAAMsH,EAAMnI,OAAQF,EAAIe,EAAKf,IACrCqV,EACAhN,EAAMrI,GAAG+Q,UAAUsE,IAAIJ,GAGvB5M,EAAMrI,GAAG+Q,UAAU+c,OAAO7Y,IAItCmtB,EAAM58B,UAAUy/B,UAAY,SAAUtpB,GAClC,IAAIssB,EAAMtsB,EAAQusB,wBACdC,EAAOtD,SAASsD,KAChBC,EAAUvD,SAASwD,gBACnB/K,EAAYl6B,OAAOklC,aAAeF,EAAQ9K,WAAa6K,EAAK7K,UAC5DiL,EAAanlC,OAAOolC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDvD,EAAM8C,EAAI9C,IAAM7H,EAAYmL,EAC5BE,EAAOV,EAAIU,KAAOJ,EAAaG,EACnC,OAASvD,IAAKhmB,KAAKypB,MAAMzD,GAAMwD,KAAMxpB,KAAKypB,MAAMD,KAEpDvG,EAAM58B,UAAUk9B,WAAa,SAAUh3B,GACnC,IAAIq3B,EAAOp6B,KAAKtJ,OACZwpC,EAAelgC,KAAKtJ,OAAOsc,QAAQnI,cAAc,sBACrDq1B,EAAa1lC,MAAM2lC,OAAS,GAC5B,IAAItE,EAAS94B,EAAK3B,OAAS0J,UAAQ/H,EAAK3B,OAAQ,MAAQ,KACpDg/B,EAASvE,EAASA,EAAOnyB,UAAY,EACrCoxB,KACAO,EAAgBjB,EAAKj+B,wBAAwBikC,GAmBjD,GAlBApgC,KAAKs9B,kBACLt9B,KAAK05B,SAAU,EACV32B,EAAKtE,KAAK,GAIXq8B,EAAc/3B,EAAKtE,KAHnBq8B,EAAYtiC,KAAKuK,EAAKtE,OAKV,IAAZ2hC,EACApgC,KAAKqgC,mBAAmBvF,EAAaO,IAGrCr7B,KAAK05B,SAAU,EACf15B,KAAK+7B,iBAEJ3B,EAAKzU,gBAAgBC,UAAY5lB,KAAK05B,SACvCU,EAAK1B,qBAAqBkD,WAAW74B,EAAK+E,KAAMs4B,EAAQr9B,GAExDq3B,EAAKzU,gBAAgBC,SAAU,CAE/B,IADI0a,EAAc11B,eAAa7H,EAAK3B,OAAQ,gBACzBk/B,EAAYrtB,KAAOjT,KAAKtJ,OAAOivB,gBAAgBC,SAAU,CACvD0a,EAAYC,cAAc,GAChC7H,qBAAqBkD,WAAW74B,EAAK+E,KAAMs4B,EAAQr9B,IAGtE,GAAIA,EAAK3B,QAAU0J,UAAQ/H,EAAK3B,OAAQ,IAAMg5B,EAAKzU,gBAAgBC,UAAW,CAC1E,IAAI0a,GAAAA,EAAc11B,eAAa7H,EAAK3B,OAAQ,iBAExC8+B,EAAa1lC,MAAM2lC,OAAS,aAIxC1G,EAAM58B,UAAUqK,WAAa,SAAUnE,GACnC,IAAIq3B,EAAOp6B,KAAKtJ,OA6ChB,GA3CK0jC,EAAKzU,gBAAgBC,UAuBlB7iB,EAAK3B,QAAU0J,UAAQ/H,EAAK3B,OAAQ,IAAMg5B,EAAKzU,gBAAgBC,WAAahb,eAAa7H,EAAK3B,OAAQ,eACtGwJ,eAAa7H,EAAK3B,OAAQ,cAAc6R,KAAOmnB,EAAKzU,gBAAgBC,YACpEtQ,WAAS,eAAgBtV,KAAKq6B,aAAct3B,GAC5Cq3B,EAAKnxB,QjB9cA,UiB8cwBlG,IACxBA,EAAKiG,QAAUoxB,EAAKzU,gBAAgBC,WACrC5lB,KAAKwgC,aAAaz9B,GACdq3B,EAAKjgB,cACLigB,EAAK58B,SAAWwC,KAAKw6B,aAAaJ,EAAK58B,aA7B/CoN,eAAa7H,EAAK3B,OAAQ,eACtBpB,KAAKtJ,OAAOsc,QAAQnI,cAAc,kBAClC7K,KAAKq6B,aAAe,WAExB/kB,WAAS,eAAgBtV,KAAKq6B,aAAct3B,GAC5CA,EAAKu3B,UAAYv3B,EAAKu3B,YAAcv3B,EAAK09B,UAAYzgC,KAAK0gC,aAAa39B,EAAK3B,OAAO8gB,eAAiBnf,EAAKu3B,UACzGF,EAAKnxB,QjB3bA,UiB2bwBlG,GACxBA,EAAKiG,SACD7R,EAAgB6I,KAAKtJ,SACtBsJ,KAAKu6B,SAASx3B,GAEdq3B,EAAKjgB,cACLigB,EAAK58B,SAAWwC,KAAKw6B,aAAaJ,EAAK58B,WAE3C48B,EAAKziC,KAAKy3B,UACL13B,oBAAkB0iC,EAAKnuB,mBAAmBpB,cAAc,wBACzDuvB,EAAKnuB,mBAAmBpB,cAAc,sBAAsBsa,WAkB5EnlB,KAAKo9B,0BACLp9B,KAAKm9B,oBACAzlC,oBAAkBsI,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,qBAAqB,IAG7Evf,oBAAkBsI,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,oBAAoB,KACvFjX,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,oBAAoB,GAAGkO,SAHlEnlB,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,qBAAqB,GAAGkO,SAKnEnlB,KAAKtJ,OAAO4I,sBAAwBU,KAAKtJ,OAAOga,cAAgBhZ,oBAAkBqL,EAAKtE,KAAK,GAAa,YAAI,CAC7G,IAAIvE,EAAQ8F,KAAKtJ,OAAO0I,gBACxBlF,GAAgB,EAChB,IAAIi8B,EAAkBn2B,KAAKtJ,OAAO6E,0BAA0B,GACxDmO,EAAW1J,KAAKtJ,OAAOiB,KAAKmH,wBAAwBiE,EAAKtE,KAAK,GAAG03B,IACjEx3B,EAAMqB,KAAKtJ,OAAOmI,UAAU6K,GAC5BjL,EAAOsE,EAAKtE,KAAK,GACrB,GAA0B,kBAAtBuB,KAAKq6B,aAAkC,CACvC,IAAI3hC,KACAoP,KACJpP,EAAOF,KAAKiG,GACZqJ,EAAKtP,KAAKmG,GAEVF,EAAO1F,EAAciH,KAAKtJ,OAAQqM,EAAKtE,KAAK,GAAiB,gBAC7DiL,EAAW1J,KAAKtJ,OAAOiB,KAAKmH,wBAAwBL,EAAK03B,IACzD,IAAIwE,EAAY36B,KAAKtJ,OAAOmI,UAAU6K,GACtChR,EAAOF,KAAKiG,GACZqJ,EAAKtP,KAAKmiC,GACV,IAAK,IAAItjC,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B2I,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAM/F,EAAOrB,GAAIoI,KAAMqI,EAAKzQ,GAAGqI,MAAMxF,GACrCyF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,mBAGrB,IAAImX,EAAY2jB,EAAU1jB,uBAAuB,sBAAsB,GAClEvf,oBAAkBsf,KACnB7J,eAAa6J,GAAY,sBACzB/G,YAAU+G,GAAY,0BAI1BhX,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAMA,EAAMgB,KAAMd,EAAIe,MAAMxF,GAC5ByF,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,iBAClDS,YAAa,qBAK7B45B,EAAM58B,UAAU2jC,aAAe,SAAUz9B,GACrC,IAII49B,EAJAvG,EAAOp6B,KAAKtJ,OACZinC,EAAY7yB,UAAQ/H,EAAK3B,OAAQ,MACjCw/B,EAAcC,MAAM7gC,KAAK0gC,aAAa/C,IAAc,EAAI39B,KAAK0gC,aAAa/C,GAC1E2C,EAAc11B,eAAa7H,EAAK3B,OAAQ,cAE5C,GAAIk/B,GAAeA,EAAYrtB,KAAOjT,KAAKtJ,OAAOivB,gBAAgBC,WAAanvB,EAAauJ,KAAKtJ,UACzFS,EAAgB6I,KAAKtJ,QAAS,CAClCiqC,EAAaL,EAAYC,cAAc,GAGvC,IAAK,IAFDroC,EAAUkiC,EAAK3xB,qBACfgrB,KACKp8B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCo8B,EAAQp8B,GAAKa,EAAQb,GAAG6C,MAE5B,GAA6B,MAAzB8F,KAAKtJ,OAAOwG,YAAsBxF,oBAAkBsI,KAAKq6B,eAAuC,kBAAtBr6B,KAAKq6B,cAE1E,CAAA,IADDyG,KACJ,IAASzpC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC,GAAIa,EAAQb,GAAGgC,gBAAiB,CAC5BynC,EAAWtoC,KAAKN,EAAQb,IAExB,IAAK,IADD2G,EAAQ9F,EAAQb,GAAGiC,aACdw9B,EAAM,EAAGA,EAAM94B,EAAMzG,OAAQu/B,IAClCgK,EAAWtoC,KAAKwF,EAAM84B,IAE1B5+B,EAAU4oC,GAItB1G,EAAKnoB,OAAOioB,IAAqBzG,QAASA,EAASv7B,QAASA,IAC5DyoC,EAAW1uB,OAAO+nB,IAAkBvB,QAASmI,EAAa1oC,QAASA,IACnE,IAAI6oC,EAAqBJ,EAAWjI,qBAAqBnf,aACzD,IAAK7hB,oBAAkBqpC,GACnB,IAAS1pC,EAAI,EAAGA,EAAI0pC,EAAmBxpC,OAAQF,IAE3C,GADA0pC,EAAmB1pC,GAAG6C,MAAQ7C,GACzBK,oBAAkBqpC,EAAmB1pC,GAAGyB,YAAa,CACtD,IAAIkoC,EAAc3iC,WAAS,sBAAwB0iC,EAAmB1pC,GAAGiH,eAAiB,SAAUqiC,GACpGI,EAAmB1pC,GAAGyB,WAAWoB,MAAQ8mC,EAIrD5G,EAAKziC,KAAKy3B,UACVuR,EAAWhpC,KAAKy3B,UACZuR,EAAWhpC,KAAKhB,WAAWY,OAAS,IACpCopC,EAAWhpC,KAAKy3B,UACX13B,oBAAkBipC,EAAW10B,mBAAmBpB,cAAc,wBAC/D81B,EAAW10B,mBAAmBpB,cAAc,sBAAsBsa,SAEjEztB,oBAAkBipC,EAAW/N,aAAa/nB,cAAc,uBACzD81B,EAAW/N,aAAa/nB,cAAc,qBAAqBsa,UAInEhuB,EAAgB6I,KAAKtJ,UACrBiqC,EAAaL,EAAYC,cAAc,GACvCnG,EAAKziC,KAAKy3B,UACVuR,EAAWhpC,KAAKy3B,YAGxBqK,EAAM58B,UAAU6jC,aAAe,SAAU/C,GACrC,OAAOA,EAAYxrB,SAASwrB,EAAUzxB,aAAa,iBAAkB,IAAM,GAE/EutB,EAAM58B,UAAU9D,cAAgB,SAAUL,GACtC,IAAII,EAAaJ,EAAOI,WACxB,GAA0B,kBAAtBkH,KAAKq6B,aAAkC,CACvC,IAAI4G,EAAiBjhC,KAAKtJ,OAAO+R,qBAAqB,GACtDzI,KAAKq7B,cAAgBtiC,EAAciH,KAAKtJ,OAAQuqC,EAAenoC,WAAWE,UAE9E,GAA0B,kBAAtBgH,KAAKq6B,aAAkC,CAC3Br6B,KAAKtJ,OAAO+R,qBAAqB,GAAGtO,QAClCrB,EAAWqB,MACrB6F,KAAKq7B,cAAgBtiC,EAAciH,KAAKtJ,OAAQoC,EAAWE,UAG3DgH,KAAKjH,cAAcD,KAI/B2gC,EAAM58B,UAAU09B,SAAW,SAAUx3B,EAAMm+B,GACvC,GAA0B,YAAtBlhC,KAAKq6B,eAA+B5jC,EAAauJ,KAAKtJ,QAAS,CAC/D,IAAI0jC,EAAOp6B,KAAKtJ,OACZmkC,OAAgB,EAChBQ,OAAgB,EACpB,GAAI3jC,oBAAkBqL,EAAKu3B,WAAY,CACnC,IAAI5wB,EAAW0wB,EAAKnyB,wBAAwB,GAAK,EAC7CvP,EAAS0hC,EAAKj+B,wBAAwBuN,GAC1C1J,KAAKjH,cAAcL,QAGnBqK,EAAKu3B,UAAYv3B,EAAKu3B,YAAcv3B,EAAK09B,UAAYzgC,KAAK0gC,aAAa39B,EAAK3B,OAAO8gB,eAAiBnf,EAAKu3B,UACzGt6B,KAAKq7B,cAAgBjB,EAAKj+B,wBAAwB4G,EAAKu3B,WAE3D,IAAIQ,KACJO,EAAgBr7B,KAAKq7B,cAChBt4B,EAAKtE,KAAK,GAIXq8B,EAAc/3B,EAAKtE,KAHnBq8B,EAAYtiC,KAAKuK,EAAKtE,MAK1B,IAAI0P,EAAQ,EACR8vB,EAAej+B,KAAKtJ,OAAOivB,gBAAgBC,SAC/C5lB,KAAKmhC,eAAiBlD,EACjBA,EAIDj+B,KAAK45B,cAAgBqE,GAAgBj+B,KAAK25B,mBAH1C35B,KAAKqgC,mBAAmBvF,EAAaO,GAKzC,IAAI+F,EAAatG,EAAYvjC,OACxBG,oBAAkBsI,KAAKtJ,OAAOwG,YAC/B49B,EAAYuG,UAEhB,IAAK,IAAIhqC,EAAI,EAAGA,EAAI+pC,EAAY/pC,IAAK,CAGjC,GAFAwjC,EAAgBC,EAAYzjC,GAC5B2I,KAAK66B,cAAgBA,EACK,YAAtB76B,KAAKq6B,aAA4B,CAIjC,GAHKD,EAAKzU,gBAAgBC,WAAYsb,GAClClhC,KAAKi7B,gBAELj7B,KAAK66B,gBAAkB76B,KAAKq7B,cAAe,CAC3C,IAAIiG,EAAethC,KAAK0gC,aAAa39B,EAAK3B,OAAOmgC,aAAarf,eAC1D2e,MAAMS,KACNA,EAAethC,KAAK0gC,aAAa39B,EAAK3B,OAAO8gB,gBAEjDnf,EAAKu3B,UAAYgH,EACjBjG,EAAgBr7B,KAAKq7B,cAAgBr7B,KAAKtJ,OAAOyF,wBAAwB4G,EAAKu3B,WAElF,IAAIkH,EAAexhC,KAAKuZ,aAAa/a,QAAQ68B,GAE7C,GADAr7B,KAAKyhC,UAAUD,GACW,kBAAtBxhC,KAAKq6B,aAAkC,CAqBvC,GApBKgB,EAAchiC,iBAOf8U,EAAQnO,KAAK0hC,cAAcrG,EAAe,GACtCr7B,KAAKtJ,OAAOuG,iBACZ+C,KAAKxE,SAAS2B,OAAOqkC,EAAerzB,EAAQ,EAAG,EAAGnO,KAAK66B,cAAczgC,UAEzE4F,KAAKuZ,aAAapc,OAAOqkC,EAAerzB,EAAQ,EAAG,EAAGnO,KAAK66B,iBAVvD76B,KAAKtJ,OAAOuG,iBACZ+C,KAAKxE,SAAS2B,OAAOqkC,EAAe,EAAG,EAAGxhC,KAAK66B,cAAczgC,UAEjE4F,KAAKuZ,aAAapc,OAAOqkC,EAAe,EAAG,EAAGxhC,KAAK66B,gBASnDnjC,oBAAkB2jC,EAAcviC,qBACzB+hC,EAAc/hC,WACrB+hC,EAAc1gC,MAAQ,EAClB6F,KAAKtJ,OAAOuG,kBACZ49B,EAAc76B,KAAKtJ,OAAOuG,iBAAmB,OAGjD49B,EAAcxhC,gBAAiB,CAE/B2G,KAAK2hC,uBAAuB9G,EADhB,GAEZ76B,KAAK4hC,kBAAkB/G,EAAe2G,EAAerzB,EAAQ,GAEjE,GAAIktB,EAAcviC,WAAY,CAC1B,IACIQ,EADM0G,KAAK85B,0BAA0BuB,EAAc/8B,gBAChC,GAAGhF,aACtBuoC,EAAqBvoC,EAAakF,QAAQ68B,GAAiB,EAC/D/hC,EAAa6D,OAAO0kC,EAAoB,EAAGhH,GACvC76B,KAAKtJ,OAAOuG,kBACZ49B,EAAc76B,KAAKtJ,OAAOuG,iBAAmBo+B,EAAcr7B,KAAKtJ,OAAOuG,iBACvE49B,EAAc/hC,WAAauiC,EAAcviC,WACzC+hC,EAAc1gC,MAAQkhC,EAAclhC,QAIhD6F,KAAK8hC,WAAWN,GAEpB,GAAI9pC,oBAAkBmjC,EAAc/hC,YAAa,CAC7C,IAAIwgB,EAAgB8gB,EAAK78B,WACrBwkC,EAAiBzoB,EAAc9a,QAAQwB,KAAKq7B,eACtB,kBAAtBr7B,KAAKq6B,aACL/gB,EAAcnc,OAAO4kC,EAAiB,EAAG,EAAGlH,GAEjB,eAAtB76B,KAAKq6B,cACV/gB,EAAcnc,OAAO4kC,EAAgB,EAAGlH,GAGhDT,EAAK1B,qBAAqBwC,2BAItCzB,EAAM58B,UAAUilC,WAAa,SAAUlzB,GACnC,IAAIwrB,EAAOp6B,KAAKtJ,OACZ4C,EAAeF,EAAoB4G,KAAKq7B,eACxC2G,EAAsBtqC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBqX,EAAc,EAC3CtV,EAAa/B,OAASqX,EAAc,EACd,kBAAtB5O,KAAKq6B,eACDD,EAAKn9B,iBACL+C,KAAKxE,SAAS2B,OAAO6kC,EAAoB,EAAGhiC,KAAK66B,cAAczgC,UAC/D4F,KAAKuZ,aAAapc,OAAO6kC,EAAoB,EAAGhiC,KAAK66B,gBAGrD76B,KAAKuZ,aAAapc,OAAO6kC,EAAoB,EAAGhiC,KAAK66B,eAEzD76B,KAAKiiC,cACDjiC,KAAK66B,cAAcxhC,iBACnB2G,KAAK4hC,kBAAkB5hC,KAAK66B,cAAemH,KAIvDvI,EAAM58B,UAAU4kC,UAAY,SAAUD,GAClC,IAAIpH,EAAOp6B,KAAKtJ,OAChB,GAA0B,eAAtBsJ,KAAKq6B,aAA+B,CAQpC,GAPID,EAAKn9B,iBACL+C,KAAKxE,SAAS2B,OAAOqkC,EAAc,EAAGxhC,KAAK66B,cAAczgC,UAE7D4F,KAAK66B,cAAc/hC,WAAakH,KAAKuZ,aAAaioB,GAAc1oC,WAChEkH,KAAK66B,cAAcv8B,eAAiB0B,KAAKuZ,aAAaioB,GAAcljC,eACpE0B,KAAK66B,cAAc1gC,MAAQ6F,KAAKuZ,aAAaioB,GAAcrnC,MAC3D6F,KAAKuZ,aAAapc,OAAOqkC,EAAc,EAAGxhC,KAAK66B,eAC3C76B,KAAK66B,cAAcxhC,gBAAiB,CAEpC2G,KAAK4hC,kBAAkB5hC,KAAK66B,cAAe2G,GAC3CxhC,KAAK2hC,uBAAuB3hC,KAAK66B,cAFrB,GAIhB,GAAI76B,KAAKq7B,cAAcviC,WAAY,CAC/B,IACIQ,EADM0G,KAAK85B,0BAA0B95B,KAAKq7B,cAAc/8B,gBACrC,GAAGhF,aACtBuoC,EAAqBvoC,EAAakF,QAAQwB,KAAKq7B,eACnD/hC,EAAa6D,OAAO0kC,EAAoB,EAAG7hC,KAAK66B,kBAI5DpB,EAAM58B,UAAUolC,YAAc,WAC1B,IAAI7H,EAAOp6B,KAAKtJ,OACZmkC,EAAgB76B,KAAK66B,cACrBQ,EAAgBr7B,KAAKq7B,cACrB6G,EAAY9H,EAAKh9B,aAWrB,GAVKi+B,EAAchiC,kBACfgiC,EAAchiC,iBAAkB,EAChCgiC,EAAczpB,yBAA0B,GACpCla,oBAAkB2jC,EAAc/hC,eAAuD,IAAtC+hC,EAAc/hC,aAAa/B,UAC5E8jC,EAAc/hC,iBACT8gC,EAAKn9B,iBAAmBvF,oBAAkB2jC,EAAcjhC,SAAS8nC,MAClE7G,EAAcjhC,SAAS8nC,SAIT,kBAAtBliC,KAAKq6B,aAAkC,CACvC,IAAIvhC,EAAasD,YAAWi/B,GAQ5B,UAPOviC,EAAWQ,aAClBuhC,EAAc/hC,WAAaA,EAC3B+hC,EAAcv8B,eAAiB+8B,EAAcriC,SAC7CqiC,EAAc/hC,aAAa6D,OAAOk+B,EAAc/hC,aAAa/B,OAAQ,EAAGsjC,GACnEnjC,oBAAkBmjC,IAAmBT,EAAKn9B,iBAAoBvF,oBAAkB2jC,EAAcjhC,SAAS8nC,KACxG7G,EAAcjhC,SAASggC,EAAKh9B,cAAcD,OAAOk+B,EAAc/hC,aAAa/B,OAAQ,EAAGsjC,EAAczgC,UAEpGygC,EAAcxhC,gBAGd,CAEDwhC,EAAc1gC,MAAQkhC,EAAclhC,MAAQ,EAC5C6F,KAAK2hC,uBAAuB9G,EAFhB,QAHZA,EAAc1gC,MAAQkhC,EAAclhC,MAAQ,EAOhDkhC,EAAcliC,UAAW,IAGjCsgC,EAAM58B,UAAUo+B,cAAgB,WACxBj7B,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,SAChEsJ,KAAKuZ,aAAevZ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAC3DuE,KAAKxE,SAAWwE,KAAKtJ,OAAOC,WAAWA,WAAW8E,OAGlDuE,KAAKuZ,aAAevZ,KAAKtJ,OAAOiB,KAAKhB,WACrCqJ,KAAKxE,SAAWwE,KAAKtJ,OAAOC,YAEhC,IAAIwrC,EAAappC,EAAciH,KAAKtJ,OAAQsJ,KAAK66B,cAAc7hC,UAC/DgH,KAAKoiC,cAAcD,IAEvB1I,EAAM58B,UAAU+kC,kBAAoB,SAAUlpC,EAAQyV,GAClD,IAAIO,EACA0rB,EAAOp6B,KAAKtJ,OACZa,EAAS,EACb,IAAKmB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IACxBqX,EAAgBhW,EAAOY,aAAajC,GACpC8W,IACAisB,EAAK58B,SAASL,OAAOgR,EAAO,EAAGO,GAC/B4G,WAAS,sBAAwB5G,EAAc1V,SAAU0V,EAAe1O,KAAKtJ,QACzE0jC,EAAKn9B,iBACL+C,KAAKxE,SAAS2B,OAAOgR,EAAO,EAAGO,EAActU,UAE7CsU,EAAcrV,kBACd8U,EAAQnO,KAAK4hC,kBAAkBlzB,EAAeP,IAGtD,OAAOA,GAEXsrB,EAAM58B,UAAU8kC,uBAAyB,SAAUjpC,EAAQyB,GACvD,IACIuU,EADAnX,EAAS,EAGb,GADA4C,KACKzB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BqX,EAAgBhW,EAAOY,aAAajC,GACpC,IAAIkG,OAAa,EACb7E,EAAOI,aACPyE,EAAaxE,EAAciH,KAAKtJ,OAAQgC,EAAOI,WAAWE,WAE1DtB,oBAAkB6F,KAAgB7F,oBAAkBgB,EAAOI,cAC3DyE,EAAa7E,EAAOI,YAExB4V,EAAcvU,MAAQzB,EAAOI,WAAayE,EAAWpD,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFuU,EAAcrV,kBACdc,IACAA,EAAQ6F,KAAK2hC,uBAAuBjzB,EAAevU,IAG3D,OAAOA,GAEXs/B,EAAM58B,UAAUulC,cAAgB,SAAU1pC,GACtC,IACI/B,EADAyjC,EAAOp6B,KAAKtJ,OAGZC,EADAqJ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACnDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE7B,IAAIwrC,EAAazpC,EACbsC,GAAmBtD,oBAAkB0iC,EAAKn9B,iBAC1ColC,EAAiBriC,KAAK85B,0BAA0BqI,EAAW7jC,gBAAgB,GAC/E,GAAI6jC,EAAY,CACZ,GAAIA,EAAWrpC,WAAY,CACvB,IAAIQ,EAAe+oC,EAAiBA,EAAe/oC,gBAC/CgpC,EAAa,EACbhpC,GAAgBA,EAAa/B,OAAS,IACtC+qC,EAAahpC,EAAakF,QAAQ2jC,GAClCE,EAAe/oC,aAAa6D,OAAOmlC,EAAY,GAC1CtiC,KAAKtJ,OAAOuG,iBACbpC,GAAaZ,MAAOkoC,EAAY7mC,OAAQ,UAAY0E,KAAKtJ,OAAQsE,EAAiBmnC,EAAWjoC,MAAOioC,EAAWjoC,QAI3H,GAAIkgC,EAAKn9B,gBAAiB,CAClBklC,EAAW9oC,iBAAmB8oC,EAAW7oC,aAAa/B,OAAS,GAC/DyI,KAAKuiC,gBAAgBJ,GAKzB,IAAK,IAHD/G,OAAM,EACNoH,OAAM,EACNjpB,EAAe5iB,EACVU,EAAI,EAAGA,EAAIkiB,EAAahiB,OAAQF,IACjCkiB,EAAaliB,GAAG2I,KAAKtJ,OAAOwG,aAAeilC,EAAW/nC,SAAS4F,KAAKtJ,OAAOwG,aAC3Ek+B,EAAM/jC,GAGd,IAASA,EAAI,EAAGA,EAAI2I,KAAKuZ,aAAahiB,OAAQF,IACtC2I,KAAKuZ,aAAaliB,GAAG2I,KAAKtJ,OAAOwG,aAAeilC,EAAW/nC,SAAS4F,KAAKtJ,OAAOwG,aAChFslC,EAAMnrC,IAGD,IAAT+jC,IAAuB,IAAToH,IACd7rC,EAAWwG,OAAOi+B,EAAK,GACvBp7B,KAAKuZ,aAAapc,OAAOqlC,EAAK,IAGtC,IAAI5zB,EAAc5O,KAAKuZ,aAAa/a,QAAQ2jC,GAC5C,IAAK/H,EAAKn9B,gBAAiB,CACvB,IAAIwlC,EAAcziC,KAAKtJ,OAAO6G,WAAWiB,QAAQ2jC,IAC5B,IAAjBM,IACArI,EAAK78B,WAAWJ,OAAOslC,EAAa,GACpC9rC,EAAWwG,OAAOslC,EAAa,IAGvC,IAAqB,IAAjB7zB,IAAuBwrB,EAAKn9B,gBAE5B,IAAK,IADDk5B,EAAkBiE,EAAK7+B,0BAA0B,GAC5CxB,EAAI,EAAGA,EAAIiG,KAAKuZ,aAAahiB,OAAQwC,IACtCiG,KAAKuZ,aAAaxf,GAAGo8B,KAAqBgM,EAAWhM,KACrDvnB,EAAc7U,GAI1B,IAAKqgC,EAAKn9B,gBAAiB,CACvB,IAAIylC,EAAqB1iC,KAAK0hC,cAAcS,EAAY,GACxDniC,KAAKuZ,aAAapc,OAAOyR,EAAa8zB,EAAqB,GAE3DP,EAAWrpC,YAAcupC,GAAkBA,EAAe/oC,eAAiB+oC,EAAe/oC,aAAa/B,SACvG8qC,EAAelpC,UAAW,EAC1BkpC,EAAehpC,iBAAkB,EACjCgpC,EAAezwB,yBAA0B,KAIrD6nB,EAAM58B,UAAU0lC,gBAAkB,SAAU7pC,GACxC,IAAIgW,EACA0sB,EACAoH,EACA7rC,EAEAA,EADAqJ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACnDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDqX,EAAgBhW,EAAOY,aAAajC,GACpC,IAAIkiB,OAAe,EAEfA,EADAvZ,KAAKtJ,OAAOC,sBAAsBC,eAAe4C,EAAUwG,KAAKtJ,QACjDsJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KAGlCuE,KAAKtJ,OAAOC,WAE/B,IAAK,IAAIgsC,EAAM,EAAGA,EAAMppB,EAAahiB,OAAQorC,IACrCppB,EAAaopB,GAAK3iC,KAAKtJ,OAAOwG,aAAewR,EAActU,SAAS4F,KAAKtJ,OAAOwG,aAChFk+B,EAAMuH,GAGd,IAAK,IAAIC,EAAM,EAAGA,EAAM5iC,KAAKuZ,aAAahiB,OAAQqrC,IAC9C,GAAI5iC,KAAKuZ,aAAaqpB,GAAK5iC,KAAKtJ,OAAOwG,aAAewR,EAActU,SAAS4F,KAAKtJ,OAAOwG,WAAY,CACjGslC,EAAMI,EACN,OAGK,IAATxH,IAAuB,IAAToH,IACd7rC,EAAWwG,OAAOi+B,EAAK,GACvBp7B,KAAKuZ,aAAapc,OAAOqlC,EAAK,IAE9B9zB,EAAcrV,iBACd2G,KAAKuiC,gBAAgB7zB,KAIjC+qB,EAAM58B,UAAU6kC,cAAgB,SAAUhpC,EAAQyV,GAC9C,IAAIO,EACJ,IAAKhW,EAAOW,gBACR,OAAO,EAEX,IAAK,IAAIhC,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C8W,KADAO,EAAgBhW,EAAOY,aAAajC,IAElBgC,kBACd8U,EAAQnO,KAAK0hC,cAAchzB,EAAeP,IAGlD,OAAOA,GAEXsrB,EAAM58B,UAAUwjC,mBAAqB,SAAUwC,EAAgBn0B,GAC3D,IAAItH,EAAQpH,KACZ6iC,EAAeplC,OAAO,SAAUC,GAC5B,GAAIA,EAAErE,kBAAoB3B,oBAAkBgG,EAAEpE,cAAe,CAEzD,IAAe,IADHoE,EAAEpE,aAAakF,QAAQkQ,GAQ/B,OAHAtH,EAAMizB,aAAe,UACrBjzB,EAAM20B,oBACN30B,EAAMsyB,SAAU,GALhBtyB,EAAMi5B,mBAAmB3iC,EAAEpE,aAAcoV,OAWzD+qB,EAAM58B,UAAU+M,QAAU,WACtB5J,KAAKuK,uBAMTkvB,EAAM58B,UAAU0N,oBAAsB,WAC9BvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI+iB,GAAmBxtB,KAAK+5B,YACxC/5B,KAAKtJ,OAAO+T,IAAIijB,GAAmB1tB,KAAKkH,YACxClH,KAAKtJ,OAAO+T,IAAIuvB,GAAgBh6B,KAAKi6B,WACrCj6B,KAAKtJ,OAAO+T,IAAIyvB,GAAmBl6B,KAAKm6B,eAW5CV,EAAM58B,UAAU+F,cAAgB,WAC5B,MAAO,kBAEJ62B,KCrmCPh5B,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAaxCG,GAA0C,SAAUC,EAAYC,EAAQvJ,EAAKwJ,GAC7E,IAA2HV,EAAvHW,EAAIC,UAAUhK,OAAQiK,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOhJ,OAAOoJ,yBAAyBL,EAAQvJ,GAAOwJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQvJ,EAAKwJ,QACpH,IAAK,IAAIhK,EAAI8J,EAAW5J,OAAS,EAAGF,GAAK,EAAGA,KAASsJ,EAAIQ,EAAW9J,MAAImK,GAAKF,EAAI,EAAIX,EAAEa,GAAKF,EAAI,EAAIX,EAAES,EAAQvJ,EAAK2J,GAAKb,EAAES,EAAQvJ,KAAS2J,GAChJ,OAAOF,EAAI,GAAKE,GAAKnJ,OAAOuJ,eAAeR,EAAQvJ,EAAK2J,GAAIA,GAM5Do3B,GAAiC,SAAU92B,GAE3C,SAAS82B,IACL,OAAkB,OAAX92B,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAK/D,OAPAS,GAAUm4B,EAAiB92B,GAI3BZ,IACIc,cACD42B,EAAgB/7B,UAAW,gBAAY,GACnC+7B,GACT32B,iBChCExB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAuBxC+hC,GAA8C,SAAUhhC,GAExD,SAASghC,EAA6BpsC,GAClC,IAAI0Q,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,IAAWsJ,KAEzC,OADAoH,EAAM6C,mBACC7C,EAkDX,OAtDA3G,GAAUqiC,EAA8BhhC,GAMxCghC,EAA6BjmC,UAAUoN,iBAAmB,WACtDjK,KAAKtJ,OAAOwT,GAAG64B,GAAqB/iC,KAAKgjC,SAAUhjC,OAEvD8iC,EAA6BjmC,UAAUmmC,SAAW,SAAUjgC,GACxD/C,KAAKijC,WAAalgC,EAAKtE,MAE3BqkC,EAA6BjmC,UAAUqmC,aAAe,SAAUzkC,EAAMma,GAClE,GAAK5Y,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,MAChFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAehsC,EAAgB6I,KAAKtJ,QACvH,OAAOoL,EAAOjF,UAAUqmC,aAAanmC,KAAKiD,KAAMvB,EAAMma,GAGjDlhB,oBAAkBkhB,EAAW/Y,cAAsD,gBAAtC+Y,EAAW/Y,YAAY+H,aACrEgR,EAAW/Y,YAAc,WAG7B,IAAK,IADDiI,EAAOhG,EAAOjF,UAAUqmC,aAAanmC,KAAKiD,KAAMvB,EAAMma,GACjDpX,EAAI,EAAGA,EAAIsG,EAAKvQ,OAAQiK,IAC7BsG,EAAKtG,GAAGtH,MAAS8F,KAAe,WAAExB,QAAQsJ,EAAKtG,GAAG/C,MAEtD,OAAOqJ,GAGfg7B,EAA6BjmC,UAAUumC,mBAAqB,SAAU9nC,GAClE,IAAI+nC,GAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAUte,KAAK,SAAU9qB,GAAS,OAAOqB,IAAWrB,IAChE,GAAK+F,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,MAChFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAehsC,EAAgB6I,KAAKtJ,QAAS,CAChI,IACIyiB,EAAcnZ,KAAU,MAAEmZ,YAC1BkqB,GACArjC,KAAKsjC,SACLtjC,KAAKvB,QACLuB,KAAKujC,WAEW,kBAAXjoC,GAA8B0E,KAAKsjC,MAAMnqB,IAC9CnZ,KAAKsjC,MAAMnqB,GAAa5hB,OAAUyI,KAAKtJ,OAAoB,cAAE8sC,uBACtDxjC,KAAKsjC,MAAMnqB,QAIlBkqB,GAAoB,kBAAX/nC,KACT0E,KAAKsjC,SACLtjC,KAAKvB,QACLuB,KAAKujC,WAGb,OAAOF,GAEJP,GACTW,4BCvEEC,GAAwB,WAMxB,SAASA,EAAOhtC,GACZ+L,OAAKC,OAAOihC,UACZ3jC,KAAKtJ,OAASA,EACdsJ,KAAK4jC,mBAAoB,EACzB5jC,KAAKiO,kBACLjO,KAAK6jC,oBACL7jC,KAAK8jC,sBACL9jC,KAAKiK,mBAiNT,OAzMAy5B,EAAO7mC,UAAU+F,cAAgB,WAC7B,MAAO,UAQX8gC,EAAO7mC,UAAU+M,QAAU,WACvB5J,KAAKuK,uBAMTm5B,EAAO7mC,UAAUoN,iBAAmB,WAChCjK,KAAKtJ,OAAOwT,GAAG,mBAAoBlK,KAAK+jC,sBAAuB/jC,MAC/DA,KAAKtJ,OAAOwT,GAAG,eAAgBlK,KAAKgkC,iBAAkBhkC,OAM1D0jC,EAAO7mC,UAAU0N,oBAAsB,WAC/BvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,mBAAoBzK,KAAK+jC,uBACzC/jC,KAAKtJ,OAAO+T,IAAI,eAAgBzK,KAAKgkC,oBAUzCN,EAAO7mC,UAAUknC,sBAAwB,SAAUE,GAC/C3uB,WAAS,8BAAgCtV,KAAKtJ,QAC9CsJ,KAAK6jC,iBAAmBI,EAAYxlC,KACpCuB,KAAK8jC,sBACL9jC,KAAKiO,kBACLjO,KAAK4jC,mBAAoB,EACzB,IAAK,IAAIvK,EAAI,EAAGA,EAAIr5B,KAAK6jC,iBAAiBtsC,OAAQ8hC,IAAK,CACnD,IAAI5qB,EAAMzO,KAAK6jC,iBAAiBxK,GAChCr5B,KAAKkkC,gBAAgBz1B,GACrB,IAAI3W,EAAwD,KAAxCkI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAamI,KAAKtJ,OAAOsB,eAAeF,cACtFkI,KAAKtJ,OAAOkB,eAAeE,cACT,UAAlBA,GAA+C,SAAlBA,GACqB,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,MACzFmI,KAAK4jC,mBAAoB,GAE7B,IAAIO,EAAU5rC,YAAU,eAAgBkW,IACnC/W,oBAAkBysC,IAAYA,EAAQ5sC,QACvC+d,WAAS,0BAA2BtV,KAAKokC,iBAAiB31B,GAAMA,GAEpE,IAAI41B,EAAW9rC,YAAU,aAAckW,GACvC,IAAK/W,oBAAkB2sC,GAAW,CAC9B,IAAIC,EAAYvrC,EAAciH,KAAKtJ,OAAQ+X,EAAI3V,WAAWE,UAAU,GAGpEsc,WAAS,2BAA2B,EAAMgvB,GACtCA,GAAaA,EAAUxrC,YACvBkH,KAAKukC,2BAA2BD,IAIxCtkC,KAAK6jC,iBAAiBtsC,OAAS,GAAKyI,KAAK4jC,mBACzC5jC,KAAKwkC,oBAETxkC,KAAKtJ,OAAOub,OAAO,gBAAkBkB,OAAQnT,KAAKiO,kBAEtDy1B,EAAO7mC,UAAU0nC,2BAA6B,SAAU7rC,GACpD,IAAI4rC,EAAYvrC,EAAciH,KAAKtJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnEyrC,EAAgBpmC,WAAS,2BAA4B2B,KAAKtJ,QAC1D4tC,GAAajsC,OAAOwE,UAAUC,eAAeC,KAAK0nC,EAAeH,EAAUtrC,WAC3Esc,WAAS,2BAA2B,EAAMgvB,GAE1CA,GAAaA,EAAUxrC,YACvBkH,KAAKukC,2BAA2BD,IAGxCZ,EAAO7mC,UAAUqnC,gBAAkB,SAAUxrC,GACzC,IAAIhC,EAASqC,EAAciH,KAAKtJ,OAAQgC,EAAO4F,gBAI/C,GAAsB,UAFsC,KAAxC0B,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAAamI,KAAKtJ,OAAOsB,eAAeF,cACtFkI,KAAKtJ,OAAOkB,eAAeE,gBACmD,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IA2BlC,CACD,IAAKH,oBAAkBhB,GAAS,CAGJ,WAFsC,KAAxCsJ,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAClDmI,KAAKtJ,OAAOsB,eAAeF,cAAgBkI,KAAKtJ,OAAOkB,eAAeE,gBACa,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAMnCmI,KAAKkkC,gBAAgBxtC,IAL0B,IAA3CsJ,KAAK6jC,iBAAiBrlC,QAAQ9H,IAC9BsJ,KAAKkkC,gBAAgBxtC,IAOY,IAAzCsJ,KAAKiO,eAAezP,QAAQ9F,KAC5BsH,KAAKiO,eAAezV,KAAKE,GACzB4c,WAAS,4BAA8B5c,EAAOM,SAAUN,EAAQsH,KAAKtJ,cA1CzE,GAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CsJ,KAAK6jC,iBAAiBrlC,QAAQ9F,GAM9B,aAL6C,IAAzCsH,KAAKiO,eAAezP,QAAQ9F,KAC5BsH,KAAKiO,eAAezV,KAAKE,GACzB4c,WAAS,4BAA8B5c,EAAOM,SAAUN,EAAQsH,KAAKtJ,QACrEgC,EAAOkZ,yBAA0B,SAMzC5R,KAAKkkC,gBAAgBxtC,IAC0B,IAA3CsJ,KAAK6jC,iBAAiBrlC,QAAQ9H,KAA2D,IAAzCsJ,KAAKiO,eAAezP,QAAQ9H,IAC/B,IAAzCsJ,KAAKiO,eAAezP,QAAQ9F,KAC5BsH,KAAKiO,eAAezV,KAAKE,GACzB4c,WAAS,4BAA8B5c,EAAOM,SAAUN,EAAQsH,KAAKtJ,UAI5B,IAAzCsJ,KAAKiO,eAAezP,QAAQ9F,KAA6D,IAA3CsH,KAAK6jC,iBAAiBrlC,QAAQ9F,KAC5EsH,KAAKiO,eAAezV,KAAKE,GACzB4c,WAAS,4BAA8B5c,EAAOM,SAAUN,EAAQsH,KAAKtJ,UAyBzFgtC,EAAO7mC,UAAUunC,iBAAmB,SAAUlsC,GAG1C,IAAK,IAFDwsC,EAAWnsC,YAAU,eAAgBL,GACrCysC,GAAU,EACLx2B,EAAQ,EAAGA,EAAQu2B,EAASntC,OAAQ4W,IAAS,CAClD,IAAIg2B,EAAUO,EAASv2B,GAAO7U,aAC1BxB,EAAwD,KAAxCkI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IAChDmI,KAAKtJ,OAAOsB,eAAeF,cAAgBkI,KAAKtJ,OAAOkB,eAAeE,cAC1E,KAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,KAAc,CACjD,IAAI4sC,EAAgBpmC,WAAS,2BAA4B2B,KAAKtJ,QACzD2B,OAAOwE,UAAUC,eAAeC,KAAK0nC,EAAeC,EAASv2B,GAAOnV,YACrEgH,KAAKiO,eAAezV,KAAKksC,EAASv2B,IAClCmH,WAAS,4BAA8BovB,EAASv2B,GAAOnV,SAAU0rC,EAASv2B,GAAQnO,KAAKtJ,QACvFiuC,GAAU,GAGlB,GAAuB,SAAlB7sC,IACsD,IAAnDkI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApDmI,KAAK6jC,iBAAiBrlC,QAAQkmC,EAASv2B,IAAgB,CACvDw2B,GAAU,EACV,OAGHjtC,oBAAkBysC,IAAYA,EAAQ5sC,SACvCotC,EAAU3kC,KAAKokC,iBAAiBM,EAASv2B,KAEtB,UAAlBrW,GAA+C,SAAlBA,IAA6B4sC,EAASntC,SACpEotC,GAAU,GAGlB,OAAOA,GAEXjB,EAAO7mC,UAAU2nC,kBAAoB,WAGjC,IAAK,IAFD9rC,EAASsH,KAAKiO,eACd7V,EAAM4H,KAAKiO,eAAe1W,OACrB+J,EAAI,EAAGA,EAAIlJ,EAAKkJ,IAAK,CAC1B,IAAIsjC,EAAW7rC,EAAciH,KAAKtJ,OAAQgC,EAAO4I,GAAGhD,gBAEpD,IAD2C,IAA9B5F,EAAO8F,QAAQomC,GAChB,CACR,IAAIC,EAAW9rC,EAAciH,KAAKtJ,OAAQgC,EAAO4I,GAAGhD,gBAAgB,GACpE5F,EAAO4I,GAAG4P,YAAc2zB,EAAS3zB,YAAc,OAG/CxY,EAAO4I,GAAG4P,YAAc,EACxBlR,KAAK8jC,mBAAmBtrC,KAAKE,EAAO4I,MAIhDoiC,EAAO7mC,UAAUmnC,iBAAmB,SAAUvlC,GAK1C,IAJA,IAGIiQ,EAHAP,EAAQ,EACR3Q,EAAWiB,EAAKjB,SAChBpF,EAAMoF,EAASjG,OAEP4W,EAAQ/V,EAAK+V,IAAS,CAE9B,IAAI22B,GADJp2B,EAAgBlR,EAAS2Q,IACE+C,aACvB4zB,GAAqB,IAAXA,GAAiBptC,oBAAkBgX,EAAckD,2BAC3DlD,EAAckD,wBAA0B,KACxClD,EAAcwC,YAAc,MAGpClR,KAAKiO,kBACLjO,KAAKtJ,OAAOub,OAAO,iBAAmBkB,OAAQ3V,EAAU2Q,MAAO3Q,EAASjG,UAErEmsC,KC5NPqB,GAA6B,WAM7B,SAASA,EAAYruC,GACjBsJ,KAAK0b,yBAA0B,EAC/BjZ,OAAKC,OAAOsiC,eACZhlC,KAAKtJ,OAASA,EACdsJ,KAAK4T,eACL5T,KAAKiK,mBAiLT,OAzKA86B,EAAYloC,UAAU+F,cAAgB,WAClC,MAAO,eAMXmiC,EAAYloC,UAAUoN,iBAAmB,WACrCjK,KAAKtJ,OAAOwT,GAAG,gBAAiBlK,KAAKilC,uBAAwBjlC,MAC7DA,KAAKtJ,OAAOwT,GAAG,gBAAiBlK,KAAKmoB,mBAAoBnoB,MACzDA,KAAKtJ,OAAOiB,KAAKuS,GAAG,sBAAuBlK,KAAKklC,mBAAoBllC,MACpEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,iBAAkBlK,KAAKmlC,eAAgBnlC,OAQ/D+kC,EAAYloC,UAAU+M,QAAU,WAC5B5J,KAAKuK,uBAMTw6B,EAAYloC,UAAU0N,oBAAsB,WACpCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,gBAAiBzK,KAAKilC,wBACtCjlC,KAAKtJ,OAAO+T,IAAI,gBAAiBzK,KAAKmoB,oBACtCnoB,KAAKtJ,OAAOiB,KAAK8S,IAAI,sBAAuBzK,KAAKklC,oBACjDllC,KAAKtJ,OAAOiB,KAAK8S,IAAI,iBAAkBzK,KAAKmlC,kBAEhDJ,EAAYloC,UAAUooC,uBAAyB,SAAUjO,GACrDh3B,KAAK4T,YAAcojB,GAEvB+N,EAAYloC,UAAUsiB,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQmmB,GAChC,IAAIh+B,EAAQpH,KACRrJ,EAAaqJ,KAAKtJ,OAAOC,WACzB2mB,EAAWjlB,SAMf,OALAid,WAAS,QAAS8vB,EAAO9nB,GACzBhI,WAAS,UAAU,EAAOgI,GACrB5lB,oBAAkBonB,KACnB9e,KAAK0b,wBAA0BoD,EAAsBpD,yBAElD,IAAI2pB,QAAQ,SAAUta,GACzB,IAAItxB,GAAK2N,EAAMk+B,WAAe3uC,aAAsBC,cAC9CwQ,EAAM1Q,OAAOC,WADgD,IAAIC,cAAYD,GAE/E0d,EAAQ,IAAIC,QAMhB,GALKlN,EAAMk+B,YACPjxB,EAAQjN,EAAMqQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAOiJ,IAE7BlW,EAAM1Q,OAAOuS,QAAQs8B,EAAyBnpC,SAAOkhB,EAAUwB,IAC3DvmB,YAAU,SAAU+kB,GACpB,OAAO,KAEX7jB,EAAGub,aAAaX,GAAOY,KAAK,SAAUvX,GAClC,IAAI8nC,EAAa,KAKjB,OAJK9tC,oBAAkBonB,IAA2BpnB,oBAAkBonB,EAAsBnoB,cACtF6uC,EAAa1mB,EAAsBnoB,YAEvCmoB,EAAwB1X,EAAMq+B,2BAA2B3mB,EAAuBnoB,EAAY+G,GACrF0J,EAAM1Q,OAAOiB,KAAKunB,kBAAkBC,IAAI/X,EAAM1Q,OAAOiB,KAAMmnB,EAAuBC,EAAkBC,EAAUomB,EAAOnmB,GAAQhK,KAAK,SAAUywB,GAC7H,MAAdF,EACA1mB,EAAsBnoB,WAAa6uC,SAG5B1mB,EAAsBnoB,WAEjCo0B,EAAQ2a,UAKxBX,EAAYloC,UAAU4a,cAAgB,SAAUpD,EAAOiJ,GAQnD,OAPK5lB,oBAAkB4lB,IAAqC,gBAAxBA,EAAS1D,YACtC5Z,KAAKtJ,OAAOga,cACf4M,EAAS1D,WAAa,WACtBvF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM1U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAClDoX,EAAQ9b,YAAU,mCAAoCyH,KAAKtJ,OAAnD6B,CAA2D8b,IAEhEA,GAEX0wB,EAAYloC,UAAU4oC,2BAA6B,SAAUnoB,EAAUqoB,EAAOC,GAE1E,IAAI7iC,EAAO1K,SAkBX,GAjBAid,WAAS,QAAStV,KAAKtJ,OAAOiB,KAAK6f,gBAAgBC,eAAc,GAAO1U,GACxEuS,WAAS,YAAY,EAAMvS,GACtBrL,oBAAkB4lB,IAAc5lB,oBAAkB4lB,EAAS1D,aAC5DtE,WAAS,aAAcgI,EAAS1D,WAAY7W,GAE3C/C,KAAKslC,YACNtlC,KAAKtJ,OAAO6G,cACZyC,KAAKtJ,OAAO6uB,WAAWnR,kBAAkB7b,YAAU,SAAUqtC,IAC7DtwB,WAAS,aAActV,KAAKtJ,OAAO8G,SAAUuF,IAEjD/C,KAAKtJ,OAAOub,OAAO,gBAAiBlP,GAEpCA,EAAO/C,KAAK4T,YACZ+xB,EAAQjuC,oBAAkBqL,EAAKoQ,QAAUnT,KAAKtJ,OAAO8G,SAAS8K,MAAM,GAAKvF,EAAKoQ,OACzEnT,KAAKslC,YACNtlC,KAAKtJ,OAAO8G,aAEZ8f,GAAYA,EAAS3mB,YAAcqJ,KAAKslC,UAAW,CACnD,IAAIO,EAAY7lC,KAAKtJ,OAAO8G,SACxBsoC,EAAUxoB,EAAS3mB,sBAAsBC,cAAc0mB,EAAS3mB,WAAWA,WAAW8E,KAAO6hB,EAAS3mB,WAC1GqJ,KAAKtJ,OAAO6uB,WAAWnR,kBAAkB0xB,GACzCH,EAAQ3lC,KAAKtJ,OAAO8G,SACpBwC,KAAKtJ,OAAO8G,SAAWqoC,EAI3B,OAFAvoB,EAAW5lB,oBAAkB4lB,GAAYjlB,SAAWilB,EACpDA,EAAS3mB,WAAa,IAAIC,eAAc6E,KAAMkqC,IACvCroB,GASXynB,EAAYloC,UAAUsrB,mBAAqB,SAAUplB,GACjD,GAAI/C,KAAKtJ,OAAOiB,KAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAAS/L,KAAKtJ,OAAO0I,gBAAiB,CACvF,IAAI5E,KACAiE,EAAOsE,EAAKtE,KAEZwS,EADcvZ,oBAAkB+G,EAAKyS,aACjBzS,EAAKtE,MAAQsE,EAAKyS,YAC1C1W,EAAMurC,OAAS90B,EACflO,EAAKvI,MAAQA,EAEjBwF,KAAKtJ,OAAOub,OAAO,gBAAiBlP,GACpC/C,KAAKtJ,OAAOuS,QAAQ,qBAAsBlG,IAE9CgiC,EAAYloC,UAAUqoC,mBAAqB,SAAUc,GACjD,GAAsB,UAAlBA,EAAShjC,KAAkB,CAC3B,IAAIijC,EAAcD,EAASE,OAAOznC,KAC9B0nC,EAAqBnmC,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OACjE,GAAI0uC,EAAYntC,YAAcC,EAAciH,KAAKtJ,OAAQuvC,EAAYntC,WAAWE,SAAUotC,QAAQD,IAAsB,CACpH,IAAIE,EAAYL,EAASM,UAAU/uC,OAC/BgvC,EAAWN,EAAY9rC,MACvBqsC,GAAiB,EACjBC,GAAgB,EAChBC,EAAQjuC,EAAgBuH,KAAKtJ,OAAQuvC,EAAajmC,KAAKtJ,OAAO6G,aAC9DyC,KAAK0b,yBAA6BgrB,GAAU1mC,KAAKtJ,OAAOyjB,cACxDqsB,GAAiB,EACjBC,GAAgBR,EAAY9sC,UAEhC6sC,EAASM,UAAUD,EAAY,GAAGM,UAAaC,aAAcL,EAAUM,YAAaJ,EAChFnsC,SAAUksC,MAK1BzB,EAAYloC,UAAUsoC,eAAiB,SAAUnmB,GAC7C,IAAK,IAAI3nB,EAAI,EAAGA,EAAI2nB,EAAS8nB,WAAWvvC,OAAQF,IACxC2nB,EAAS8nB,WAAWzvC,GAAGyQ,OACvBkX,EAAS8nB,WAAWzvC,GAAG0vC,WAAcC,mBAAmB,KAIpEjC,EAAYloC,UAAUyoC,QAAU,WAC5B,OAAQ7uC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,SAEjDquC,KC5LPkC,GAA2B,WAM3B,SAASA,EAAUvwC,GACf+L,OAAKC,OAAOwkC,aACZlnC,KAAKtJ,OAASA,EACdsJ,KAAK4T,eACL5T,KAAKiK,mBA+IT,OAvIAg9B,EAAUpqC,UAAU+F,cAAgB,WAChC,MAAO,aAMXqkC,EAAUpqC,UAAUoN,iBAAmB,WACnCjK,KAAKtJ,OAAOwT,GAAG,cAAelK,KAAKooB,iBAAkBpoB,MACrDA,KAAKtJ,OAAOwT,GAAG,gBAAiBlK,KAAKmnC,qBAAsBnnC,OAM/DinC,EAAUpqC,UAAU0N,oBAAsB,WAClCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,cAAezK,KAAKooB,kBACpCpoB,KAAKtJ,OAAO+T,IAAI,gBAAiBzK,KAAKmnC,wBAQ1CF,EAAUpqC,UAAU+M,QAAU,WAC1B5J,KAAKuK,uBAET08B,EAAUpqC,UAAUsqC,qBAAuB,SAAUnQ,GACjDh3B,KAAK4T,YAAcojB,GAEvBiQ,EAAUpqC,UAAUsiB,IAAM,SAAUG,EAAqBP,EAAkBQ,EAAQN,GAC/E,IAAI7X,EAAQpH,KACR2lC,EAAQ3lC,KAAKtJ,OAAOC,WACpB8mB,EAAOplB,SACPitC,GAAW7uC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,QAE3D,OADA4e,WAAS,UAAU,EAAOmI,GACnB,IAAI4nB,QAAQ,SAAUta,GACzB,IAAItxB,GAAK6rC,GAAaK,aAAiB/uC,cACjCwQ,EAAM1Q,OAAOC,WADmC,IAAIC,cAAY+uC,GAElEtxB,EAAQ,IAAIC,QAMhB,GALKgxB,IACDjxB,EAAQjN,EAAMqQ,cAAcpD,GAC5BiB,WAAS,QAASjB,EAAOoJ,IAE7BrW,EAAM1Q,OAAOuS,QAAQm+B,EAAuBhrC,SAAOqhB,EAAM6B,IACrD/mB,YAAU,SAAUklB,GACpB,OAAO,KAEXhkB,EAAGub,aAAaX,GAAOY,KAAK,SAAUvX,GAClC,IAAI2pC,EAAc,KAKlB,OAJK3vC,oBAAkB4nB,IAAyB5nB,oBAAkB4nB,EAAoB3oB,cAClF0wC,EAAc/nB,EAAoB3oB,YAEtC2oB,EAAsBlY,EAAMkgC,wBAAwBhoB,EAAqBqmB,EAAOjoC,GACzE0J,EAAM1Q,OAAOiB,KAAK6nB,gBAAgBL,IAAI/X,EAAM1Q,OAAOiB,KAAM2nB,EAAqBP,EAAkBQ,EAAQN,GAAQhK,KAAK,SAAUinB,GAC/G,MAAfmL,EACA/nB,EAAoB3oB,WAAa0wC,SAG1B/nB,EAAoB3oB,WAE/Bo0B,EAAQmR,UAKxB+K,EAAUpqC,UAAU4a,cAAgB,SAAUpD,EAAOoJ,GAQjD,OAPK/lB,oBAAkB+lB,IAA6B,gBAApBA,EAAK7D,YAC9B5Z,KAAKtJ,OAAOga,cACf+M,EAAK7D,WAAa,WAClBvF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM1U,KAAKtJ,OAAOuG,gBAAiB,QAAS,MAClDoX,EAAQ9b,YAAU,mCAAoCyH,KAAKtJ,OAAnD6B,CAA2D8b,IAEhEA,GAEX4yB,EAAUpqC,UAAUyqC,wBAA0B,SAAU7pB,EAAMkoB,EAAOC,GACjE,IAAI7iC,KAEAuiC,GAAW7uC,EAAauJ,KAAKtJ,SAAW8C,EAAUwG,KAAKtJ,QAsB3D,GArBA4e,WAAS,QAAStV,KAAKtJ,OAAOiB,KAAK6f,gBAAgBC,eAAc,GAAO1U,GACxEuS,WAAS,YAAY,EAAMvS,GAC3BuS,WAAS,eAAe,EAAMvS,GACzBrL,oBAAkB+lB,IAAU/lB,oBAAkB+lB,EAAK/B,0BACpDpG,WAAS,0BAA2BmI,EAAK/B,wBAAyB3Y,GAEjErL,oBAAkB+lB,IAAU/lB,oBAAkB+lB,EAAK7D,aACpDtE,WAAS,aAAcmI,EAAK7D,WAAY7W,GAEvCuiC,IACDtlC,KAAKtJ,OAAO6G,cACZyC,KAAKtJ,OAAO6uB,WAAWnR,kBAAkB/V,WAAS,SAAUunC,IAC5DtwB,WAAS,aAActV,KAAKtJ,OAAO8G,SAAUuF,IAEjD/C,KAAKtJ,OAAOub,OAAO,gBAAiBlP,GAEpCA,EAAO/C,KAAK4T,YACZ+xB,EAAQjuC,oBAAkBqL,EAAKoQ,QAAUnT,KAAKtJ,OAAO8G,SAAS8K,MAAM,GAAKvF,EAAKoQ,OACzEmyB,IACDtlC,KAAKtJ,OAAO8G,aAEZigB,GAAQA,EAAK9mB,YAAc2uC,EAAS,CACpC,IAAIiC,EAAYvnC,KAAKtJ,OAAO8G,SACxBsoC,EAAUroB,EAAK9mB,sBAAsBC,cAAc6mB,EAAK9mB,WAAWA,WAAW8E,KAAOgiB,EAAK9mB,WAC9FqJ,KAAKtJ,OAAO6uB,WAAWnR,kBAAkB0xB,GACzCH,EAAQ3lC,KAAKtJ,OAAO8G,SACpBwC,KAAKtJ,OAAO8G,SAAW+pC,EAI3B,OAFA9pB,EAAO/lB,oBAAkB+lB,MAAaA,EACtCA,EAAK9mB,WAAa,IAAIC,eAAc6E,KAAMkqC,IACnCloB,GASXwpB,EAAUpqC,UAAUurB,iBAAmB,SAAUrlB,GAC7C,GAAI/C,KAAKtJ,OAAOiB,KAAK4Z,oBAAoBxO,EAAKpD,OAAOoM,OAAS/L,KAAKtJ,OAAO0I,gBAAiB,CACvF,IAAI5E,KACAiE,EAAOlG,YAAU,OAAQwK,GAEzBkO,EADcvZ,oBAAkB+G,EAAKyS,aACjBzS,EAAKtE,MAAQsE,EAAKyS,YAC1C1W,EAAMgtC,gBAAwB,EAANv2B,EACxBlO,EAAKvI,MAAQA,EAEjBwF,KAAKtJ,OAAOub,OAAO,gBAAiBlP,GACpC/C,KAAKtJ,OAAOuS,QAAQ,mBAAoBlG,IAErCkkC,KCxJPQ,GAAsB,WACtB,SAASA,EAAK/wC,GACV+L,OAAKC,OAAOglC,QACZ1nC,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBA2KT,OArKAw9B,EAAK5qC,UAAUoN,iBAAmB,WAC9BjK,KAAKtJ,OAAOwT,GAAGwrB,EAAiC11B,KAAK2nC,0BAA2B3nC,MAChFA,KAAKtJ,OAAOwT,GAAGuR,EAAsBzb,KAAK4nC,WAAY5nC,OAM1DynC,EAAK5qC,UAAU0N,oBAAsB,WAC7BvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAIirB,EAAiC11B,KAAK2nC,2BACtD3nC,KAAKtJ,OAAO+T,IAAIgR,EAAsBzb,KAAK4nC,cAQ/CH,EAAK5qC,UAAU+F,cAAgB,WAC3B,MAAO,SAOX6kC,EAAK5qC,UAAUuyB,QAAU,WACrBpvB,KAAKtJ,OAAOiB,KAAK+5B,YAAYtC,WAQjCqY,EAAK5qC,UAAU+M,QAAU,WACrB5J,KAAKuK,uBAQTk9B,EAAK5qC,UAAU20B,SAAW,SAAUC,GAChCzxB,KAAKtJ,OAAOiB,KAAK+5B,YAAYF,SAASC,IAQ1CgW,EAAK5qC,UAAU80B,sBAAwB,SAAUruB,GAC7CtD,KAAKtJ,OAAOiB,KAAK+5B,YAAYC,sBAAsBruB,IAWvDmkC,EAAK5qC,UAAU8qC,0BAA4B,SAAUhxB,GACjDA,EAAWje,OAAOS,SAAiC,aAAtBwd,EAAWrb,OACxC,IAAIusC,GACA10B,OAAQnT,KAAKtJ,OAAO8G,SACpBmB,IAAKgY,EAAWhY,IAChBrD,OAAQqb,EAAWrb,OACnB5C,OAAQie,EAAWje,OACnByV,MAAOnO,KAAKtJ,OAAO8G,SAASjG,QAGhC,GADA8G,WAAS,oBAAqB2B,KAAKtJ,QAAQ8e,mBAAmBqyB,GAC1D7nC,KAAKtJ,OAAO4I,oBAAqB,CACjC,IAEI0X,OAAY,EACI,aAAhB6wB,EAAU,QACV7wB,EAAY6wB,EAAO,IAAE5wB,uBAAuB,oBAAoB,GAC3Dvf,oBAAkBsf,KACnB7J,eAAa6J,GAAY,oBACzB/G,YAAU+G,GAAY,wBAGL,WAAhB6wB,EAAU,SACf7wB,EAAY6wB,EAAO,IAAE5wB,uBAAuB,sBAAsB,GAC7Dvf,oBAAkBsf,KACnB7J,eAAa6J,GAAY,sBACzB/G,YAAU+G,GAAY,wBAKtCywB,EAAK5qC,UAAUirC,SAAW,SAAUC,EAAc1sB,EAAMlI,GAapD,IAAK,IAZD60B,EAAatwC,oBAAkByb,MAAeA,EAC9CvW,EAAU,SAAUqrC,GACpBD,EAAWxvC,KAAK6iB,EAAK4sB,IACrB,IAAIC,KACA7sB,EAAK4sB,GAAG5uC,kBACR6uC,EAAMH,EAAatqC,OAAO,SAAUC,GAChC,OAAO2d,EAAK4sB,GAAGjvC,WAAa0E,EAAEY,iBAElC0pC,EAAaG,EAAOL,SAASC,EAAcG,EAAKF,KAGpDG,EAASnoC,KACJioC,EAAI,EAAGA,EAAI5sB,EAAK9jB,OAAQ0wC,IAC7BrrC,EAAQqrC,GAEZ,OAAOD,GAEXP,EAAK5qC,UAAU+qC,WAAa,SAAUQ,GAClC,IAAIhhC,EAAQpH,KACRvG,EAAK,IAAI7C,cAAYwxC,EAAej1B,QACxC,GAA8C,SAA1CnT,KAAKtJ,OAAOia,aAAaC,aAAyB,CAClD,IAAIyK,KACAgtB,EAAYroC,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CyI,KAAKtJ,OAAOsB,eAAeF,eAA0E,SAA7CkI,KAAKtJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChBuc,GAAQ,IAAIC,SAAQI,MAAM2zB,EAAU,QAAS,GACjDhtB,EAAO5hB,EAAGqc,aAAazB,GACvB+zB,EAAej6B,MAAQkN,EAAK9jB,OAC5B,IAEI+wC,GAFAC,EAAOvoC,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,YACrCjqB,EAAUve,KAAKtJ,OAAOiB,KAAKgZ,aAAawI,aACf,GAC7B9E,EAAQA,EAAMi0B,KAAKA,GAAMG,KAAKF,GAC9BltB,EAAO5hB,EAAGqc,aAAazB,GACvB,IAAI2zB,EAAahoC,KAAK8nC,SAASM,EAAej1B,OAAQkI,GACtD+sB,EAAej1B,OAAS60B,MAEvB,CACD,IAAIrb,EAAO,IAAI/1B,cAAYwxC,EAAej1B,QACtCha,EAAW,IAAI0I,YAAU,WAAY,WAAY,MAAM6mC,GAAG,WAAY,gBAAY1rB,GAClF2rB,EAAYhc,EAAK7W,cAAa,IAAIxB,SAAQI,MAAMvb,IAChD8pC,OAAa,EAMbA,GALAxrC,EAAuBuI,KAAKtJ,SAAasJ,KAAKtJ,OAAOkB,eAAeC,MAAQmI,KAAKtJ,OAAOiB,KAAKC,eAAeC,KAC3GmI,KAAKtJ,OAAOsB,eAAeV,QAAQC,SAAWyI,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAI1EoxC,EAAUlrC,OAAO,SAAUC,GACpC,OAAOjF,EAAgB2O,EAAM1Q,OAAQgH,EAAGirC,KAJ/BA,EAOjBP,EAAej6B,MAAQ80B,EAAW1rC,OAC9B8c,EAAQ,IAAIC,QAAhB,IACIi0B,EAAOvoC,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,SACrCjqB,EAAUve,KAAKtJ,OAAOiB,KAAKgZ,aAAawI,YACxC8pB,EAAW1rC,OAAUgnB,EAAUgqB,IAE/BhqB,GADAA,EAAW/H,KAAKoyB,MAAM3F,EAAW1rC,OAASgxC,IAAWtF,EAAW1rC,OAASgxC,EAAQ,EAAI,KACvD,EAC9BvoC,KAAKtJ,OAAOiB,KAAK+lB,eAAgB/M,cAAgBwI,YAAaoF,KAAa,IAE3E+pB,EAAOC,GAAQhqB,EAAU,GAC7BlK,EAAQA,EAAMi0B,KAAKA,GAAMG,KAAKF,GAC9B5b,EAAKh2B,WAAW8E,KAAOwnC,EACvBmF,EAAej1B,OAASwZ,EAAK7W,aAAazB,GAE9CrU,KAAKtJ,OAAOub,OAAO,eAAgBm2B,IAEhCX,KClLPoB,GAAyB,WACzB,SAASA,EAAQnyC,GACb+L,OAAKC,OAAOomC,WACZ9oC,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBAkIT,OA1HA4+B,EAAQhsC,UAAU+F,cAAgB,WAC9B,MAAO,WAMXimC,EAAQhsC,UAAUoN,iBAAmB,WACjCjK,KAAKtJ,OAAOwT,GAAG8d,EAAoBhoB,KAAK+oC,eAAgB/oC,MACxDA,KAAKtJ,OAAOwT,GAAG+gB,EAAqBjrB,KAAKgpC,oBAAqBhpC,OAMlE6oC,EAAQhsC,UAAU0N,oBAAsB,WAChCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAIud,EAAoBhoB,KAAK+oC,gBACzC/oC,KAAKtJ,OAAO+T,IAAIwgB,EAAqBjrB,KAAKgpC,uBAE9CH,EAAQhsC,UAAUksC,eAAiB,SAAUhmC,GACzC,IAAIq3B,EAAOp6B,KAAKtJ,OACU,IAAtBqM,EAAKpE,IAAI+K,UAAkB0wB,EAAK3xB,qBAAqBlR,OAAS,EAC9DyI,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,sBAAuBmnB,EAAKpnB,QAAQC,GAAK,yBAAyB,GAGjGvb,oBAAkB0iC,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,cACpDhS,oBAAkB0iC,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,YACxD0wB,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,MAC7CigC,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,SAAW,GAAGvP,MACxD6F,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,wBAAwB,GAG5DjT,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,wBAAwB,GAE5DmnB,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,QAChDigC,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,SAAW,GAAGvP,OACpD6F,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DmnB,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,OAChD6F,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DmnB,EAAKj+B,wBAAwB4G,EAAKpE,IAAI+K,UAAUvP,OAChD6F,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBlQ,EAAKpE,IAAI+K,UAAmBhS,oBAAkBqL,EAAKtE,KAAK3F,aACxDkH,KAAK+wB,aAAaqJ,EAAKpnB,QAAQC,GAAK,yBAAyB,IAGrE41B,EAAQhsC,UAAUmsC,oBAAsB,SAAUjmC,GAC9C,IAAIq3B,EAAOp6B,KAAKtJ,OAYhB,GAXsC,SAAlCsJ,KAAKtJ,OAAOmF,aAAaC,MAA0D,UAAvCkE,KAAKtJ,OAAOiB,KAAKkE,aAAaC,MAC1EiH,EAAKE,KAAKgQ,KAAOjT,KAAKtJ,OAAOiB,KAAKqb,QAAQC,GAAK,YAC/ClQ,EAAKiG,QAAS,EACdhJ,KAAKtJ,OAAOiB,KAAKoE,WAAWs0B,YAE5BttB,EAAKE,KAAKgQ,KAAOjT,KAAKtJ,OAAOiB,KAAKqb,QAAQC,GAAK,cAC/CjT,KAAKtJ,OAAOqrB,YAEZhf,EAAKE,KAAKgQ,KAAOjT,KAAKtJ,OAAOiB,KAAKqb,QAAQC,GAAK,gBAC/CjT,KAAKtJ,OAAOsrB,cAEZjf,EAAKE,KAAKgQ,KAAOmnB,EAAKziC,KAAKqb,QAAQC,GAAK,WAAamnB,EAAK3xB,qBAAqBlR,OAAQ,CACvF,IAAImB,EAAS0hC,EAAKj+B,wBAAwBi+B,EAAKnyB,wBAAwB,GAAK,GACxEqyB,OAAY,EAChB,GAAI5hC,EAAOyB,MAAQigC,EAAK3xB,qBAAqB,GAAGtO,MAC5C,IAAK,IAAI9C,EAAI,EAAGA,EAAI+iC,EAAKj+B,wBAAwB5E,OAAQF,IACjD+iC,EAAKj+B,wBAAwB9E,GAAG+C,WAAa1B,EAAOI,WAAWsB,WAC/DkgC,EAAYjjC,QAKpBijC,EAAYF,EAAKnyB,wBAAwB,GAAK,EAElDmyB,EAAK7B,aAAa6B,EAAKnyB,wBAAwB,IAAKqyB,EAAW,SAEnE,GAAIv3B,EAAKE,KAAKgQ,KAAOmnB,EAAKziC,KAAKqb,QAAQC,GAAK,YAAcmnB,EAAK3xB,qBAAqBlR,OAAQ,CAInF,IAHD2C,EAAQkgC,EAAKnyB,wBAAwB,GAErCnP,GADAwhC,OAAY,EACCF,EAAK3xB,qBAAqB,GAAG3P,YAC9C,IAASzB,EAAI,EAAGA,EAAI+iC,EAAKj+B,wBAAwB5E,OAAQF,IACjD+iC,EAAKj+B,wBAAwB9E,GAAG+C,WAAatB,EAAWsB,WACxDkgC,EAAYjjC,GAGpB+iC,EAAK7B,aAAar+B,GAAQogC,EAAW,WAS7CuO,EAAQhsC,UAAUmhC,WAAa,WAC3B,OAAOh+B,KAAKtJ,OAAOiB,KAAKm5B,cAAckN,cAU1C6K,EAAQhsC,UAAUk0B,YAAc,SAAU9a,EAAO4a,GAC7C7wB,KAAKtJ,OAAOiB,KAAKm5B,cAAcC,YAAY9a,EAAO4a,IAQtDgY,EAAQhsC,UAAU+M,QAAU,WACxB5J,KAAKuK,uBAEFs+B,KCrIPI,GAA2B,WAM3B,SAASA,EAAUvyC,GACf+L,OAAKC,OAAOwmC,aACZlpC,KAAKtJ,OAASA,EACdsJ,KAAKmpC,oBACLnpC,KAAKqY,gBAoOT,OA5NA4wB,EAAUpsC,UAAU+F,cAAgB,WAChC,MAAO,WAEXqmC,EAAUpsC,UAAU0N,oBAAsB,WAClCvK,KAAKtJ,OAAO8T,aAapBy+B,EAAUpsC,UAAU2b,sBAAwB,SAAUH,EAAcqC,EAAc0uB,GAC9EppC,KAAKqY,aAAeA,EAIpB,IAAK,IAHDxf,EAEA0E,KACKI,EAAI,EAAGvF,EAFOC,OAAOC,KAAKoiB,GAAcnjB,OAEToG,EAAIvF,EAAKuF,IAAK,CACjCpF,YAAU,eAAgBmiB,EAAa/c,KAEpDJ,EAAW/E,KAAKkiB,EAAa/c,IAGrC,IAKIqkC,EALA1oB,EAAgBrhB,EAAkBsF,GAClC8rC,EAAc9rC,EAAW+K,QACzBghC,EAAejxC,OAAOC,KAAK0H,KAAKtJ,OAAOY,SAASC,OAChDgyC,EAAgBlxC,OAAOC,KAAK0H,KAAKtJ,OAAOwhB,YAAY3gB,OACpDiyC,EAAanxC,OAAOC,KAAKghB,GAAe/hB,OAE5C,GAAIyI,KAAKtJ,OAAOwhB,WAAWza,OAAO,SAAUyzB,GAAK,OAAOA,EAAEuY,mBAAqBlyC,OACtE,CAAA,IAAIF,EAAI,EAAb,IAAgBe,EAAMoxC,EAAYnyC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAeygB,EAAcjiB,GAC7B2qC,EAAqBhiC,KAAK0pC,sBAAsB7wC,EAAcwwC,GACtC,CAwCpB,IAAK,IAvCDzsC,EAAU,SAAU+sC,EAAiBC,GACrC,IAAI3mC,OAAO,EACXA,KACA,IAAK,IAAI4I,EAAc,EAAGg+B,EAAQP,EAAcz9B,EAAcg+B,EAAOh+B,IAAe,CAGhF5I,EAFYvL,oBAAkBa,YAAU,QAAS4vC,EAAOzxC,OAAOY,QAAQuU,KACnEs8B,EAAOzxC,OAAOY,QAAQuU,GAAetT,YAAU,QAAS4vC,EAAOzxC,OAAOY,QAAQuU,KACpE,KAGlB,GADA5I,EAAOklC,EAAO2B,kBAAkB7mC,EAAMklC,EAAOzxC,OAAOwhB,WAAWyxB,EAAkB,KAC7ExB,EAAOzxC,OAAOwhB,WAAWyxB,EAAkB,GAAGF,iBA0B9C,MAAO,WAzBP,IAAIM,EACJV,EAAYlrC,IAAI,SAAUT,EAAGrG,GACrBqG,EAAE1E,WAAaH,EAAaG,WAC5B+wC,EAAQ1yC,KAIhB,IAAI2yC,EAAeD,EAAQ/H,EAAqB2H,EAC5CM,EAAgB7tC,YAAWvD,UACxBoxC,EAAc3wC,oBACd2wC,EAAc9B,EAAOzxC,OAAO0G,cACnCkY,WAAS,aAAc20B,EAAehnC,GACtC,IAAI9I,EAAQ5B,YAAU,QAAS0xC,GAI/B,GAHA30B,WAAS,QAASnb,EAAQ,EAAG8I,GAC7BqS,WAAS,gBAAgB,EAAMrS,GAC/BqS,WAAS,iBAAkB20B,EAAcjxC,SAAUiK,GAC/CmmC,EAAQ,CACR,IAAI9vC,EAAef,YAAU,eAAgBM,GACzCS,EAAa/B,QACb+B,EAAad,KAAKyK,GAG1BomC,EAAYlsC,OAAO6sC,EAAc,EAAG/mC,IAMxCklC,EAASnoC,KACJ2pC,EAAkB,EAAGC,EAAQL,EAAeI,GAAmBC,EAAOD,IAC3E/sC,EAAQ+sC,GAEZ3pC,KAAKmpC,yBAIZ,CAED,IAAK,IADDlzB,KACKpK,EAAc,EAAGgqB,EAAWyT,EAAcz9B,EAAcgqB,EAAUhqB,IAAe,CAGtFoK,EAFave,oBAAkBa,YAAU,QAASyH,KAAKtJ,OAAOY,QAAQuU,KAClE7L,KAAKtJ,OAAOY,QAAQuU,GAAetT,YAAU,QAASyH,KAAKtJ,OAAOY,QAAQuU,KAC9D,KAEX89B,EAAkB,EAA3B,IAAK,IAAyBO,EAAWX,EAAeI,GAAmBO,EAAUP,IACjF3pC,KAAK8pC,kBAAkB7zB,EAAOjW,KAAKtJ,OAAOwhB,WAAWyxB,EAAkB,IAG/E,OAAON,GAEXJ,EAAUpsC,UAAU6sC,sBAAwB,SAAUnsC,EAAYC,GAG9D,IAAK,IADD9E,EACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAKkF,GAAUjG,OAELF,EAAIe,EAAKf,IAAK,CAC9CqB,EAAS8E,EAASnG,GAGlB,GAAIkG,KAFW7F,oBAAkBgB,EAAOI,YAAc,KAClD0E,EAASC,OAAO,SAAUC,GAAK,OAAOA,EAAE1E,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CACzBgH,KAAKmpC,iBAAiB3wC,KAAKE,GAE3B,IADeH,YAAU,kBAAmBG,GAKxC,SAHAsH,KAAK0pC,sBAAsBhxC,EAAQ8E,IAO/C,OAAOwC,KAAKmpC,iBAAiB5xC,QAEjC0xC,EAAUpsC,UAAUitC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,IAAI/yC,EAAI,EAAGe,EADUC,OAAOC,KAAK8xC,EAAQ9yC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,IAHDgzC,EAAgB3yC,oBAAkB0yC,EAAQ9yC,QAAQD,GAAG8D,YAAcivC,EAAQ9yC,QAAQD,GAAGgb,MACtF+3B,EAAQ9yC,QAAQD,GAAG8D,WAEdszB,EAAK,EAAG6b,EADNjyC,OAAOC,KAAK6xC,GACS1b,EAAK6b,EAAO/yC,OAAQk3B,IAAM,CACtD,IAAI52B,EAAMyyC,EAAO7b,GACjB,GAAI52B,IAAQwyC,EACR,GAAIrqC,KAAKmpC,iBAAiB5xC,OACtB4yC,EAAStyC,GAAOmI,KAAKuqC,iBAAiBH,EAAQ9yC,QAAQD,GAAI2I,KAAKmpC,uBAE9D,GAAInpC,KAAKtJ,OAAOyjB,YAAa,CAC9B,IAAI1b,EAAOuB,KAAKtJ,OAAOC,sBAAsBC,cAAcoJ,KAAKtJ,OAAOC,WAAWA,WAAW8E,KACvFuE,KAAKtJ,OAAO8G,SAClB2sC,EAAStyC,GAAOmI,KAAKuqC,iBAAiBH,EAAQ9yC,QAAQD,GAAIoH,IAQ1E,OAAO0rC,GAEXlB,EAAUpsC,UAAU0tC,iBAAmB,SAAUC,EAAep4B,GAC5D,IAAIyC,EAAM,IAAIP,QACVm2B,KACA1tB,KACA/Z,EAAQtL,oBAAkB8yC,EAAcn4B,YACiB2K,EAAzDhd,KAAKtJ,OAAOokB,iBAAiB0vB,EAAcn4B,OAAOrP,KACtDwnC,EAAchtB,qBAAsBjB,OAAQvc,KAAK0qC,kBAAkBF,EAAcjuB,OAAQvZ,KACzFwnC,EAAcnuB,aAAarc,KAAKtJ,OAAOiB,KAAK2oB,QAC5C,IAAI7D,EAAW+tB,EAAc3tB,gBAAwC,SAAU1U,GAAK,OAAOA,GAC3FqiC,EAAc1tB,YAAYC,GAC1B,IAAI4tB,EAAUH,EAAcjtB,YAAY,GACxC1I,EAAIE,QAAU/U,KAAKqY,aACnBxD,EAAI+1B,gBACJ,IAEIC,EAFAC,EAAU,IAAIl0C,cAAYwb,GAAa0D,aAAajB,GACpD/R,EAAQ0nC,EAAcxnC,KAE1BF,GAAS0nC,EAAcxnC,MACvB,IAAK,IAAI3L,EAAI,EAAGA,EAAIyL,EAAMvL,OAAQF,IAAK,CACnCwzC,EAAa/nC,EAAMzL,GACnB,IAAIQ,EAAM2yC,EAAcn4B,MAAQ,MAAQvP,EAAMzL,GAAG0zC,cAC7CC,EAAmB,WAAbloC,EAAMzL,GAAkBkB,YAAU,aAAcuyC,GACtDG,qBAAmBnoC,EAAMzL,GAAIyzC,EAASN,EAAexqC,KAAKtJ,QAC1Dw0C,EAAOV,EAAcrvC,WACrBgwC,EAAuB,WAAbroC,EAAMzL,GAAkB2zC,EAAInzC,GAAOmzC,EACjDP,EAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAMrzC,GAAOszC,EACpBV,EAAOS,GAAMpoC,EAAMzL,IAAOK,oBAAkBszC,GAA2B,IAApBvuB,EAAS0uB,GAEhEpuB,EAAOR,OAASiuB,EAAc3tB,eAC9B,IAAI7L,EAAc3E,gBAAc,MAC5BC,UAAW,cAEf,GAAItM,KAAKtJ,OAAOwc,QAAS,CAErBy3B,EAAQhzB,GAAG8yB,EAAOD,EAAcrvC,YAAa6E,KAAKtJ,OAAQi0C,EAAQrtB,SAAU,GAAI,KAAM,KAAMtM,GAC5FhR,KAAKtJ,OAA2B,4BAGhCmc,iBAAe7B,EAAa25B,EAAQhzB,GAAG8yB,EAAOD,EAAcrvC,YAAa6E,KAAKtJ,OAAQi0C,EAAQrtB,WAElG,IAAIrjB,EAAQwwC,EAAOD,EAAcrvC,YAAY0vC,GAE7C,OAA8C,IAA1C75B,EAAYzD,UAAU/O,QAAQvE,GACf+W,EAAYzD,UAAYtT,EAIhC+W,EAAYzD,WAG3B07B,EAAUpsC,UAAU6tC,kBAAoB,SAAUU,EAAepoC,GAC7D,GAAItL,oBAAkBsL,IAAkC,iBAAlBooC,EAClC,OAAOA,EAEX,IAAIvxC,EACJ,OAAQmJ,GACJ,IAAK,SACDnJ,GAAQ0iB,OAAQ6uB,GAChB,MACJ,IAAK,WACDvxC,GAAQmJ,KAAM,WAAYwZ,SAAU4uB,GACpC,MACJ,IAAK,OACDvxC,GAAQmJ,KAAMA,EAAMwZ,SAAU4uB,GAGtC,OAAOvxC,GAQXovC,EAAUpsC,UAAU+M,QAAU,WAC1B5J,KAAKuK,uBAEF0+B,KC9OPoC,GAAsB,WACtB,SAASA,EAAK1zC,GACV8K,OAAKC,OAAO4oC,QACZtrC,KAAKtJ,OAASiB,EACdqI,KAAKuT,WACLvT,KAAKurC,kBACLvrC,KAAKyT,aAAe,EACpBzT,KAAKhF,iBAAmBtD,oBAAkBsI,KAAKtJ,OAAOuG,iBACtD+C,KAAKiK,mBAgGT,OAxFAohC,EAAKxuC,UAAU+F,cAAgB,WAC3B,MAAO,QAKXyoC,EAAKxuC,UAAUoN,iBAAmB,WAC9BjK,KAAKtJ,OAAOwT,GAAG,cAAelK,KAAKwrC,YAAaxrC,MAChDA,KAAKtJ,OAAOwT,GAAG,aAAclK,KAAKyrC,qBAAsBzrC,OAM5DqrC,EAAKxuC,UAAU0N,oBAAsB,WAC7BvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,cAAezK,KAAKwrC,aACpCxrC,KAAKtJ,OAAO+T,IAAI,aAAczK,KAAKyrC,wBAEvCJ,EAAKxuC,UAAU4uC,qBAAuB,SAAUC,GAC5C,IAAIjtC,EAAOitC,EAAWhwC,aAClBkf,EAAS8wB,EAAW9wB,OACxB5a,KAAK2rC,YAAYltC,EAAMmc,GACvB5a,KAAKyT,aAAe,EACpBi4B,EAAWhwC,aAAesE,KAAKurC,eAC/BvrC,KAAKurC,mBAETF,EAAKxuC,UAAU8uC,YAAc,SAAUltC,EAAMmc,GACzC,IAAK,IAAIja,EAAI,EAAGA,EAAIlC,EAAKlH,OAAQoJ,IAW7B,GAVIX,KAAKtJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCyI,KAAKtJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAciH,KAAKtJ,OAAQ+H,EAAKkC,GAAG3H,UAAU,MAChEgH,KAAKyT,cACLzT,KAAKurC,eAAevrC,KAAKyT,aAAehV,EAAKkC,KAIjDX,KAAKyT,cACLzT,KAAKurC,eAAevrC,KAAKyT,aAAehV,EAAKkC,IAE7ClC,EAAKkC,GAAGtH,gBAAiB,CACzB,IAAIuyC,EAAa,IAAIh1C,cAAY6H,EAAKkC,GAAGrH,cAAcwc,aAAa8E,GACpE5a,KAAK2rC,YAAYC,EAAWhxB,KAYxCywB,EAAKxuC,UAAU6jB,WAAa,SAAUvlB,EAAY+f,EAAWsF,GACzDxgB,KAAKtJ,OAAOiB,KAAK+oB,WAAWvlB,EAAY+f,EAAWsF,IAEvD6qB,EAAKxuC,UAAU+jB,iBAAmB,SAAUvO,GACxCrS,KAAKtJ,OAAOiB,KAAKipB,iBAAiBvO,IAQtCg5B,EAAKxuC,UAAU2uC,YAAc,WACzBxrC,KAAKtJ,OAAOgnB,eAAgBnf,aAAcsoB,sBAAoB7mB,KAAKtJ,OAAOiB,KAAK4G,gBAAiB,IAOpG8sC,EAAKxuC,UAAU8jB,aAAe,WAC1B3gB,KAAKtJ,OAAOiB,KAAKgpB,eACjB3gB,KAAKwrC,eAQTH,EAAKxuC,UAAU+M,QAAU,WACrB5J,KAAKuK,uBAEF8gC,KC3GPQ,GAA4B,WAM5B,SAASA,EAAWn1C,GAChB+L,OAAKC,OAAOopC,cACZ9rC,KAAKtJ,OAASA,EAiBlB,OAfAm1C,EAAWhvC,UAAUkvC,cAAgB,WACjC,OAAO/rC,KAAKtJ,OAAOiB,KAAKq0C,iBAAiBD,iBAE7CF,EAAWhvC,UAAU+M,QAAU,aAS/BiiC,EAAWhvC,UAAU+F,cAAgB,WACjC,MAAO,cAEJipC,KCxBPI,GAA6B,WAC7B,SAASA,EAAYv1C,GACjB+L,OAAKC,OAAOwpC,eACZlsC,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBAsET,OAhEAgiC,EAAYpvC,UAAUoN,iBAAmB,WACrCjK,KAAKtJ,OAAOwT,GAAG,kBAAmBlK,KAAKsF,gBAAiBtF,MACxDA,KAAKtJ,OAAOwT,GAAG,mBAAoBlK,KAAKuF,iBAAkBvF,OAM9DisC,EAAYpvC,UAAU0N,oBAAsB,WACpCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,kBAAmBzK,KAAKsF,iBACxCtF,KAAKtJ,OAAO+T,IAAI,mBAAoBzK,KAAKuF,oBAE7C0mC,EAAYpvC,UAAUyI,gBAAkB,SAAUvC,GAC9C,IAAIopC,EAAS7iC,SAAO,IAAMtJ,KAAKtJ,OAAOsc,QAAQC,GAAK,4BAA6BlQ,EAAKiQ,SACjFo5B,EAAa9iC,SAAO,IAAMtJ,KAAKtJ,OAAOsc,QAAQC,GAAK,0BAA2BlQ,EAAKiQ,SACnFm5B,KACkD,IAA9CnsC,KAAKtJ,OAAOiB,KAAKkE,aAAa8oB,YAC9BwnB,EAAO3xC,MAAMG,QAAU,OAGvBwxC,EAAO3xC,MAAMG,QAAU,SAGQ,SAAlCqF,KAAKtJ,OAAOmF,aAAaC,MAAqD,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,MACjEpE,oBAAkB00C,IAAkBA,EAAWhkC,UAAUC,SAAS,iBACvE+jC,EAAW5xC,MAAMG,QAAU,SAGnCsxC,EAAYpvC,UAAU0I,iBAAmB,SAAUxC,GAC1B,UAAjBA,EAAKE,KAAKgQ,IAAmC,UAAjBlQ,EAAKE,KAAKgQ,KACtCjT,KAAKtJ,OAAOub,OAAO,0BAA2BlP,GAC9C/C,KAAKtJ,OAAOgnB,eAAgB7hB,cAAgBQ,eAAgB0G,EAAKE,KAAKgQ,MAAQ,GAC9EjT,KAAKtJ,OAAOy5B,cASpB8b,EAAYpvC,UAAU+F,cAAgB,WAClC,MAAO,eAQXqpC,EAAYpvC,UAAU+M,QAAU,WAC5B5J,KAAKuK,uBAOT0hC,EAAYpvC,UAAU4qB,eAAiB,WACnC,OAAOznB,KAAKtJ,OAAOiB,KAAKg0B,kBAAkBlE,kBAEvCwkB,KCtEPI,GAA2B,WAC3B,SAASA,EAAU31C,GACfsJ,KAAKssC,gBAAkB,EACvBtsC,KAAKqT,aAAe,eACpBrT,KAAKoe,eAAiB,iBACtBpe,KAAKusC,qBACLvsC,KAAKwsC,uBACLxsC,KAAKysC,qBACLzsC,KAAKtJ,OAASA,EACdsJ,KAAKhF,iBAAmBtD,oBAAkBhB,EAAOuG,iBACjD+C,KAAK0sC,gBACL1sC,KAAK9D,sBACL8D,KAAK2sC,OAAQ,EACb3sC,KAAKiK,mBA+hBT,OA7hBAoiC,EAAUxvC,UAAUoN,iBAAmB,WACnCjK,KAAKtJ,OAAOwT,GAAG6hB,GAAkB/rB,KAAK6F,UAAW7F,MACjDA,KAAKtJ,OAAOwT,GAAGgiB,GAAiBlsB,KAAKiG,SAAUjG,MAC/CA,KAAKtJ,OAAOwT,GAAGkiB,GAAuBpsB,KAAKmG,eAAgBnG,MAC3DA,KAAKtJ,OAAOwT,GAAG4R,GAAkB9b,KAAKqG,UAAWrG,MACjDA,KAAKtJ,OAAOwT,GAAGoiB,GAA0BtsB,KAAKkG,kBAAmBlG,MACjEA,KAAKtJ,OAAOwT,GAAGiiB,GAAwBnsB,KAAKoG,gBAAiBpG,MAC7DA,KAAKtJ,OAAOwT,GAAG,kBAAmBlK,KAAK4sC,gBAAiB5sC,MACxDA,KAAKtJ,OAAOwT,GAAG,oBAAqBlK,KAAK6sC,kBAAmB7sC,MAC5DA,KAAKtJ,OAAOiB,KAAKuS,GAAG,yBAA0BlK,KAAK8sC,qBAAsB9sC,MACzEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,kBAAmBlK,KAAK+sC,cAAe/sC,OAM/DqsC,EAAUxvC,UAAU0N,oBAAsB,WAClCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAIshB,GAAkB/rB,KAAK6F,WACvC7F,KAAKtJ,OAAO+T,IAAIyhB,GAAiBlsB,KAAKiG,UACtCjG,KAAKtJ,OAAO+T,IAAIqR,GAAkB9b,KAAKqG,WACvCrG,KAAKtJ,OAAO+T,IAAI2hB,GAAuBpsB,KAAKmG,gBAC5CnG,KAAKtJ,OAAO+T,IAAI6hB,GAA0BtsB,KAAKkG,mBAC/ClG,KAAKtJ,OAAO+T,IAAI0hB,GAAwBnsB,KAAKoG,iBAC7CpG,KAAKtJ,OAAO+T,IAAI,kBAAmBzK,KAAK4sC,iBACxC5sC,KAAKtJ,OAAO+T,IAAI,oBAAqBzK,KAAK6sC,mBAC1C7sC,KAAKtJ,OAAOiB,KAAK8S,IAAI,yBAA0BzK,KAAK8sC,sBACpD9sC,KAAKtJ,OAAOiB,KAAK8S,IAAI,kBAAmBzK,KAAK+sC,iBAQjDV,EAAUxvC,UAAU+M,QAAU,WAC1B5J,KAAKuK,uBAMT8hC,EAAUxvC,UAAUmwC,gBAAkB,WAClC,OAAOhtC,KAAK0sC,cAMhBL,EAAUxvC,UAAUowC,eAAiB,WACjC,OAAOjtC,KAAK/E,aAMhBoxC,EAAUxvC,UAAUqwC,iBAAmB,WACnC,OAAOltC,KAAK9E,eAMhBmxC,EAAUxvC,UAAUswC,mBAAqB,WACrC,OAAOntC,KAAKssC,iBAEhBD,EAAUxvC,UAAU+vC,gBAAkB,WAClC,IAGI1yC,EAHAuE,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/D46B,EAAavxB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE5D,IAAK7D,oBAAkBsI,KAAKusC,oBAAsBvsC,KAAKusC,kBAAkBh1C,OACrE,IAAK,IAAIF,EAAI,EAAGA,EAAI2I,KAAKusC,kBAAkBh1C,OAAQF,IAC/C6C,EAAQuE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE6zB,KAAgB/yB,QAAQwB,KAAKusC,kBAAkBl1C,GAAGk6B,IAC3F9yB,EAAKtB,OAAOjD,EAAO,GAG3B8F,KAAKusC,kBAAoBvsC,KAAK0sC,aAAe1sC,KAAKysC,kBAAoBzsC,KAAKwsC,oBAAsBxsC,KAAK9D,uBAE1GmwC,EAAUxvC,UAAUgJ,UAAY,SAAU9C,GACtC,IAAIqqC,EAAkBrqC,EAAKtD,KAAK4iB,UAC5BgrB,EAAartC,KAAKtJ,OAAO4a,eAAiBtR,KAAKtJ,OAAOuI,mBAS1D,GARIouC,GAActqC,EAAKuqC,aAAapzC,MAAQmzC,IACxCD,GAAoCC,GAEpCD,IAAoBptC,KAAKtJ,OAAO0I,iBAChCY,KAAKtJ,OAAO6I,aAAaC,YAAaf,KAAMsE,EAAKyI,QAAS/L,KAAMsD,EAAKtD,KACjEE,OAAQK,KAAKtJ,OAAOiB,KAAK41C,iBAAiBxqC,EAAKtD,KAAK4iB,aAGxDriB,KAAK2sC,OAA2C,UAAlC3sC,KAAKtJ,OAAOmF,aAAaC,MAAgE,WAA5CkE,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACjH,IAAIoC,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/D62C,OAAQ,EAERC,EAAeztC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAC1DmyC,OAAmB,EACnBC,OAAa,EACb70C,EAAa,aAEbD,EAAemH,KAAK9E,eAAiB,EAAI8E,KAAK0sC,aAAa1sC,KAAK/E,aAAanC,GAAc,KAC3FoE,OAAY,EACZoB,OAAiB,EACjBrB,OAAkB,EAClB2wC,EAA6D,QAA5C5tC,KAAKtJ,OAAOmF,aAAaQ,iBAAoD,IAAxB2D,KAAK9E,cAAuB,EACtD,UAA5C8E,KAAKtJ,OAAOmF,aAAaQ,eAA6B2D,KAAK/E,YACrD+E,KAAK/E,YAAc,EAE7B,GADA2yC,EAAiB5tC,KAAK6tC,wBAAwBD,GAC1C5tC,KAAK8tC,iBAAkB,CAcvB,GAbI9tC,KAAK0sC,aAAan1C,SAClB2F,EAAY8C,KAAK0sC,aAAa1sC,KAAK/E,aAAa+E,KAAKtJ,OAAOwG,WAC5DD,EAAkB+C,KAAK0sC,aAAa1sC,KAAK/E,aAAa+E,KAAKtJ,OAAOuG,iBAC9D+C,KAAK0sC,aAAa1sC,KAAK/E,aAAanC,KACpCwF,EAAiB0B,KAAK0sC,aAAa1sC,KAAK/E,aAAanC,GAAoB,WAGjFkH,KAAKusC,kBAAoB5yC,EAAYqG,KAAKusC,mBAC1CvsC,KAAKysC,kBAAoB9yC,EAAYqG,KAAKysC,mBAC1CzsC,KAAKysC,kBAAkBj0C,KAAKwH,KAAK0sC,aAAa1sC,KAAK/E,cACnDuyC,EAAQxtC,KAAKtJ,OAAOiB,KAAKogB,gBAAgB61B,GAAgBG,QACzDP,EAAMx0C,SAAWud,SAAOvW,KAAKtJ,OAAOsc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwBk4B,EAAMx0C,SAAUw0C,EAAOxtC,KAAKtJ,SACxD2B,OAAOwE,UAAUC,eAAeC,KAAKywC,EAAO,SAAU,CAEvD,GADAxtC,KAAKguC,YAAqC,IAAxBhuC,KAAK9E,cAAuB,EAAI8E,KAAKguC,WACP,UAA5ChuC,KAAKtJ,OAAOmF,aAAaQ,gBAEzB,GADAmxC,EAAMS,cAAgBp1C,EAClBmH,KAAK9E,eAAiB,EAAG,CACzBsyC,EAAM10C,WAAasD,YAAW4D,KAAK0sC,aAAa1sC,KAAK/E,cACrDuyC,EAAMlvC,eAAiBkvC,EAAM10C,WAAWE,gBACjCw0C,EAAM10C,WAAWQ,oBACjBk0C,EAAM10C,WAAWkH,KAAKtJ,OAAO0G,cACpCowC,EAAMrzC,MAAQqzC,EAAM10C,WAAWqB,MAAQ,EACvCqzC,EAAMtzC,MAAQ8F,KAAKguC,WACnB,IAAIE,EAAmB90C,EAAoB4G,KAAK0sC,aAAa1sC,KAAK/E,cAAc1D,OAC5EmB,EAASU,EAAoB4G,KAAK0sC,aAAa1sC,KAAK/E,cAAcizC,EAAmB,GACzFx1C,EAAShB,oBAAkBgB,GAAUsH,KAAK0sC,aAAa1sC,KAAK/E,aAAevC,EAC3Eg1C,EAAmBjvC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE+vC,KAAkBjvC,QAAQ9F,EAAO+0C,IACjFztC,KAAKhF,kBACLwyC,EAAMxtC,KAAKtJ,OAAOuG,iBAAmBC,GAEzCG,EAAgBowC,EAAcD,EAAM10C,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBwyC,SAG7F,IAAiD,UAA5CxtC,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAClF3E,oBAAkBsI,KAAK0sC,aAAa1sC,KAAK/E,cAAe,CAS5D,GARAuyC,EAAMrzC,MAAQ6F,KAAK0sC,aAAa1sC,KAAK/E,aAAkB,MACnDuyC,EAAMrzC,OAAS6F,KAAK9E,eAAiB,IACrCsyC,EAAM10C,WAAaD,EACnB20C,EAAMlvC,eAAiBA,SAChBkvC,EAAM10C,WAAWQ,oBACjBk0C,EAAM10C,WAAWkH,KAAKtJ,OAAO0G,eAExCowC,EAAMtzC,MAAoD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA6B2D,KAAKguC,WAAahuC,KAAKguC,WAAa,EACxD,UAA5ChuC,KAAKtJ,OAAOmF,aAAaQ,gBAA8B2D,KAAK9E,eAAiB,EAAG,CAC5EgzC,EAAmB90C,EAAoB4G,KAAK0sC,aAAa1sC,KAAK/E,cAAc1D,OAC5EmB,EAASU,EAAoB4G,KAAK0sC,aAAa1sC,KAAK/E,cAAcizC,EAAmB,GACzFx1C,EAAShB,oBAAkBgB,GAAUsH,KAAK0sC,aAAa1sC,KAAK/E,aAAevC,EAC3Eg1C,EAAmBjvC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE+vC,KAAkBjvC,QAAQ9F,EAAO+0C,IAEzF,GAAgD,UAA5CztC,KAAKtJ,OAAOmF,aAAaQ,gBAA8B2D,KAAK9E,eAAiB,EAAG,CAC5ExC,EAASsH,KAAK0sC,aAAa1sC,KAAK/E,aACpCyyC,EAAmBjvC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE+vC,KAAkBjvC,QAAQ9F,EAAO+0C,IAErFztC,KAAKhF,kBACLwyC,EAAMxtC,KAAKtJ,OAAOuG,iBAAmBA,GAG7CuwC,EAAMtzC,OAAyB,IAAjBszC,EAAMtzC,MAAe,EAAIszC,EAAMtzC,MAC7CszC,EAAMn0C,iBAAkB,EACxBm0C,EAAMl0C,gBACN0G,KAAK0sC,aAAavvC,OAAOqwC,EAAMtzC,MAAO,EAAGszC,GACzCxtC,KAAK9D,mBAAmBiB,OAAOqwC,EAAMtzC,MAAO,EAAGszC,GAE3CG,EADAD,GAIaF,EAAMtzC,MAEyB,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,iBACzBsxC,EAA6B,IAAhBH,EAAMtzC,MAAcyzC,EAAaA,EAAa,GAE/DlvC,EAAKtB,OAAOwwC,EAAY,EAAGH,GAC3BxtC,KAAKusC,kBAAkB/zC,KAAKg1C,GAEhCxtC,KAAKtJ,OAAOiB,KAAKogB,gBAAgB61B,GAAgBnvC,KAAO+uC,EACxDxtC,KAAK8tC,kBAAmB,GAExB9tC,KAAKtJ,OAAO4a,eAAiBtR,KAAKtJ,OAAOuI,oBACoB,QAA1De,KAAKtJ,OAAOiB,KAAKogB,gBAAgB61B,GAAgB1tC,OACpDM,QAAMR,KAAK9D,mBAAmB0xC,GAAiB5tC,KAAKtJ,OAAOiB,KAAKogB,gBAAgB61B,GAAgBG,WAI5G1B,EAAUxvC,UAAUsJ,eAAiB,SAAUzI,GAE3C,GAAsC,SAAlCsC,KAAKtJ,OAAOmF,aAAaC,MAAmBkE,KAAKtJ,OAAOqF,WAAuB,aAG/E,OAFA2B,EAAEsL,QAAS,OACXhJ,KAAKtJ,OAAOqF,WAAuB,cAAI,GAG3CiE,KAAK9E,cAAgB8E,KAAKtJ,OAAOiB,KAAK6vB,iBACtCxnB,KAAK/E,YAAc+E,KAAKtJ,OAAOiB,KAAK6vB,kBAAoB,EAAIxnB,KAAKtJ,OAAOiB,KAAK6vB,iBAAmB,EAChGxnB,KAAK5E,aAAe4E,KAAKtJ,OAAO+R,qBAAqB,IAEzD4jC,EAAUxvC,UAAUoJ,SAAW,SAAUvI,GACrC,GAAgD,WAA5CsC,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACtD2D,KAAK2sC,OAAQ,EACb3sC,KAAK8tC,kBAAmB,EACxB,IAAI9M,EAAc,EAMlB,GALKhhC,KAAK0sC,aAAan1C,SACnByI,KAAKusC,qBACLvsC,KAAK0sC,aAAe/yC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,0BAEX,QAA5C6D,KAAKtJ,OAAOmF,aAAaQ,eAA0B,CACnD,IAAInE,EAAU8H,KAAKtJ,OAAOiB,KAAKwE,wBACO,UAAlC6D,KAAKtJ,OAAOmF,aAAaC,OAAqBkE,KAAKtJ,OAAOsF,kBAAkBgE,KAAKqT,cAAc9b,OAAS,GACrGyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKoe,gBAAgB7mB,UACtDW,EAAU8H,KAAK0sC,cAEnB1sC,KAAKmuC,iBAAiBj2C,GACtB8H,KAAKtJ,OAAOub,OAAO8a,OACnB/sB,KAAKssC,gBAAkB,EAE3BtsC,KAAKouC,iBAEL,IAAIC,EAAchwC,WAAS,cAAe2B,KAAKtJ,OAAOiB,MAClD22C,EAAQtuC,KAAKtJ,OAAOogB,kBACpB9W,KAAKtJ,OAAOsF,kBAAkBgE,KAAKoe,gBAAgB7mB,QAAsD,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBACtF2kC,EAActjC,EAAEiB,IAAI+K,SACpB2kC,EAAYzb,aAAa2b,OAAOA,OAASvuC,KAAKuuC,QAG9CvN,EAAcsN,EAAMr3B,uBAAuB,cAAc,GAAGvN,SAKhE2kC,EAAYzb,aAAa2b,OAAOhwB,SAAWyiB,EAAaqN,EAAYzb,aAAa2b,OAAOhwB,QAAQ,MAGxG8tB,EAAUxvC,UAAUqJ,kBAAoB,WAC/BlG,KAAK0sC,aAAan1C,SACnByI,KAAK0sC,aAAe/yC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,0BAE3D,IAAIkyC,EAAchwC,WAAS,cAAe2B,KAAKtJ,OAAOiB,MACtDqI,KAAKuuC,OAASF,EAAYzb,aAAa2b,OAAOA,OAC9C,IAAI5vC,KACAzG,KACAs2C,EAAaxuC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACxDkD,EAAOuB,KAAKtJ,OAAOiB,KAAK8Q,qBAAqBzI,KAAKtJ,OAAOiB,KAAK8Q,qBAAqBlR,OAAS,GAC5Fk3C,EAASr1C,EAAoBqF,GACjC,GAAIgwC,EAAOl3C,OACP,IAAK,IAAIF,EAAI,EAAGA,EAAIo3C,EAAOl3C,OAAQF,IAAK,CACpC,IAAI6C,EAAQ8F,KAAKtJ,OAAOiB,KAAKmH,wBAAwB2vC,EAAOp3C,GAAGm3C,IAC/D7vC,EAAInG,KAAKwH,KAAKtJ,OAAOiB,KAAKkH,UAAU3E,KAChC8F,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAO4a,eAAiBtR,KAAKtJ,OAAOuI,qBACnEN,EAAInG,KAAKwH,KAAKtJ,OAAOiB,KAAKy+B,iBAAiBl8B,IAIvD,IAAKxC,oBAAkB+G,EAAK3F,YAAa,CACrC,IAAIA,EAAaC,EAAciH,KAAKtJ,OAAQ+H,EAAK3F,WAAWE,UAC5D,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAIipC,EAAaxpC,EAAWQ,aAAakF,QAAQC,GACjD3F,EAAWQ,aAAa6D,OAAOmlC,EAAY,GAE/CtiC,KAAKwsC,oBAAsB7yC,EAAYqG,KAAKwsC,qBAC5CxsC,KAAKwsC,oBAAoBh0C,KAAKiG,GAElCgwC,EAAOj2C,KAAKiG,GACZvG,EAAUu2C,EACV,IAASp3C,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,IAAIs2C,EAAa3tC,KAAK0sC,aAAavuC,IAAI,SAAUT,GAAK,OAAOA,EAAE8wC,KAAgBhwC,QAAQtG,EAAQb,GAAGm3C,KAC9E,IAAhBb,GACA3tC,KAAK0sC,aAAavvC,OAAOwwC,EAAY,GAG7C,IAASt2C,EAAI,EAAGA,EAAIsH,EAAIpH,OAAQF,IACvBK,oBAAkBiH,EAAItH,KACvB2I,KAAKtJ,OAAOiB,KAAK27B,gBAAgBob,gBAAgBl2C,KAAKmG,EAAItH,KAItEg1C,EAAUxvC,UAAUuxC,eAAiB,WAEjC,IAAK,IADDtmC,EAAO9H,KAAKtJ,OAAOiB,KAAKo7B,cACnB17B,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IAC7ByQ,EAAKzQ,GAAG2V,aAAa,gBAAiB3V,EAAEuQ,YAE5C,GAAI5H,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO4a,cAEnE,CAAA,IADDq9B,EAAQ3uC,KAAKtJ,OAAOiB,KAAKqX,qBAC7B,IAAS3X,EAAI,EAAGA,EAAIs3C,EAAMp3C,OAAQF,IAC9Bs3C,EAAMt3C,GAAG2V,aAAa,gBAAiB3V,EAAEuQ,cAIrDykC,EAAUxvC,UAAUsxC,iBAAmB,SAAUj2C,GAI7C,IAAK,IAHDq5B,EAAavxB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACxD8X,EAAe,eACfva,EAAyD,UAA5CkH,KAAKtJ,OAAOmF,aAAaQ,eAA6B,gBAAkB,aAChFhF,EAAI,EAAGA,EAAI2I,KAAKtJ,OAAOsF,kBAAkBqX,GAAc9b,OAAQF,IAC/DK,oBAAkBsI,KAAKtJ,OAAOsF,kBAAkBqX,GAAchc,GAAGyB,KAC9DkH,KAAKtJ,OAAOsF,kBAAkBqX,GAAchc,GAAGyB,GAAYy4B,KAAgBr5B,EAAQ8H,KAAK/E,aAAas2B,KACrGvxB,KAAKssC,gBAAkBtsC,KAAKssC,gBAAkB,IAK9DD,EAAUxvC,UAAUuJ,gBAAkB,SAAU1I,GAC5C,IACIkxC,EAAgB,iBAChBzwB,EAAiBzgB,EAAErC,aAA0B,eACjD,GAAIqC,EAAErC,aAA0B,eAAE9D,OAE9B,IAAK,IAAIF,EAAI,EAAGA,EAAI8mB,EAAe5mB,OAAQF,IACvCwD,GAAaZ,MAAOkkB,EAAe9mB,GAAIiE,OAAQ,QAAU0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,mBAFtG,GAKrB,GAAIwC,EAAErC,aAAauzC,GAAer3C,OAGzB,CAAA,IADDmB,EADiBgF,EAAErC,aAAauzC,GAEpC,IAASv3C,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpC2I,KAAK6uC,eAAen2C,EAAOrB,GAAG2B,UAE9B,IAAK,IADDy1C,EAASr1C,EAAoBV,EAAOrB,IAC/BiK,EAAI,EAAGA,EAAImtC,EAAOl3C,OAAQ+J,IAC/BtB,KAAK6uC,eAAeJ,EAAOntC,GAAGtI,UAElC0E,EAAErC,aAAauzC,GAAiBlxC,EAAErC,aAAauzC,GAAer1C,OAAOk1C,IAG7EzuC,KAAK2sC,OAAQ,GAEjBN,EAAUxvC,UAAUgyC,eAAiB,SAAU50C,UAEpC+F,KAAKtJ,OAAe,yBAAEuD,UAEtB+F,KAAKtJ,OAAS,mBAAEuD,IAE3BoyC,EAAUxvC,UAAUgwC,kBAAoB,WACpC,IACI3yC,EADA25B,EAAgB,gBAEhB/6B,EAAa,aAEboD,EAAqB8D,KAAKtJ,OAAOiB,KAAKwE,wBACtC7C,EAAe,eACfmF,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/D46B,EAAavxB,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAC5D,IAAK7D,oBAAkBsI,KAAKtJ,OAAOm9B,IAAiB,CAChD,IAAIl1B,EAAMqB,KAAKtJ,OAAOm9B,GAAe/oB,QAAQ,MAC7C9K,KAAKtJ,OAAOq9B,YAAYp1B,GACxBqB,KAAKtJ,OAAOm9B,GAAiB,KAEjC,IAAKn8B,oBAAkBsI,KAAKusC,mBACxB,IAAK,IAAIl1C,EAAI,EAAGA,EAAI2I,KAAKusC,kBAAkBh1C,OAAQF,IAG/C,GAFA6C,EAAQuE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAE6zB,KAAgB/yB,QAAQwB,KAAKusC,kBAAkBl1C,GAAGk6B,IAC3F9yB,EAAKtB,OAAOjD,EAAO,GAC6B,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,iBACzBnC,EAAQgC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAE6zB,KAClD/yB,QAAQwB,KAAKusC,kBAAkBl1C,GAAGyB,GAAckH,KAAKusC,kBAAkBl1C,GAAGyB,GAAYy4B,GACrFvxB,KAAKusC,kBAAkBl1C,GAAGk6B,KAC3B75B,oBAAkBwE,EAAmBhC,KAEtC,IAAK,IADD4Y,EAAW5W,EAAmBhC,GAAOZ,GAChCS,EAAI,EAAG+Y,GAAY/Y,EAAI+Y,EAASvb,OAAQwC,IACzC+Y,EAAS/Y,GAAGw3B,KAAgBvxB,KAAKusC,kBAAkBl1C,GAAGk6B,IACtDr1B,EAAmBhC,GAAOZ,GAAc6D,OAAOpD,EAAG,GAO1E,IAAKrC,oBAAkBsI,KAAKwsC,qBACxB,IAASn1C,EAAI,EAAGA,EAAI2I,KAAKwsC,oBAAoBj1C,OAAQF,IACjD,IAAKK,oBAAkBsI,KAAKwsC,oBAAoBn1C,GAAGyB,IAAc,CAC7DoB,EAAQgC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAE6zB,KAClD/yB,QAAQwB,KAAKwsC,oBAAoBn1C,GAAGyB,GAAYy4B,IACrD,IAAIud,EAA4D,IAA5C9uC,KAAKwsC,oBAAoBn1C,GAAa,MAAU2I,KAAKwsC,oBAAoBn1C,GAAa,MACtG2I,KAAKwsC,oBAAoBn1C,GAAa,MAAI,EACzCK,oBAAkBwE,EAAmBhC,KACtCgC,EAAmBhC,GAAOZ,GAAc6D,OAAO2xC,EAAe,EAAG9uC,KAAKwsC,oBAAoBn1C,IAK1G2I,KAAKusC,kBAAoBvsC,KAAK0sC,aAAe1sC,KAAKysC,kBAAoBzsC,KAAK9D,sBAC3E8D,KAAK0sC,aAAe/yC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACjD6D,KAAKguC,WAAa,EAClBhuC,KAAK9D,mBAAqBvC,EAAYqG,KAAKtJ,OAAOiB,KAAKwE,yBACvD6D,KAAKwsC,uBACLxsC,KAAKtJ,OAAOiB,KAAK4H,aAAa6vB,WAElCid,EAAUxvC,UAAUwJ,UAAY,SAAUtD,GACtC,GAAsC,UAAlC/C,KAAKtJ,OAAOmF,aAAaC,KAAkB,CAC3C,IAAIzE,OAAI,EACJgE,EAAehD,OAAOyE,eAAeC,KAAKgG,EAAM,kBAAoBA,EAAKgsC,eAAiB/uC,KAAKtJ,OAAOsF,kBACtGoiB,EAAiB,iBAIjB3f,EAAQuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC/DuF,EAAqB8D,KAAKtJ,OAAOiB,KAAKwE,wBACtC6yC,EAAehvC,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE1D0zC,EAAa5zC,EAAyB,aAEtCH,OAAgB,EAChBD,OAAc,EAEdG,OAAe,EAKnB,GAHI6zC,EAAW13C,OAAS,GAAiD,WAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBAClD4yC,EAAW5N,UAEiC,WAA5CrhC,KAAKtJ,OAAOmF,aAAaQ,eAEzB,GADAoC,EAAKtB,OAAOsB,EAAKlH,OAAS03C,EAAW13C,OAAQ03C,EAAW13C,QACnDyI,KAAKtJ,OAAOga,YAKZ,CACD,IAAIw+B,EAAev1C,EAAY8E,GAC3Bw2B,EAAaia,EAAa/wC,IAAI,SAAUT,GAAK,OAAOA,EAAEsxC,KACrDxwC,QAAQtC,EAAmB,GAAG8yC,IAC/BG,EAAWla,EAAaj1B,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,SAC1DtsC,EAAqBgzC,EAAa/xC,OAAO83B,EAAYka,QATjDjzC,EAAmB3E,OAAS03C,EAAW13C,QACvC2E,EAAmBiB,OAAOjB,EAAmB3E,OAAS03C,EAAW13C,OAAQ03C,EAAW13C,QAchG,IAHsC,IAAlCyI,KAAKysC,kBAAkBl1C,QACvByI,KAAKysC,kBAAkBj0C,KAAKwH,KAAKtJ,OAAO8G,SAASuF,EAAK7I,QAErD7C,EAAI,EAAGA,EAAI43C,EAAW13C,OAAQF,IAAK,CACpC,IAAI+C,EAAWgC,YAAW6yC,EAAW53C,IAgCrC,UA/BO+C,EAAStB,kBACTsB,EAASpB,gBACToB,EAASF,aACTE,EAASD,aACTC,EAASf,uBACTe,EAASd,oBACTc,EAASkE,eACX5G,oBAAkB0C,EAAS6zC,uBACrB7zC,EAAS6zC,cAEpBgB,EAAW53C,GAAG+C,SAAWA,EACzBgB,EAAe4E,KAAKysC,kBAAkBp1C,GAClCK,oBAAkB0D,KAClBA,EAAe4E,KAAKysC,kBAAkBp1C,EAAI,IAE1C2I,KAAKhF,kBACAtD,oBAAkBu3C,EAAW53C,GAAGyB,aACjCuE,EAAgB2xC,EAAcC,EAAW53C,GAAGyB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBi0C,EAAW53C,KAGhHK,oBAAkB0D,KACnBH,EAAcG,EAAalB,OAEiB,QAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBAAwE,WAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAC1E3E,oBAAkBu3C,EAAW53C,GAAGyB,cAAuC,IAAxBkH,KAAK9E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaZ,MAAOg1C,EAAW53C,GAAIiE,OAAQ,OAAS0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBC,EAAaC,OAvDvF,EAuDkHE,GAC/HF,EAAgB,KACgC,UAA5C8E,KAAKtJ,OAAOmF,aAAaQ,iBAA+B3E,oBAAkBu3C,EAAW53C,GAAa,YAIlG,IAAK,IAHD+3C,EAAalzC,EAAmBiC,IAAI,SAAUT,GAAK,OAAOA,EAAEsxC,KAC3DxwC,QAAQywC,EAAW53C,GAAa,WAAE23C,IACnCl8B,EAAW5W,EAAmBkzC,GAAwB,aACjDr1C,EAAI,EAAGA,EAAI+Y,EAASvb,OAAQwC,IAC7B+Y,EAAS/Y,GAAGi1C,KAAkBC,EAAW53C,GAAG23C,IAC5C9yC,EAAmBkzC,GAAwB,aAAEjyC,OAAOpD,EAAG,GAKvE,GAAIsB,EAAa+iB,GAAgB7mB,OAC7B,IAAKF,EAAI,EAAGA,EAAIgE,EAAa+iB,GAAgB7mB,OAAQF,IACjDwD,GAAaZ,MAAOoB,EAAa+iB,GAAgB/mB,GAAIiE,OAAQ,UAAY0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBC,EAAaC,OAtEhH,EAsE2IE,GAG5J4E,KAAKtJ,OAAO6G,cACZ,IAAK,IAAIu5B,EAAM,EAAGA,EAAMr4B,EAAKlH,OAAQu/B,IACjCr4B,EAAKq4B,GAAU,MAAIA,EACnBxhB,WAAS,sBAAwB7W,EAAKq4B,GAAa,SAAI,SAAUA,EAAK92B,KAAKtJ,QACtE+H,EAAKq4B,GAAU,OAChB92B,KAAKtJ,OAAO6G,WAAW/E,KAAKiG,EAAKq4B,IAI7C92B,KAAKysC,kBAAoBzsC,KAAKusC,kBAAoBvsC,KAAK0sC,aAAe1sC,KAAKwsC,oBAAsBxsC,KAAK9D,uBAE1GmwC,EAAUxvC,UAAUgxC,wBAA0B,SAAU3zC,GACpD,IAAI4N,EAAO9H,KAAKtJ,OAAOiB,KAAKo7B,cAC5B,IAAiD,UAA5C/yB,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,iBAC9E2D,KAAK9E,eAAiB,EAAG,CAC5B,IAAKxD,oBAAkBsI,KAAK0sC,aAAa1sC,KAAK/E,eAAiB+E,KAAK0sC,aAAa1sC,KAAK/E,aAAa9B,SAC/F,GAAI6G,KAAKtJ,OAAOsF,kBAAkBgE,KAAKqT,cAAc9b,OAAS,GACvDyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKoe,gBAAgB7mB,QAEtD,GADA2C,GAASd,EAAoB4G,KAAK0sC,aAAa1sC,KAAK/E,cAAc1D,OAClB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAErDnC,GADsB8F,KAAKmtC,2BAK/BjzC,GAASd,EAAoB4G,KAAK0sC,aAAa1sC,KAAK/E,cAAc1D,OAGtE2C,GAAS4N,EAAKvQ,SACd2C,EAAQ4N,EAAKvQ,OAAS,GAE1ByI,KAAKmuC,iBAAiBnuC,KAAKtJ,OAAOiB,KAAKwE,yBACnC6D,KAAKssC,kBACLpyC,GAAS8F,KAAKssC,iBAElBtsC,KAAKssC,gBAAkB,EAE3B,OAAOpyC,GAEXmyC,EAAUxvC,UAAUiwC,qBAAuB,SAAUpvC,GACjDA,EAAEqF,KAAKiG,QAAS,EAChB,IAAI+kC,EAAU/tC,KAAKtJ,OAAOiB,KAAKqE,kBAC3BqX,KAEAhb,OAAOC,KAAKy1C,GAASx2C,SACrB8b,EAAe06B,EAAQ16B,cAE3B,IAAK,IAAIhc,EAAI,EAAGA,EAAIgc,EAAa9b,OAAQF,IACrCqG,EAAEoK,KAAK3K,OAAOkW,EAAahc,GAAQ,MAAG,IAG9Cg1C,EAAUxvC,UAAUkwC,cAAgB,SAAUhqC,GAG1CA,EAAU,MAAI/C,KAAKtJ,OAAOqhC,kBAAkB,GAAW,UAEpDsU,KC3iBPgD,GAAsB,WAMtB,SAASA,EAAK34C,GACVsJ,KAAKqT,aAAe,eACpBrT,KAAKoe,eAAiB,iBACtBpe,KAAKsvC,iBAAmB,KACxB7sC,OAAKC,OAAO6sC,QACZvvC,KAAKtJ,OAASA,EACdsJ,KAAKhF,iBAAmBtD,oBAAkBhB,EAAOuG,iBACjD+C,KAAKwvC,uBAAyB,KAC9BxvC,KAAKyvC,sBACLzvC,KAAK0vC,gBAAkB,IAAIrD,GAAUrsC,KAAKtJ,QAC1CsJ,KAAKiK,mBA02BT,OAl2BAolC,EAAKxyC,UAAU+F,cAAgB,WAC3B,MAAO,QAMXysC,EAAKxyC,UAAUoN,iBAAmB,WAC9BjK,KAAKtJ,OAAOwT,GAAG2R,GAAmB7b,KAAKwF,WAAYxF,MACnDA,KAAKtJ,OAAOwT,GAAGmhB,GAAkBrrB,KAAKyF,UAAWzF,MACjDA,KAAKtJ,OAAOwT,GAAG6iB,GAAiB/sB,KAAK0F,SAAU1F,MAC/CA,KAAKtJ,OAAOwT,GAAG8iB,GAA0BhtB,KAAK2F,kBAAmB3F,MACjEA,KAAKtJ,OAAOwT,GAAG2hB,GAAiB7rB,KAAK4F,SAAU5F,MAC/CA,KAAKtJ,OAAOwT,GAAGqiB,GAAoBvsB,KAAKgG,YAAahG,MACrDA,KAAKtJ,OAAOiB,KAAKuS,GAAGylC,GAAmB3vC,KAAKsG,WAAYtG,MACxDA,KAAKtJ,OAAOiB,KAAKuS,GAAG,iBAAkBlK,KAAK4vC,YAAa5vC,MACxDA,KAAKtJ,OAAOiB,KAAKuS,GAAG,gBAAiBlK,KAAK6vC,aAAc7vC,MACxDA,KAAKtJ,OAAOwT,GAAG+hB,GAAiBjsB,KAAK8F,SAAU9F,MAC/CA,KAAKtJ,OAAOwT,GAAG,cAAelK,KAAK8vC,iBAAkB9vC,MACrDA,KAAKtJ,OAAOwT,GAAG,iBAAkBlK,KAAK8vC,iBAAkB9vC,MACxDA,KAAKtJ,OAAOiB,KAAKuS,GAAG6lC,GAAkB/vC,KAAK2F,kBAAmB3F,MAC9DA,KAAKtJ,OAAOiB,KAAKuS,GAAG,WAAYlK,KAAKgwC,aAAchwC,MACnDA,KAAKtJ,OAAOiB,KAAKuS,GAAG,cAAelK,KAAKiwC,eAAgBjwC,MACxDA,KAAKtJ,OAAOwT,GAAG,0BAA2BlK,KAAKkwC,wBAAyBlwC,MAExEA,KAAKtJ,OAAOiB,KAAKuS,GAAGimC,GAAwBnwC,KAAK2G,gBAAiB3G,MAClEA,KAAKtJ,OAAOiB,KAAKuS,GAAGkmC,GAA0BpwC,KAAK4G,kBAAmB5G,MACtEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,mBAAoBlK,KAAKqwC,eAAgBrwC,MAC7DA,KAAKtJ,OAAOiB,KAAKuS,GAAG,mBAAoBlK,KAAKswC,eAAgBtwC,OAEjEqvC,EAAKxyC,UAAUmzC,aAAe,SAAUtyC,GACpCsC,KAAKuwC,kBAAoB7yC,EAAE0D,QAE/BiuC,EAAKxyC,UAAUyzC,eAAiB,SAAUE,GACtCA,EAAQn0C,eAAiB2D,KAAKtJ,OAAOmF,aAAaQ,eAClDm0C,EAAQv1C,YAAc+E,KAAK/E,YAC3Bu1C,EAAQC,cAAgBzwC,KAAKsvC,kBAEjCD,EAAKxyC,UAAU8J,gBAAkB,SAAU5D,GACvC/C,KAAKtJ,OAAOuS,QAAQ4jB,EAAoB9pB,IAE5CssC,EAAKxyC,UAAU+J,kBAAoB,SAAU7D,GACH,SAAlC/C,KAAKtJ,OAAOmF,aAAaC,MACzBkE,KAAKtJ,OAAOuS,QAAQgP,EAAuBlV,IAOnDssC,EAAKxyC,UAAU0N,oBAAsB,WAC7BvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAIoR,GAAmB7b,KAAKwF,YACxCxF,KAAKtJ,OAAO+T,IAAI4gB,GAAkBrrB,KAAKyF,WACvCzF,KAAKtJ,OAAO+T,IAAIsiB,GAAiB/sB,KAAK0F,UACtC1F,KAAKtJ,OAAO+T,IAAIuiB,GAA0BhtB,KAAK2F,mBAC/C3F,KAAKtJ,OAAO+T,IAAI8hB,GAAoBvsB,KAAKgG,aACzChG,KAAKtJ,OAAOiB,KAAK8S,IAAIklC,GAAmB3vC,KAAKsG,YAC7CtG,KAAKtJ,OAAOiB,KAAK8S,IAAI,iBAAkBzK,KAAK4vC,aAC5C5vC,KAAKtJ,OAAOiB,KAAK8S,IAAI,gBAAiBzK,KAAK6vC,cAC3C7vC,KAAKtJ,OAAO+T,IAAIwhB,GAAiBjsB,KAAK8F,UACtC9F,KAAKtJ,OAAO+T,IAAI,cAAezK,KAAK8vC,kBACpC9vC,KAAKtJ,OAAO+T,IAAI,iBAAkBzK,KAAK8vC,kBACvC9vC,KAAKtJ,OAAOiB,KAAK8S,IAAI,cAAezK,KAAKiwC,gBACzCjwC,KAAKtJ,OAAOiB,KAAK8S,IAAIslC,GAAkB/vC,KAAK2F,mBAC5C3F,KAAKtJ,OAAO+T,IAAI,0BAA2BzK,KAAKkwC,yBAChDlwC,KAAKtJ,OAAOiB,KAAK8S,IAAI0lC,GAAwBnwC,KAAK2G,iBAClD3G,KAAKtJ,OAAOiB,KAAK8S,IAAI2lC,GAA0BpwC,KAAK4G,mBACpD5G,KAAKtJ,OAAOiB,KAAK8S,IAAI,WAAYzK,KAAKgwC,cACtChwC,KAAKtJ,OAAOiB,KAAK8S,IAAI,mBAAoBzK,KAAKqwC,gBAC9CrwC,KAAKtJ,OAAOiB,KAAK8S,IAAI,mBAAoBzK,KAAKswC,kBASlDjB,EAAKxyC,UAAU+M,QAAU,WACrB5J,KAAKuK,uBAOT8kC,EAAKxyC,UAAU6zC,oBAAsB,SAAUtd,GAC3CpzB,KAAKtJ,OAAOiB,KAAKoE,WAAW20C,oBAAoBtd,IAEpDic,EAAKxyC,UAAUizC,iBAAmB,SAAU/sC,GACxC,IAAI4tC,EAAYp4C,YAAU,aAAcwK,GACpCghB,EAAYxrB,YAAU,OAAQo4C,GAC9BC,EAAU5wC,KAAKtJ,OACfG,EAAU+5C,EAAQj6C,WAAWE,QACjC,IAAKJ,EAAam6C,IAAY/5C,aAAmB2sB,sBAClB,SAA1BmtB,EAAU9wC,aAA+C,QAArB8wC,EAAUr1C,SACN,UAAxCs1C,EAAQ/0C,aAAaQ,gBAAsE,UAAxCu0C,EAAQ/0C,aAAaQ,gBAC1B,UAAxCu0C,EAAQ/0C,aAAaQ,gBAC5B,GAAkB,gBAAd0nB,EAA6B,CAC7B,IAAIra,EAAWhS,oBAAkBi5C,EAAUhyC,OAAStG,OAAOC,KAAKq4C,EAAUhyC,KAAKpH,OAASyI,KAAK9E,cACzFy1C,EAAUhyC,IAAI+K,SAAW,EACzBmnC,EAAYn5C,oBAAkBgS,KAA2B,IAAdA,GACwC,EAAnFknC,EAAQz0C,wBAAwBuN,GAAUknC,EAAQr1C,0BAA0B,IAChFq1C,EAAQj5C,KAAK0c,MAAMM,UAAU,gBAAiBk8B,QAE7C,GAAkB,mBAAd9sB,EAEL,IAAK,IADD+sB,EAAeF,EAAQj5C,KAAK0c,MAAMG,OAAOjd,OACpCF,EAAI,EAAGA,EAAIy5C,EAAcz5C,IACW,kBAArCu5C,EAAQj5C,KAAK0c,MAAMG,OAAOnd,GAAGQ,KAC7B+4C,EAAQj5C,KAAK0c,MAAMG,OAAOrX,OAAO9F,GAK7C2I,KAAKtJ,OAAOmiB,yBAAyC,mBAAdkL,GACvC/jB,KAAK+wC,kBAAkBJ,GAEW,UAAlC3wC,KAAKtJ,OAAOmF,aAAaC,MAA8C,WAA1B60C,EAAU9wC,aACvDG,KAAKtJ,OAAOub,OAAO,uBAG3Bo9B,EAAKxyC,UAAUk0C,kBAAoB,SAAUhuC,GACzC,GAA0B,SAArBA,EAAKlD,aAA0C,QAAhBkD,EAAKzH,QAA0C,WAArByH,EAAKlD,YAA0B,CACzF,GAAgD,QAA5CG,KAAKtJ,OAAOmF,aAAaQ,iBAAoD,IAAxB2D,KAAK9E,eACjC,SAArB6H,EAAKlD,aAA0C,QAAhBkD,EAAKzH,OAAmB,CAC3D,IAAI01C,EAAahxC,KAAKtJ,OAAOiB,KAAKogB,gBAC9Bk5B,EAAeD,EAAW7zC,OAAO,EAAG,GAAG,GACvC+zC,EAAoBlxC,KAAK/E,YACzBue,EAAcxZ,KAAKtJ,OAAOyF,wBACkB,UAA5C6D,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,iBAChF60C,GAAqB93C,EAAoBogB,EAAY03B,EAAoB,IAAI35C,QAEjF25C,EAAgE,UAA5ClxC,KAAKtJ,OAAOmF,aAAaQ,eAA6B60C,EAAoB,EAAIA,EAClGF,EAAW7zC,OAAO+zC,EAAmB,EAAGD,GACxC,IAAIE,EAAY33B,EAAYrc,OAAO,EAAG,GAAG,GACzCqc,EAAYrc,OAAO+zC,EAAmB,EAAGC,GACzCnxC,KAAKoxC,8BAA8BD,EAAWnxC,KAAK/E,aAEvD,IAAIg7B,EAAcj2B,KAAKtJ,OAAOiB,KAAKy+B,iBAC/Bib,EAAoBrxC,KAAKtJ,OAAOiB,KAAK25C,uBACrCC,EAAUvxC,KAAKtJ,OAAOqwB,uBAAuByqB,YAC5CD,IACDE,gBAAczxC,KAAKtJ,OAAOiB,KAAMqI,KAAKtJ,OAAOiB,KAAKogB,gBAAiB/X,KAAKtJ,OAAOiB,KAAKkH,UAAW,GAC9FmB,KAAK0xC,YAAY1xC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,2BAEhFo1C,GAAWvxC,KAAKtJ,OAAOuI,mBAAqB,IAC7CwyC,gBAAczxC,KAAKtJ,OAAOiB,KAAM05C,EAAmBpb,EAAa,GAChEj2B,KAAK0xC,YAAY1xC,KAAKtJ,OAAOiB,KAAKhB,WAAYs/B,EAAaj2B,KAAKtJ,OAAOyF,4BAInFkzC,EAAKxyC,UAAUu0C,8BAAgC,SAAUD,EAAWQ,GAChE,IAAIvqC,EAAQpH,KAGRuoC,EAAO/xB,KAAKC,KAAKk7B,EAAc3xC,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,UAC7DnvB,EAAOkvB,EAAO,EAAIA,EAAO,EACzBqJ,EAAYD,GAAgBt4B,EAAO,GAAKrZ,KAAKtJ,OAAOia,aAAa63B,SACjEqJ,EAA0B7xC,KAAKtJ,OAAOiB,KAAKm6C,qBAAiC,wBAChFD,EAAwB,GAAG10C,OAAO,EAAG,GACrC,IAAIsB,EAAOozC,EAAwBx4B,GAC9B3hB,oBAAkBsI,KAAK5E,gBACxBqD,EAAKhB,OAAO,SAAUC,EAAGxD,GACjBwD,EAAE1E,WAAaoO,EAAMhM,aAAapC,WAClC44C,EAAY13C,MAGhB8F,KAAK5E,aAAa/B,iBAAmB2G,KAAK5E,aAAa9B,aAAa/B,QACxB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAChFu1C,GAAax4C,EAAoB4G,KAAK5E,cAAc7D,SAGxDq6C,GAAa5xC,KAAKtJ,OAAOia,aAAa63B,WAEtC/pC,EAAOozC,EADPx4B,GAAQ,GAERu4B,EAAYA,EAAY5xC,KAAKtJ,OAAOia,aAAa63B,UAAY,EAAIoJ,EAAY5xC,KAAKtJ,OAAOia,aAAa63B,SAAW,GAErHoJ,EAAwD,UAA5C5xC,KAAKtJ,OAAOmF,aAAaQ,eAA6Bu1C,EAAY,EAAIA,EAClFnzC,EAAKtB,OAAOy0C,EAAW,EAAGT,GAC1BnxC,KAAKtJ,OAAOiB,KAAKm6C,qBAA0C,yBAE/DzC,EAAKxyC,UAAU8I,kBAAoB,SAAU5C,GACzC,IAAI3B,EAAS2B,EAAK3B,OAClB,IAAI1J,oBAAkB0J,EAAO0J,QAAQ,iBAArC,CAGA,IAAInL,EAASK,KAAKtJ,OAAOiB,KAAK41C,kBAAkBnsC,EAAO0J,QAAQ,gBAAgBoB,aAAa,kBAC5F,GAAsC,SAAlClM,KAAKtJ,OAAOmF,aAAaC,OAAoBkE,KAAK+xC,WAAapyC,IAAWA,EAAOsE,cACjFjE,KAAKtJ,OAAOmF,aAAaoE,cAAgBN,EAAOM,eAAkBmB,EAAOgH,UAAUC,SAAS,sBAC5FjH,EAAOgH,UAAUC,SAAS,uBAA0BrI,KAAKtJ,OAAOmF,aAAa+xB,oBAAqB,CAGlG,GAFA5tB,KAAK+xC,WAAY,EACjB/xC,KAAKtJ,OAAOiB,KAAK+lB,eAAgB8J,iBAAkBzkB,EAAK2G,WAAY,GAChE1J,KAAKtJ,OAAO0H,qBAAsB,CAClC,IAAI0Q,EAAKlE,eAAa7H,EAAK3B,OAAQ,SACnCpB,KAAKsvC,iBAAmBxgC,EAAG5C,aAAa,iBACxC4C,EAAG9B,aAAa,gBAAiB8B,EAAGpF,SAAW,IAEnD1J,KAAKgyC,mBAAmB,YAGhC3C,EAAKxyC,UAAUm1C,mBAAqB,SAAUl2C,GAC1CkE,KAAKtJ,OAAOiB,KAAK+lB,eAAgB7hB,cAAgBC,KAAMA,KAAU,GAC9CvD,YAAU,gBAAiByH,KAAKtJ,OAAOiB,KAAKoE,YAClDgG,MAAM/B,KAAKtJ,OAAOiB,KAAKoE,YACpCiE,KAAKtJ,OAAOiB,KAAK41B,QAAS,GAE9B8hB,EAAKxyC,UAAUwzC,eAAiB,WACxBrwC,KAAKtJ,OAAO0H,sBAA0D,SAAlC4B,KAAKtJ,OAAOmF,aAAaC,OAC7DkE,KAAK+xC,WAAY,EACjB/xC,KAAKgyC,mBAAmB,YAGhC3C,EAAKxyC,UAAUyJ,WAAa,SAAUvD,GAC9B/C,KAAK+xC,YACL/xC,KAAKiyC,SAAWlvC,EAAKzH,QAEL,OAAhByH,EAAKzH,QACL0E,KAAK2F,kBAAkB5C,IAG/BssC,EAAKxyC,UAAUgyC,eAAiB,SAAU50C,UAE/B+F,KAAKtJ,OAAe,yBAAEuD,UAEtB+F,KAAKtJ,OAAS,mBAAEuD,IAE3Bo1C,EAAKxyC,UAAUiJ,SAAW,SAAU/C,GAChC,IAAIqE,EAAQpH,KAERkyC,EAAOnvC,EAAY,QAoBvB,UAnBOA,EAAY,QACf/C,KAAKtJ,OAAO0H,uBAAyB1G,oBAAkBsI,KAAKsvC,oBAC5DvsC,EAAKpE,IAAIqO,aAAa,gBAAiBhN,KAAKsvC,kBAC5CtvC,KAAKsvC,sBAAmBtyB,GAEN,UAAlBhd,KAAKiyC,UACLjyC,KAAKtJ,OAAOuS,QAAQgjB,GAAiBlpB,EAAM,SAAUovC,GAC5CA,EAAanpC,QAA6C,SAAnC5B,EAAM1Q,OAAOmF,aAAaC,KAG7Cq2C,EAAanpC,QAA6C,SAAnC5B,EAAM1Q,OAAOmF,aAAaC,OACtDsL,EAAM2qC,WAAY,EAClB3qC,EAAM4qC,mBAAmB,WAJzB5qC,EAAMwpB,mBAAmB,QAMxBl5B,oBAAkBw6C,IACnBA,EAAKnnB,QAAQonB,KAIrBnyC,KAAKuwC,oBAAsBvwC,KAAKuwC,kBAAkBnoC,UAAUC,SAAS,qBACrErI,KAAKuwC,kBAAkBnoC,UAAUC,SAAS,uBAAyBrI,KAAKuwC,kBAAkBnoC,UAAUC,SAAS,kBAG7G,OAFAtF,EAAKiG,QAAS,OACdhJ,KAAKuwC,kBAAoB,MAGS,SAAlCvwC,KAAKtJ,OAAOmF,aAAaC,OACH,QAAlBkE,KAAKiyC,UAAwC,aAAlBjyC,KAAKiyC,SAChCjyC,KAAKiyC,SAAW,KAEO,UAAlBjyC,KAAKiyC,WACVlvC,EAAKiG,QAAS,EACdhJ,KAAKiyC,SAAW,QAO5B5C,EAAKxyC,UAAU+zB,mBAAqB,SAAUwhB,GAC1C,IAAK16C,oBAAkBsI,KAAKtJ,OAAOiB,KAAKm5B,eAAgB,CACpD,IAAIuhB,EAAYryC,KAAKtJ,OAAOsc,QAAQC,GAAK,gBACzCjT,KAAKtJ,OAAOiB,KAAKm5B,cAAcC,aAAashB,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1GpyC,KAAKtJ,OAAOiB,KAAKm5B,cAAcC,aAAashB,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjG/C,EAAKxyC,UAAUmJ,YAAc,WACzB,GAAsC,SAAlChG,KAAKtJ,OAAOmF,aAAaC,KAAiB,CAC1C,IAAIw2C,EAAcj0C,WAAS,yBAA0B2B,KAAKtJ,OAAOiB,KAAKoE,YAClEw2C,EAAWvyC,KAAKtJ,OAAOk7B,iBAAiB0gB,EAAY5oC,SAAU1J,KAAKtJ,OAAO0I,iBAC9EY,KAAKtJ,OAAO6I,aAAaC,YACrBf,KAAM6zC,EAAY9mC,QAClB/L,KAAM8yC,EACN5yC,OAAQK,KAAKtJ,OAAOiB,KAAKiI,aAAaI,KAAKtJ,OAAO0I,mBAEtDY,KAAKgyC,mBAAmB,UACxBhyC,KAAK+xC,WAAY,EAEiB,UAAlC/xC,KAAKtJ,OAAOmF,aAAaC,MACzBkE,KAAKtJ,OAAOub,OAAO,yBAG3Bo9B,EAAKxyC,UAAUozC,eAAiB,SAAUltC,GAClC5L,EAAgB6I,KAAKtJ,SAA6C,SAAlCsJ,KAAKtJ,OAAOmF,aAAaC,MAAmC,SAAhBiH,EAAKzH,SACjF0E,KAAKswB,WAAWvtB,EAAMA,EAAK2G,UAC3B1J,KAAKwyC,cAAczvC,EAAMA,EAAKpE,IAAKoE,EAAK2G,YAGhD2lC,EAAKxyC,UAAU+I,SAAW,SAAU7C,GAChC,IAAIqE,EAAQpH,KACZ,GAAsC,SAAlCA,KAAKtJ,OAAOmF,aAAaC,MAAmBkE,KAAKtJ,OAAOsc,QAAQnI,cAAc,QAAS,CACvF9H,EAAKiG,QAAS,EAEdsM,WAAS,UAAU,EAAOtV,KAAKtJ,OAAOiB,MACtC2d,WAAS,kBAAkB,EAAMtV,KAAKtJ,QACtCqM,EAAKyI,QAAQzI,EAAK5H,YAAc4H,EAAK9I,MACrC,IAAIqoB,EAEAA,EADA5qB,oBAAkBqL,EAAKtD,MACfO,KAAKtJ,OAAOiB,KAAKoE,WAAqB,WAAE02C,KAAKvwB,cAAc8c,WAG3Dj8B,EAAKtD,KAAKu/B,WAEtB,IAAI0T,EACAC,EAAgB3yC,KAAKtJ,OAAO6E,0BAC5B7D,oBAAkB4qB,GAClBtiB,KAAKtJ,OAAOiB,KAAKwE,wBAAwBsB,OAAO,SAAUC,EAAGrG,GACrDqG,EAAEi1C,EAAc,MAAQ5vC,EAAKyI,QAAQmnC,EAAc,MACnDD,EAAar7C,KAMrBq7C,GAAwD,IAA1C1yC,KAAKtJ,OAAOmI,UAAUL,QAAQ8jB,IAAkBtiB,KAAKtJ,OAAOuI,mBAAqB,EAC3Fe,KAAKtJ,OAAOiB,KAAKy+B,iBAAiB53B,QAAQ8jB,GAAStiB,KAAKtJ,OAAOmI,UAAUL,QAAQ8jB,GAEzF,IAAIkU,KAMJ,GALAp6B,SAAOo6B,EAAKzzB,GACZyzB,EAAIxtB,QAAS,EACbwtB,EAAIxzB,KAAO,OACXsf,EAAQtiB,KAAKtJ,OAAOiB,KAAKkH,UAAUyjB,EAAM5Y,UACzC1J,KAAKtJ,OAAOuS,QAAQ4jB,EAAoB2J,GACnCA,EAAIxtB,OAiCLhJ,KAAKtJ,OAAOiB,KAAK41B,QAAS,OA7B1B,GAHKjL,EAAM5Y,WAAa1J,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAwB,QAAlByI,KAAKiyC,WAC5EjyC,KAAK4yC,cAAe,GAEnBn8C,EAAauJ,KAAKtJ,SACjBsJ,KAAKtJ,OAAOC,sBAAsBC,eAAeoJ,KAAKtJ,OAAOC,WAAWE,mBAAmB2sB,qBAa5F,GAAI/sB,EAAauJ,KAAKtJ,SACtBsJ,KAAKtJ,OAAOC,sBAAsBC,eAAeoJ,KAAKtJ,OAAOC,WAAWE,mBAAmB2sB,oBAAoB,CAChH,IAAInP,EAAQrU,KAAKtJ,OAAOiB,KAAK0c,MAEtBrU,KAAKtJ,OAAOiB,KAAKhB,WAAWk8C,OAAOF,EAAc,GAAI5vC,EAAKyI,QAAS6I,EAAMy+B,UAAWz+B,EAAOtR,EAAKgwC,eAClG99B,KAAK,SAAUvX,GACXhG,oBAAkBgG,KACnBqF,EAAKyI,QAAQzI,EAAK5H,YAAcuC,EAAEqF,EAAK5H,aAE3CiM,EAAMkpB,WAAWvtB,EAAM2vC,GACvBtrC,EAAMorC,cAAczvC,EAAMuf,EAAOowB,WAtBrC,GAAIv7C,EAAgB6I,KAAKtJ,QAAS,CAC9B,IACIs8C,GAAanzC,YAAa,OAAQpB,KAAMsE,EAAKyI,QAASlQ,OAAQ,OAAQqD,IAAK2jB,EAC3E5Y,SAAUgpC,EAAYlnC,QAASzI,EAAKyI,QAASrQ,WAAY4H,EAAK5H,WAC9D83C,kBAAmB,KAAMC,oBAAqB,MAClDlzC,KAAKtJ,OAAOiB,KAAK6f,gBAA4B,aAAEw7B,EAAUhzC,KAAKtJ,OAAOiB,KAAK0c,YAG1ErU,KAAKswB,WAAWvtB,EAAM2vC,GACtB1yC,KAAKwyC,cAAczvC,EAAMuf,EAAOowB,KAsBpDrD,EAAKxyC,UAAU21C,cAAgB,SAAUzvC,EAAMpE,EAAK+K,GAChD,IAAIypC,EACAnzC,KAAKtJ,OAAOiB,KAAKy7C,iBACjBpzC,KAAKtJ,OAAOiB,KAAKy7C,gBAAgBhkB,QAAQrsB,EAAKyI,SAElDxL,KAAKtJ,OAAOiB,KAAKoE,WAAWs3C,gBAAgBrzC,KAAKtJ,OAAOiB,KAAKmjB,iBAAiB/X,EAAK5H,cACnF6E,KAAKtJ,OAAOiB,KAAKoE,WAAWu3C,QAAQ1pC,UACd,QAAlB5J,KAAKiyC,UAAwC,aAAlBjyC,KAAKiyC,WAChCjyC,KAAKgyC,mBAAmB,UACxBhyC,KAAK+xC,WAAY,GAErB/xC,KAAK4wB,mBAAmB,QACpB5wB,KAAKtJ,OAAOuI,mBAAqB,IACjCk0C,EAAOnzC,KAAKtJ,OAAOiB,KAAKy+B,iBAAiB1sB,GACzCyD,eAAagmC,IAAQ,cAAe,eACpChmC,cAAYgmC,EAAK5qC,iBAAiB,eAAgB,oBAAqB,iBAE3E4E,eAAaxO,IAAO,cAAe,eACnCwO,cAAYxO,EAAI4J,iBAAiB,eAAgB,oBAAqB,iBAC/B,IAAnCvI,KAAKtJ,OAAwB,iBAC7BsJ,KAAKtJ,OAAOiB,KAAK02C,YAAYkF,eAEjC14C,GAAaZ,MAAO8I,EAAKyI,QAASlQ,OAAQ,QAAU0E,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,cAAe6H,EAAK5H,YAC7HwD,EAAI+K,WAAa1J,KAAKtJ,OAAOyF,wBAAwB5E,OAAS,GAAwB,UAAlByI,KAAKiyC,WAC1EjyC,KAAKiyC,SAAW,MAEpB,IAAIuB,GACAxwC,KAAM,OAAQrD,OAAQK,KAAKtJ,OAAOokB,iBAAiB/X,EAAK5H,YAAasD,KAAMsE,EAAKyI,QAChFioC,aAAc1wC,EAAKgwC,cAAep0C,IAAKA,EAAKyC,OAAQ2B,EAAKtD,MAE7DO,KAAKtJ,OAAOuS,QAAQgP,EAAuBu7B,IAE/CnE,EAAKxyC,UAAU+yC,YAAc,YACpB5vC,KAAKtJ,OAAOiB,KAAK41B,QAAUvtB,KAAK+xC,WAA+B,QAAlB/xC,KAAKiyC,UAAwD,SAAlCjyC,KAAKtJ,OAAOmF,aAAaC,OAC7FkE,KAAKtJ,OAAOmF,aAAakyB,iBAM1B/tB,KAAK4wB,mBAAmB,SALxB5wB,KAAKgyC,mBAAmB,UACxBhyC,KAAK+xC,WAAY,EACjB/xC,KAAKiyC,SAAW,QAO5B5C,EAAKxyC,UAAUyzB,WAAa,SAAUvtB,EAAM2G,GACxC1J,KAAKtJ,OAAOiB,KAAKoE,WAAWw0B,UAAU7mB,EAAU3G,EAAKyI,SACrDxL,KAAKtJ,OAAOiB,KAAKogB,gBAAgBrO,GAAUjL,KAAOsE,EAAKyI,SAE3D6jC,EAAKxyC,UAAU2I,WAAa,SAAU1K,EAASK,GAC3CN,EAAWC,EAASkF,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBgF,KAAK/E,YAAa+E,KAAK9E,cAAeC,EAAY6E,KAAK5E,cAC9G4E,KAAKtJ,OAAO6G,cAGZ,IAAK,IAFDkB,EAAOuB,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cAC9CoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAAK,CAClCoH,EAAKpH,GAAG6C,MAAQ7C,EAChB,IAAIQ,EAAMmI,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACjDT,EAAQb,MAAMpC,KAAS4G,EAAKpH,GAAGQ,IACR,QAAnBiD,EAAQQ,SACRmD,EAAKpH,GAAG8C,MAAQ6F,KAAKyvC,mBAAmBt1C,MACxCsE,EAAKpH,GAAG+C,SAAW4F,KAAKyvC,mBAAmBr1C,SAC3CqE,EAAKpH,GAAG2B,SAAWgH,KAAKyvC,mBAAmBz2C,SACtCtB,oBAAkBsI,KAAKyvC,mBAAmB32C,cAC3C2F,EAAKpH,GAAGyB,WAAakH,KAAKyvC,mBAAmB32C,WAC7C2F,EAAKpH,GAAGiH,eAAiB0B,KAAKyvC,mBAAmBnxC,gBAErDG,EAAKpH,GAAGiC,aAAe0G,KAAKyvC,mBAAmBn2C,cAGvDgc,WAAS,sBAAwB7W,EAAKpH,GAAG2B,SAAW,SAAU3B,EAAG2I,KAAKtJ,QACjE+H,EAAKpH,GAAG8C,OACT6F,KAAKtJ,OAAO6G,WAAW/E,KAAKiG,EAAKpH,IAGlB,QAAnByD,EAAQQ,QAAmD,MAA/B0E,KAAKwvC,yBACjCxvC,KAAKtJ,OAAOgnB,eAAgB7hB,cAAgBQ,eAAgB2D,KAAKwvC,0BAA4B,GAC7FxvC,KAAKwvC,uBAAyB,OAGtCH,EAAKxyC,UAAU60C,YAAc,SAAUjzC,EAAMqJ,EAAM5P,GAC/C,IAAK,IAAI6B,EAAI,EAAGA,EAAIiG,KAAKtJ,OAAOq8B,cAAcx7B,OAAQwC,IAAK,CACvD,IAAI25C,EAAQx7C,EAAQ6B,GAChBG,EAAQmE,WAAS,sBAAwBq1C,EAAM16C,SAAW,SAAUgH,KAAKtJ,QAE7E,GADAg9C,EAAMx5C,MAAQA,GACTxC,oBAAkBg8C,EAAM56C,YAAa,CACtC,IAAI2pC,EAAcpkC,WAAS,sBAAwBq1C,EAAM56C,WAAWE,SAAW,SAAUgH,KAAKtJ,QAC9Fg9C,EAAM56C,WAAWoB,MAAQuoC,GAGjC,IAAIt0B,GAAS,EACTwlC,EAAe3zC,KAAKtJ,OAAO0I,gBAC/B,GAAIY,KAAKtJ,OAAOuI,mBAAqB,EAEjC,IAAK,IADDS,EAAQoI,EAAK,GAAGS,iBAAiB,cAC5BqrC,EAAI,EAAGA,EAAIl0C,EAAMnI,OAAQq8C,IAC9B,GAAIl0C,EAAMk0C,GAAGxrC,UAAUC,SAAS,yBAA0B,CACtDsrC,EAAeC,EACf,MAIZ,IAAK,IAAIj3C,EAAI,EAAGA,EAAIqD,KAAKtJ,OAAOmI,UAAUtH,OAAQoF,IAAK,CAC9CmL,EAAKnL,GAAGyL,UAAUC,SAAS,gBAC5B8F,IAEJ,IAAI0lC,EAAQ37C,EAAQiW,GAEhBhU,GADAD,EAAQ25C,EAAM35C,MACN25C,EAAM15C,OACdwE,EAAMmJ,EAAKnL,GACVjF,oBAAkBm8C,EAAM/6C,cACzBoB,EAAQmE,WAAS,sBAAwBw1C,EAAM/6C,WAAWE,SAAW,SAAUgH,KAAKtJ,SAExF,IAAIo9C,EAAWn1C,EAAIe,MAAMi0C,GACzB,IAAKj8C,oBAAkBo8C,GAAW,CAC9B,IAASF,EAAI,EAAGA,EAAIE,EAAS1rC,UAAU7Q,OAAQq8C,IAAK,CAChD,IAAI35C,EAAQ65C,EAAS1rC,UAAUwrC,GAG3BzgC,EAASlZ,EAAMmP,MAFN,mBAGTmR,EAAUtgB,EAAMmP,MAFN,yBAGA,MAAV+J,GACAhG,eAAa2mC,GAAW75C,GAEb,MAAXsgB,GACApN,eAAa2mC,GAAW75C,GAG3B6N,EAAKnL,GAAGyL,UAAUC,SAAS,eAI5B4H,YAAU6jC,GAAW,uBAAyB55C,EAAQ,QAAUC,GAHhE8V,YAAU6jC,GAAW,iBAAmB55C,EAAQ,QAAUC,MAQ1Ek1C,EAAKxyC,UAAU6I,SAAW,WACtB,IAAI0qB,EACAl2B,EAAQ8F,KAAK/E,YACb/C,EAAU8H,KAAKtJ,OAAOiB,KAAKwE,wBACO,UAAlC6D,KAAKtJ,OAAOmF,aAAaC,OACzB5B,EAAQ8F,KAAK0vC,gBAAgBzC,iBAC7BjtC,KAAK9E,cAAgB8E,KAAK0vC,gBAAgBxC,oBACtCltC,KAAKtJ,OAAOsF,kBAAkBgE,KAAKqT,cAAc9b,OAAS,GACvDyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKoe,gBAAgB7mB,UACtDW,EAAU8H,KAAK0vC,gBAAgB1C,oBAGvC,IAAIllC,EAAO9H,KAAKtJ,OAAOiB,KAAKo7B,cACxBghB,EAAiBjsC,EAAKvQ,QAAUuQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE8nC,EAAgBlsC,EAAKvQ,QAAUuQ,EAAKA,EAAKvQ,OAAS,GAAG2U,aAAa,iBAAmB,EACrF+nC,EAAcj0C,KAAK9E,eAAiB64C,GAAkB/zC,KAAK9E,eAAiB84C,EAC5EE,EAAmBl0C,KAAKtJ,OAAO0H,sBAAwB4B,KAAK/E,aAAe,GAA+B,OAA1B+E,KAAKsvC,iBACzF,GAAsC,WAAlCtvC,KAAKtJ,OAAOmF,aAAaC,KAAmB,CAC5C,GAAgD,UAA5CkE,KAAKtJ,OAAOmF,aAAaQ,eACzB+zB,EAAW,cAEV,IAAiD,UAA5CpwB,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAClF2D,KAAK9E,eAAiB,GAAKg5C,IAAqBD,IACpD7jB,EAAW,SACN14B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,UACrD,GAAsC,UAAlC6G,KAAKtJ,OAAOmF,aAAaC,OAAqBkE,KAAKtJ,OAAOsF,kBAAkBgE,KAAKqT,cAAc9b,OAAS,GACrGyI,KAAKtJ,OAAOsF,kBAAkBgE,KAAKoe,gBAAgB7mB,SAEtD,GADA2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAErDnC,GADsB8F,KAAK0vC,gBAAgBvC,2BAK/CjzC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OAIzD,IAAKyI,KAAK9E,eAAiB,GAAKg5C,IAAqBD,IAC7C/5C,GAAsD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,gBACY,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAA8B,CAC1DnC,GAAS4N,EAAKvQ,SACd2C,EAAQ4N,EAAKvQ,OAAS,GAE1B,IACI05C,EAAejxC,KAAKtJ,OAAOiB,KAAKohB,cAAe,KAAE,GACjDo7B,EAAkBjY,SAASkY,cAC/BtsC,EAAK5N,EAAQ,GAAGk2B,GAAUtoB,EAAK,IAC/BwN,WAAS,aAAcpb,EAAQ,EAAG8F,KAAK0vC,iBACvC,IAAI9B,EAA6D,UAA5C5tC,KAAKtJ,OAAOmF,aAAaQ,eAA6BnC,EAAQA,EAAQ,EAK3F,GAJsC,UAAlC8F,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKtJ,OAAOiB,KAAKohB,cAAe,KAAE5b,OAAO,EAAG,GAC5C6C,KAAKtJ,OAAOiB,KAAKohB,cAAe,KAAE5b,OAAOywC,EAAgB,EAAGqD,IAE5DjxC,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO4a,cAAe,CACvF,IAAI2kB,EAAcj2B,KAAKtJ,OAAOsY,qBAE1BqlC,EAAqBr0C,KAAKtJ,OAAOiB,KAAKogB,gBAAgB,GAC1Dke,EAAY/7B,EAAQ,GAAGk2B,GAAU6F,EAAY,IACP,UAAlCj2B,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAKtJ,OAAOiB,KAAKohB,cAAmB,WAAE5b,OAAO,EAAG,GAChD6C,KAAKtJ,OAAOiB,KAAKohB,cAAmB,WAAE5b,OAAOywC,EAAgB,EAAGyG,IAEpE/+B,WAAS,aAAcpb,EAAQ,EAAG8F,KAAK0vC,iBAE3C,GAAsC,QAAlC1vC,KAAKtJ,OAAOmF,aAAaC,MAAoD,SAAlCkE,KAAKtJ,OAAOmF,aAAaC,KAAiB,CAErF,IAAK,IADDw4C,EAASt0C,KAAKtJ,OAAOiB,KAAKmf,kBAAkBvO,iBAAiB,gBACxDlR,EAAI,EAAGA,EAAIi9C,EAAO/8C,OAAQF,IAC/Bi9C,EAAOj9C,GAAG8tB,SAEd7P,WAAS,gBAAkBtV,KAAKtJ,OAAOiB,KAAKoE,WAAWu3C,SAEvDY,IACAl0C,KAAKsvC,iBAAmB,MAE5B6E,EAAgBI,WAsB5BlF,EAAKxyC,UAAU4I,UAAY,SAAU1C,GACjC,GAAyB,YAArBA,EAAKlD,aAA6BG,KAAK+xC,UACvChvC,EAAKiG,QAAS,OAGlB,GAAsC,SAAlChJ,KAAKtJ,OAAOmF,aAAaC,MAAwC,cAArBiH,EAAKlD,YAArD,CAIA,GAAIG,KAAKuwC,oBAAsBvwC,KAAKuwC,kBAAkBnoC,UAAUC,SAAS,qBACrErI,KAAKuwC,kBAAkBnoC,UAAUC,SAAS,uBAAyBrI,KAAKuwC,kBAAkBnoC,UAAUC,SAAS,YAG7G,OAFAtF,EAAKiG,QAAS,OACdhJ,KAAKuwC,kBAAoB,MAG7B,GAAyB,WAArBxtC,EAAKlD,YAEL,IAAK,IADDpB,EAAOsE,EAAKtE,KACPpH,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAAK,CAClC2I,KAAK6uC,eAAepwC,EAAKpH,GAAG2B,UAE5B,IAAK,IADDy1C,EAASr1C,EAAoBqF,EAAKpH,IAC7BiK,EAAI,EAAGA,EAAImtC,EAAOl3C,OAAQ+J,IAC/BtB,KAAK6uC,eAAeJ,EAAOntC,GAAGtI,UAElC+J,EAAKtE,KAAOA,EAAKlF,OAAOk1C,GAGhC,GAAyB,QAArB1rC,EAAKlD,YAAuB,CAE5B,GADAG,KAAK9E,cAAgB8E,KAAKtJ,OAAOiB,KAAK6vB,iBAClCxnB,KAAKtJ,OAAO0H,qBAAsB,CAClC,IAAIo2C,EAAW,yBAA2Bx0C,KAAK9E,cAAgB,KAC3DyD,OAAM,EACNqB,KAAK9E,eAAiB,GAAiD,QAA5C8E,KAAKtJ,OAAOmF,aAAaQ,gBACR,WAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBACzB2D,KAAKsvC,iBAAmBtvC,KAAK9E,cAAc0M,WAC3CjJ,EAAMqB,KAAKtJ,OAAOk8B,aAAa/nB,cAAc2pC,GAC7Cx0C,KAAK/E,YAAc0D,EAAMA,EAAI+K,SAAW,GAGpC1J,KAAKsvC,kBAA8C,OAA1BtvC,KAAKsvC,kBAC9BkF,EAAW,yBAA2Bx0C,KAAKsvC,iBAAmB,KAC9D3wC,EAAMqB,KAAKtJ,OAAOk8B,aAAa/nB,cAAc2pC,GAC7Cx0C,KAAK/E,YAAc0D,EAAMA,EAAI+K,SAAW,GAGxC1J,KAAK/E,YAAc,OAK3B+E,KAAK/E,YAAc+E,KAAKtJ,OAAOiB,KAAK6vB,kBAAoB,EAAIxnB,KAAKtJ,OAAOiB,KAAK6vB,iBAAmB,EAEpGxnB,KAAK5E,aAAe4E,KAAKtJ,OAAO+R,qBAAqB,GAEzD1F,EAAO/C,KAAKy0C,aAAa1xC,QA/CrBA,EAAKiG,QAAS,GAyDtBqmC,EAAKxyC,UAAUqzC,wBAA0B,WACD,OAAhClwC,KAAKwvC,yBACLxvC,KAAKwvC,uBAAyBxvC,KAAKtJ,OAAOmF,aAAaQ,iBAG/DgzC,EAAKxyC,UAAU43C,aAAe,SAAU1xC,GACpC,IAAI9I,EAAQ8I,EAAKtE,KACjB,GAAoB,QAAhBsE,EAAKzH,OAAkB,CACvB,IAAIzD,EAAMmI,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GACjD60B,EAAW,KACfn2B,EAAMG,SAAW1C,oBAAkBuC,EAAMG,UAAYgC,YAAW2G,EAAKtE,MAAQxE,EAAMG,SACnF,IAAIof,EAAcxZ,KAAKtJ,OAAOiB,KAAKwE,wBAC/BjC,EAAQ8F,KAAK/E,YACjBhB,EAAMjB,SAAWud,SAAOvW,KAAKtJ,OAAOsc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwBrb,EAAMjB,SAAUiB,EAAO+F,KAAKtJ,QAC7D,IAAIyD,EAAQ,EACR+C,OAAY,EACZoB,OAAiB,EACjBxF,OAAa,EACbmE,OAAkB,EAClBi3C,EAAmBl0C,KAAKtJ,OAAO0H,sBAAwB4B,KAAK/E,aAAe,GAA+B,OAA1B+E,KAAKsvC,iBACrFxnC,EAAO9H,KAAKtJ,OAAOmI,UACnBk1C,EAAiBjsC,EAAKvQ,QAAUuQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE8nC,EAAgBlsC,EAAKvQ,QAAUuQ,EAAKA,EAAKvQ,OAAS,GAAG2U,aAAa,iBAAmB,EACrF+nC,EAAcj0C,KAAK9E,eAAiB64C,GAAkB/zC,KAAK9E,eAAiB84C,EAShF,GARIx6B,EAAYjiB,SACZ2F,EAAYsc,EAAYxZ,KAAK/E,aAAa+E,KAAKtJ,OAAOwG,WACtDD,EAAkBuc,EAAYxZ,KAAK/E,aAAa+E,KAAKtJ,OAAOuG,iBACxDuc,EAAYxZ,KAAK/E,aAAanC,aAC9BwF,EAAiBkb,EAAYxZ,KAAK/E,aAAanC,WAAWE,UAE9DF,EAAa0gB,EAAYxZ,KAAK/E,aAAanC,YAEC,QAA5CkH,KAAKtJ,OAAOmF,aAAaQ,gBAA4Bmd,EAAYjiB,OAAQ,CAEzE,GADA4C,EAAQqf,EAAYxZ,KAAK/E,aAAad,MACU,UAA5C6F,KAAKtJ,OAAOmF,aAAaQ,eACzB+zB,EAAW,SACXl2B,EAAQsf,EAAYxZ,KAAK/E,aAAaf,WAErC,GAAgD,UAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAC1D+zB,EAAW,QACX,IAAI8d,EAAmB90C,EAAoBogB,EAAYxZ,KAAK/E,cAAc1D,OACtEm2C,EAAmBl0B,EAAYxZ,KAAK/E,aAAaf,MACrDA,EAASg0C,EAAmB,EAAMR,EAAmBQ,SAEpD,GAAgD,UAA5CluC,KAAKtJ,OAAOmF,aAAaQ,eAA4B,CAC1D+zB,EAAW,SACNpwB,KAAK9E,eAAiB,GAAKg5C,IAAqBD,IACjDh6C,EAAMnB,WAAasD,YAAWod,EAAYxZ,KAAK/E,cAC/ChB,EAAMqE,eAAiBrE,EAAMnB,WAAWE,gBACjCiB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWkH,KAAKtJ,OAAO0G,eAExC,IAAIs3C,EAAoBt7C,EAAoBogB,EAAYxZ,KAAK/E,cAAc1D,OACvEo9C,EAAoBn7B,EAAYxZ,KAAK/E,aAAaf,MAClD8F,KAAK9E,eAAiB,IACtBjB,EAAME,MAAQA,EAAQ,GAE1BD,EAASw6C,EAAoB,EAAMC,EAAoBD,IACnD10C,KAAKhF,kBACLf,EAAMG,SAAS4F,KAAKtJ,OAAOuG,iBAAmBhD,EAAM+F,KAAKtJ,OAAOuG,iBAAmBC,EAC9ExF,oBAAkBuC,EAAMnB,aACzBuE,EAAgBxF,EAAKoC,EAAMnB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBf,IAsB7F,GAlBgD,UAA5C+F,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,kBAC3E2D,KAAK9E,eAAiB,GAAKg5C,IAAqB/5C,GAAS85C,IAC1Dh6C,EAAMqE,eAAiBA,EACvBrE,EAAMnB,WAAasD,YAAWtD,UACvBmB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWkH,KAAKtJ,OAAO0G,eAExCnD,EAAME,MAAQA,EACV6F,KAAKhF,kBACLf,EAAMG,SAAS4F,KAAKtJ,OAAOuG,iBAAmBhD,EAAM+F,KAAKtJ,OAAOuG,iBAAmBA,EAC9EvF,oBAAkBuC,EAAMnB,aACzBuE,EAAgBxF,EAAKoC,EAAMnB,WAAY,MAAOkH,KAAKtJ,OAAQsJ,KAAKhF,gBAAiBf,KAI7E,MAAZm2B,IAAqBpwB,KAAK9E,eAAiB,GAAKg5C,IAAqBD,IACrElxC,EAAK7I,MAAqB,WAAbk2B,EAAwBl2B,EAAQA,EAAQ,GAET,WAA5C8F,KAAKtJ,OAAOmF,aAAaQ,eAA6B,CACtD,IAAI1F,EAAcqJ,KAAKtJ,OAAOiB,KAAKhB,sBAAsBC,cACrDoJ,KAAKtJ,OAAOiB,KAAKhB,WAAWA,WAAW8E,KAAOuE,KAAKtJ,OAAOiB,KAAKhB,WACnEoM,EAAK7I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAElBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB6I,EAAKzH,SACL0E,KAAKyvC,oBAAuBt1C,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FoB,SAAUH,EAAMG,SAAUkE,eAAgB5G,oBAAkBuC,EAAMnB,iBAAckkB,EAAY/iB,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArByJ,EAAKlD,YAEL,IAAK,IADD+0C,EAAgB7xC,EAAKtE,KAChBpH,EAAI,EAAGA,EAAIu9C,EAAcr9C,OAAQF,IACtC,GAAIu9C,EAAcv9C,GAAGyB,WAAY,CACzBA,EAAaC,EAAciH,KAAKtJ,OAAQk+C,EAAcv9C,GAAGyB,WAAWE,UACxE,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAIipC,EAAaxpC,EAAWQ,aAAakF,QAAQo2C,EAAcv9C,IAC/DyB,EAAWQ,aAAa6D,OAAOmlC,EAAY,IAK3D,OAAOv/B,GAOXssC,EAAKxyC,UAAUszB,UAAY,SAAU1xB,EAAMvE,EAAOk2B,GAE9C,GADApwB,KAAKwvC,uBAAyBxvC,KAAKtJ,OAAOmF,aAAaQ,eAClD2D,KAAKhF,iBAAoBtD,oBAAkB+G,KAASpG,OAAOyE,eAAeC,KAAK0B,EAAMuB,KAAKtJ,OAAO0G,cAiB9FqB,GACIvE,GAAS,GACT8F,KAAK9E,cAAgBhB,EACrB8F,KAAK/E,YAAcf,IAGnB8F,KAAK9E,cAAgB8E,KAAKtJ,OAAO8wB,iBACjCxnB,KAAK/E,YAAc+E,KAAKtJ,OAAO8wB,kBAE/B4I,GACApwB,KAAKtJ,OAAOgnB,eAAgB7hB,cAAgBQ,eAAgB+zB,KAAc,GAE9EpwB,KAAKtJ,OAAOiB,KAAKoE,WAAWo0B,UAAU1xB,EAAMvE,IAG5C8F,KAAKtJ,OAAOiB,KAAKoE,WAAWo0B,UAAU1xB,EAAMvE,OAhCiE,CACjH,IAAI+0C,KACA4F,EAAmB70C,KAAKtJ,OAAOmF,aAAaC,KAC5Cg5C,EAAuB90C,KAAKtJ,OAAOiB,KAAKkE,aAAaC,KACzDmzC,EAAWz2C,KAAKiG,GAChBuB,KAAKtJ,OAAOgnB,eAAgB7hB,cAAgBC,KAAM,WAAa,GAC/DkE,KAAKtJ,OAAOiB,KAAK+lB,eAAgB7hB,cAAgBC,KAAM,WAAa,GAC/DpE,oBAAkB04B,IACnBpwB,KAAKtJ,OAAOgnB,eAAgB7hB,cAAgBQ,eAAgB+zB,KAAc,GAE9E,IAAI2e,GAAmB17B,aAAc47B,EAAY9wB,kBAAoBC,mBACrEpe,KAAKtJ,OAAOub,OAAO6J,IAAoBizB,eAAgBA,EAAgB70C,MAAOA,IAC9E8F,KAAKtJ,OAAOgnB,eAAgB7hB,cAAgBC,KAAM+4C,KAAsB,GACxE70C,KAAKtJ,OAAOiB,KAAK+lB,eAAgB7hB,cAAgBC,KAAMg5C,KAA0B,GACjF90C,KAAKtJ,OAAO04B,YA2BpBigB,EAAKxyC,UAAUk4C,iBAAmB,WAC9B,OAAO/0C,KAAKtJ,OAAOiB,KAAKoE,WAAWg5C,oBAMvC1F,EAAKxyC,UAAUm4C,YAAc,WACzBh1C,KAAKtJ,OAAOiB,KAAKoE,WAAWi5C,eAEhC3F,EAAKxyC,UAAUgzC,aAAe,SAAUnyC,GAC/BhG,oBAAkBgG,EAAEqF,KAAKlD,cACY,WAAlCnC,EAAEqF,KAAKlD,YAAY+H,YAA6D,SAAlClK,EAAEqF,KAAKlD,YAAY+H,aAC3B,UAAlC5H,KAAKtJ,OAAOmF,aAAaC,MAAsD,cAAlC4B,EAAEqF,KAAKlD,YAAY+H,cACxE5H,KAAK0xC,YAAY1xC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,0BAC7E6D,KAAKtJ,OAAOsI,YAAcgB,KAAKtJ,OAAOuI,oBAAsBe,KAAKtJ,OAAO4a,gBACpEtR,KAAKtJ,OAAOiB,KAAKhB,WAAWY,SAAWyI,KAAKtJ,OAAOsY,qBAAqBzX,QACxEyI,KAAK0xC,YAAY1xC,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOsY,qBAAsBhP,KAAKtJ,OAAOyF,2BAU5GkzC,EAAKxyC,UAAU8zB,SAAW,SAAUjnB,EAAU2I,GACJ,SAAlCrS,KAAKtJ,OAAOmF,aAAaC,MAAqD,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,OAC/B,UAAlCkE,KAAKtJ,OAAOmF,aAAaC,OACzBkE,KAAK+xC,WAAY,EACjB/xC,KAAKgyC,mBAAmB,UAE5BhyC,KAAKtJ,OAAOiB,KAAKoE,WAAW40B,SAASjnB,EAAU2I,KAGhDg9B,KCh4BP4F,GAA+B,WAC/B,SAASA,EAAcv+C,GACnB+L,OAAKC,OAAOwyC,iBACZl1C,KAAKtJ,OAASA,EAoBlB,OAZAu+C,EAAcp4C,UAAU+F,cAAgB,WACpC,MAAO,iBAQXqyC,EAAcp4C,UAAU+M,QAAU,aAG3BqrC,KCpBPE,GAA2B,WAC3B,SAASA,EAAUz+C,GACf+L,OAAKC,OAAO0yC,aACZp1C,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBAyGT,OA9FAkrC,EAAUt4C,UAAU+F,cAAgB,WAChC,MAAO,aAEXuyC,EAAUt4C,UAAUoN,iBAAmB,WACnCjK,KAAKtJ,OAAOwT,GAAG,eAAgBlK,KAAKq1C,aAAcr1C,MAClDA,KAAKtJ,OAAOwT,GAAG,kBAAmBlK,KAAKs1C,gBAAiBt1C,MACxDA,KAAKtJ,OAAOiB,KAAKuS,GAAG,yBAA0BlK,KAAKu1C,oBAAqBv1C,MACxEA,KAAKtJ,OAAOwT,GAAG,iBAAkBlK,KAAKw1C,eAAgBx1C,MACtDA,KAAKtJ,OAAOwT,GAAG,oBAAqBlK,KAAKy1C,kBAAmBz1C,MAC5DA,KAAKtJ,OAAOwT,GAAG,iBAAkBlK,KAAK01C,eAAgB11C,OAM1Dm1C,EAAUt4C,UAAU0N,oBAAsB,WAClCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,eAAgBzK,KAAKq1C,cACrCr1C,KAAKtJ,OAAO+T,IAAI,kBAAmBzK,KAAKs1C,iBACxCt1C,KAAKtJ,OAAO+T,IAAI,iBAAkBzK,KAAKw1C,gBACvCx1C,KAAKtJ,OAAO+T,IAAI,oBAAqBzK,KAAKy1C,mBAC1Cz1C,KAAKtJ,OAAO+T,IAAI,iBAAkBzK,KAAK01C,gBACvC11C,KAAKtJ,OAAOiB,KAAK8S,IAAI,yBAA0BzK,KAAKu1C,uBAExDJ,EAAUt4C,UAAU04C,oBAAsB,SAAUxyC,GAEhDA,EAAY,SAAI,GAEpBoyC,EAAUt4C,UAAUw4C,aAAe,WAI/B,IAAK,IAHDM,EAAY31C,KAAKtJ,OAAOmI,UAAUpB,OAAO,SAAUC,GACnD,OAAQA,EAAE0K,UAAUC,SAAS,iBAExBhR,EAAI,EAAGA,EAAIs+C,EAAUp+C,OAAQF,IAAK,CACvC,IAAIu+C,EAAWD,EAAUt+C,GAAG4f,uBAAuB,uBAC/C4+B,EAAa71C,KAAKtJ,OAAOiB,KAAKuf,oBAAoBy+B,EAAUt+C,GAAG6U,aAAa,aAC5EpT,EAAaP,YAAU,aAAcyH,KAAKtJ,OAAOiB,KAAKwE,wBAAwB9E,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBuH,KAAKtJ,OAAQm/C,EAAWp3C,KAAMuB,KAAKtJ,OAAOiB,KAAKwE,2BAC/D6D,KAAKtJ,OAAOiB,KAAK2f,gBAAgBxF,OAAO8jC,EAAS,MAI7DT,EAAUt4C,UAAU24C,eAAiB,SAAUzyC,GAC3C,IAAI+yC,EAAmB/yC,EAAKpE,IAAIsY,uBAAuB,uBAClDvf,oBAAkBo+C,EAAiB,KACpC91C,KAAKtJ,OAAOiB,KAAK2f,gBAAgBxF,OAAOgkC,EAAiB,KAGjEX,EAAUt4C,UAAU44C,kBAAoB,SAAU1yC,GAC9C,IAAItM,EAAauJ,KAAKtJ,QAGtB,IAAK,IAAIW,EAAI,EAAGA,EAAI0L,EAAKuyB,WAAW/9B,OAAQF,IACxC0L,EAAKuyB,WAAWj+B,GAAGmD,MAAMG,QAAUoI,EAAKzH,QAGhD65C,EAAUt4C,UAAUy4C,gBAAkB,SAAUvyC,GAC5C,IAAItE,EAAOsE,EAAKtE,KACZE,EAAMoE,EAAKgzC,cAAc7zB,cAAc8zB,gBAEvCC,EAAc,kBADLv+C,oBAAkB+G,EAAK3F,YAAsC2F,EAAKvE,MAA7BuE,EAAK3F,WAAWoB,OACrB,QAAUuE,EAAKtE,MACxD+7C,EAAYv3C,EAAIkM,cAAc,IAAMorC,GAAa7tC,UACjD+tC,KAAc7tC,MAAMvL,KAAKm5C,GAAWz4C,OAAO,SAAU24C,GAAa,OAAQA,IAAcH,IACxFI,EAAQF,EAAS,GAAG5+C,OAEpB++C,EAAc,eADDH,EAASvuC,WAAWU,MAAM,EAAG+tC,GAE9CpmC,YAAUlN,EAAKgzC,cAAc7zB,eAAgBo0B,IAEjDnB,EAAUt4C,UAAU64C,eAAiB,SAAU3yC,GAC3C,GAAyB,cAArBA,EAAKlD,aAAoD,QAArBkD,EAAKlD,YAAuB,CAChE,IAAI02C,EAASxzC,EAAKpE,IAAI4J,iBAAiB,eAAe,GAAG2D,aAAa,WAElEsqC,GADQrkC,SAASokC,EAAO,IAAM,GACX3uC,WACvB7E,EAAKpE,IAAI4J,iBAAiB,eAAe,GAAGyE,aAAa,UAAWwpC,GAGxE,IAAK,IADDC,EAAez2C,KAAKtJ,OAAOiB,KAAKohB,cAAcla,UACzCxH,EAAI,EAAGA,EAAIo/C,EAAal/C,OAAQF,IACrCo/C,EAAap/C,GAAGqI,MAAM,GAAG2zB,SAAU,EAErB96B,YAAU,cAAeyH,KAAKtJ,OAAOiB,MAErC,eAAE,EAApB02C,EAA4BvmC,KAAM9H,KAAKtJ,OAAOiB,KAAKohB,cAAcla,aAQrEs2C,EAAUt4C,UAAU+M,QAAU,WAC1B5J,KAAKuK,uBAEF4qC,KCtHP10C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAoBxC21C,GAA4C,SAAU50C,GAEtD,SAAS40C,EAA2BhgD,EAAQigD,GACxC,IAAIvvC,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,EAAQigD,IAAY32C,KAalD,OAZAoH,EAAMwvC,kBAAmB,EACzBxvC,EAAMyvC,WAAa,EACnBzvC,EAAM0vC,SAAW,EACjB1vC,EAAM2vC,aAAc,EAEpB3vC,EAAM6tB,YAAc,EACpB7tB,EAAM+nC,UAAY,EAClB/nC,EAAM4vC,aAAe,EACrB5vC,EAAM6vC,gBAAiB,EAEvB7vC,EAAM6nB,qBAAsB,EAC5B7nB,EAAM6C,mBACC7C,EAgVX,OA/VA3G,GAAUi2C,EAA4B50C,GAiBtC40C,EAA2B75C,UAAUq6C,kBAAoB,WACrD,OAAO,IAAIpU,GAA6B9iC,KAAKtJ,SAEjDggD,EAA2B75C,UAAU+B,cAAgB,SAAU1E,GAC3D,OAAO8F,KAAKtJ,OAAOq8B,cAAct1B,OAAO,SAAUC,GAAK,OAAOyU,SAASzU,EAAEwO,aAAa,iBAAkB,MAAQhS,IAAU,IAE9Hw8C,EAA2B75C,UAAUoN,iBAAmB,WACpDjK,KAAKtJ,OAAOwT,GAAGitC,GAA0Bn3C,KAAKo3C,mBAAoBp3C,MAClEA,KAAKtJ,OAAOwT,GAAGmtC,GAAsBr3C,KAAK0G,cAAe1G,OAE7D02C,EAA2B75C,UAAUu6C,mBAAqB,SAAUr0C,GAC5DA,EAAKu0C,QACLt3C,KAAK62C,WAAa,EAClB72C,KAAKi1B,WAAa,EAClBj1B,KAAKmvC,SAAWnvC,KAAKtJ,OAAOia,aAAa63B,SAAW,GAE/CzlC,EAAK6zC,mBACV52C,KAAK42C,kBAAmB,IAGhCF,EAA2B75C,UAAU6J,cAAgB,SAAU3D,GAC3D,IAAIg8B,EAAU/+B,KAAKtJ,OAAOk8B,aAAa/nB,cAAc,cACrD,GAAI7K,KAAK+2C,aAAe/2C,KAAKi1B,YAAc,GAAKj1B,KAAKmvC,UAAY,EAAG,CAChE,GAAInvC,KAAKmvC,SAAWpsC,EAAKoL,MAAQnO,KAAKtJ,OAAOia,aAAa63B,SAAU,CAChE,IAAI+O,KAAqBxY,EAAQpK,UAAY30B,KAAKtJ,OAAOk+B,gBACrD4iB,EAAYD,EAAkBv3C,KAAKtJ,OAAOmI,UAAUtH,OACpDigD,EAAYz0C,EAAKoL,QACjBqpC,EAAYD,GACPx0C,EAAKoL,MAAQopC,IAEtBv3C,KAAKi1B,WAAauiB,EAAYx3C,KAAKtJ,OAAOmI,UAAUtH,OACpDyI,KAAKmvC,SAAWqI,OAGhBx3C,KAAKi1B,YAAc,EACnBj1B,KAAKmvC,UAAY,EAErBnvC,KAAK+2C,aAAc,EAEnB/2C,KAAKivB,sBACLjvB,KAAKi1B,WAAa,EAClBj1B,KAAKmvC,SAAWnvC,KAAKtJ,OAAOia,aAAa63B,SAAW,GAExDzlC,EAAKkyB,WAAaj1B,KAAKi1B,WACvBlyB,EAAKosC,SAAWnvC,KAAKmvC,UAEzBuH,EAA2B75C,UAAUqyB,cAAgB,SAAU5zB,GAC3D,IAAI8L,EAAQpH,KACNA,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAClFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAgBhsC,EAAgB6I,KAAKtJ,QAqBvHoL,EAAOjF,UAAUqyB,cAAcnyB,KAAKiD,KAAM,OApB1CA,KAAKtJ,OAAO4E,GAAQ,aAAc0E,KAAKy3C,YAAaz3C,MAEpDA,KAAK2X,GAAK,WACNvQ,EAAMswC,UAAUC,SAAS,SAAUC,GAAc,OAAOxwC,EAAMywC,gBAAgBD,KAC9ExwC,EAAM1Q,OAAO+T,IAAI,gBAAiBrD,EAAMuQ,KAE5C3X,KAAKtJ,OAAOuT,iBAAiB,YAAajK,KAAK83C,eAAe78B,KAAKjb,OACnEA,KAAKtJ,OAAOuT,iBAAiB,cAAejK,KAAK+3C,iBAAiB98B,KAAKjb,OACvEA,KAAKtJ,OAAO4E,GAAQ,qBAAsB0E,KAAKg4C,mBAAoBh4C,MACnEA,KAAKtJ,OAAOwT,GAAG,gBAAiBlK,KAAK2X,GAAI3X,MACzCA,KAAKtJ,OAAOuT,iBAAiBgO,EAAuBjY,KAAKi4C,iBAAiBh9B,KAAKjb,OAC/EA,KAAKtJ,OAAO4E,GAAQ,mCAAoC0E,KAAKyF,UAAWzF,MACxEA,KAAKtJ,OAAO4E,GAAQ,kCAAmC0E,KAAK0F,SAAU1F,MACtEA,KAAKtJ,OAAO4E,GAAQ,8BAA+B0E,KAAKk4C,mBAAoBl4C,MAC5EA,KAAKtJ,OAAO4E,GAAQ,aAAc0E,KAAKm4C,iBAAkBn4C,MACzDA,KAAKtJ,OAAO4E,GAAQ,mBAAoB0E,KAAKo4C,QAASp4C,MACtDA,KAAKtJ,OAAO4E,GAAQ,6BAA8B0E,KAAKq4C,WAAYr4C,MACnEA,KAAKtJ,OAAO4E,GAAQ,6BAA8B0E,KAAKs4C,yBAA0Bt4C,QAMzF02C,EAA2B75C,UAAU46C,YAAc,SAAU/5C,GACzDoE,EAAOjF,UAAU46C,YAAY16C,KAAKiD,KAAMtC,GAClCsC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAClFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAgBhsC,EAAgB6I,KAAKtJ,UAClHgB,oBAAkBgG,EAAEyQ,SACrBnO,KAAKkvC,aAAexxC,EAAEyQ,MACtB9P,WAAS,aAAc2B,MAAMu4C,iBAAiBv4C,KAAKtJ,OAAOk+B,eAAiBl3B,EAAEyQ,MAAO,WAElFzW,oBAAkBgG,EAAEmC,cAA6C,gBAA7BnC,EAAEmC,YAAY+H,YAAiC5H,KAAKivB,uBAC1FjvB,KAAKw4C,SAAS7jB,UAAY,EAC1B30B,KAAKivB,qBAAsB,KAIvCynB,EAA2B75C,UAAUsyB,YAAc,WAC/CrtB,EAAOjF,UAAUsyB,YAAYpyB,KAAKiD,MAC5BA,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAClFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAgBhsC,EAAgB6I,KAAKtJ,UACvH2H,WAAS,WAAY2B,MAAMD,QAAQ04C,eAAgB,EACnDz4C,KAAK03C,UAAY,IAAIgB,GAAyBr6C,WAAS,WAAY2B,MAAMgT,QAAS3U,WAAS,WAAY2B,MAAMD,SAC7GC,KAAKw4C,SAAWx4C,KAAK24C,WAAW7rC,aAGxC4pC,EAA2B75C,UAAU+7C,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,OAAKh5C,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,MAChFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAehsC,EAAgB6I,KAAKtJ,QACnHsJ,KAAKi3C,gBACLj3C,KAAKi3C,gBAAiB,EACfj3C,KAAKg3C,eAGZh3C,KAAKg3C,aAAel1C,EAAOjF,UAAU+7C,cAAc77C,KAAKiD,KAAM64C,EAAMC,EAASC,EAAMC,GAC5El3C,EAAOjF,UAAU+7C,cAAc77C,KAAKiD,KAAM64C,EAAMC,EAASC,EAAMC,IAInEl3C,EAAOjF,UAAU+7C,cAAc77C,KAAKiD,KAAM64C,EAAMC,EAASC,EAAMC,IAG9EtC,EAA2B75C,UAAUi7C,eAAiB,WAG9C93C,KAAKtJ,OAAOmI,UAAUtH,SAAWyI,KAAkB,gBACnDA,KAAkB,cAAIA,KAAKtJ,OAAOkI,cAAc,GAAG2gC,wBAAwB/C,KAE/E16B,EAAOjF,UAAsB,UAAEE,KAAKiD,OAExC02C,EAA2B75C,UAAUk7C,iBAAmB,SAAUh1C,GAE9DjB,EAAOjF,UAAqB,YAAEE,KAAKiD,KAAM+C,IAE7C2zC,EAA2B75C,UAAUm7C,mBAAqB,SAAUj1C,GAEhEjB,EAAOjF,UAA0B,iBAAEE,KAAKiD,KAAM+C,IAElD2zC,EAA2B75C,UAAU4I,UAAY,SAAU/H,GACvD,IAAI82C,EAAW,yBAA2B92C,EAAExD,MAAQ,KAChDA,EAAQ8F,KAAKtJ,OAAOk8B,aAAa/nB,cAAc2pC,GAAU9qC,SACzD8B,EAAUxL,KAAKtJ,OAAOyF,wBAAwBjC,GAClDwD,EAAEe,KAAO+M,GAEbkrC,EAA2B75C,UAAU6I,SAAW,SAAU3C,GACtD,IAEIytC,GAAYn0C,eAAgB2D,KAAKi5C,YAAah+C,YAAa+E,KAAK/E,YAAaw1C,aAAczwC,KAAKywC,cACpGzwC,KAAKtJ,OAAOub,OAAO,mBAAoBu+B,GACvCxwC,KAAKi5C,YAAczI,EAAQn0C,eAC3B2D,KAAK/E,YAAcu1C,EAAQv1C,YAC3B+E,KAAKywC,aAAeD,EAAQC,aAC5B,IAAI3oC,EAAO9H,KAAKtJ,OAAOmI,UACnBk1C,EAAiBjsC,EAAKvQ,QAAUuQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxE8nC,EAAgBlsC,EAAKvQ,QAAUuQ,EAAKA,EAAKvQ,OAAS,GAAG2U,aAAa,iBAAmB,EACrFgtC,EAAcl5C,KAAKtJ,OAAO8wB,kBAAoBusB,GAAkB/zC,KAAKtJ,OAAO8wB,kBAAoBwsB,EACzE,QAArBh0C,KAAKi5C,aAA8C,WAArBj5C,KAAKi5C,cACrCj5C,KAAU,OAAI,GAEO,QAArBA,KAAKi5C,aAA8C,WAArBj5C,KAAKi5C,cAChCj5C,KAAK/E,cAAqC,IAAtB+E,KAAK/E,cAA0D,IAAlC+E,KAAKtJ,OAAO8wB,kBAA4B0xB,IAC5Fp3C,EAAOjF,UAAmB,eAAEE,KAAKiD,KAAM+C,IAG/C2zC,EAA2B75C,UAAUs8C,iBAAmB,WAEpDr3C,EAAOjF,UAAqB,YAAEE,KAAKiD,OAEvC02C,EAA2B75C,UAAUs7C,iBAAmB,WAGpDn4C,KAAKtJ,OAAOub,OAAO,uBACO,QAArBjS,KAAKi5C,aAA8C,WAArBj5C,KAAKi5C,cAA6Bj5C,KAAU,OAC3E8B,EAAOjF,UAAqB,YAAEE,KAAKiD,OAG3C02C,EAA2B75C,UAAUq7C,mBAAqB,WACtD,IACInZ,EAAU/+B,KAAKtJ,OAAOk8B,aAAa/nB,cAAc,cACjD7K,KAAU,OAAK++B,EAAQl0B,cAAc,iBACrC7K,KAAK+2C,aAAc,IAG3BL,EAA2B75C,UAAUw7C,WAAa,SAAUt1C,GAExDjB,EAAOjF,UAAoB,WAAEE,KAAKiD,KAAM+C,IAE5C2zC,EAA2B75C,UAAUy7C,yBAA2B,SAAUv1C,GAEtEjB,EAAOjF,UAAgC,uBAAEE,KAAKiD,KAAM+C,IAExD2zC,EAA2B75C,UAAUu8C,cAAgB,WACjD,IACIra,EAAU/+B,KAAKtJ,OAAOk8B,aAAa/nB,cAAc,cACjD7K,KAAU,QAAM++B,EAAQl0B,cAAc,iBACtC7K,KAAKtJ,OAAO62B,QAAS,EACrBvtB,KAAKtJ,OAAOy5B,cAGpBumB,EAA2B75C,UAAUu7C,QAAU,SAAU35C,GAErDqD,EAAOjF,UAAwB,eAAEE,KAAKiD,KAAMvB,IAEhDi4C,EAA2B75C,UAAUo7C,iBAAmB,SAAUl1C,GAC9D,GAAyB,QAArBA,EAAKlD,YAAuB,CAC5B,IAAI2wC,GAAYn0C,eAAgB2D,KAAKi5C,YAAah+C,YAAa+E,KAAK/E,YAAaw1C,aAAczwC,KAAKywC,cACpGzwC,KAAKtJ,OAAOub,OAAO,mBAAoBu+B,GACvCxwC,KAAKi5C,YAAczI,EAAQn0C,eAC3B2D,KAAK/E,YAAcu1C,EAAQv1C,YAC3B+E,KAAKywC,aAAeD,EAAQC,aAGhC3uC,EAAOjF,UAAwB,eAAEE,KAAKiD,KAAM+C,IAEhD2zC,EAA2B75C,UAAUg7C,gBAAkB,SAAUD,GAC7D,IAAImB,EAAOnB,EAAWyB,SAElBta,EAAU/+B,KAAKtJ,OAAOk8B,aAAa/nB,cAAc,cACjD6pB,EAFY,GAEe10B,KAAKtJ,OAAOk+B,eACvC0kB,EAAY1B,EAAW2B,OAAO/c,IAAMx8B,KAAK62C,WAAc,EACvD2C,EAAc5B,EAAW2B,OAAO/c,IAAMx8B,KAAK62C,WAAcniB,EAC7D,GAAI4kB,EAAU,CACV,IAAIG,IAAYz5C,KAAKtJ,OAAOqvB,OAAOne,WAAWpJ,QAAQ,KAAO,EAAIwB,KAAKtJ,OAAOqvB,OACzE/lB,KAAKtJ,OAAOsc,QAAQusB,wBAAwBxZ,QAC5C7rB,KAAY6kC,EAAQpK,UAAY30B,KAAKtJ,OAAOk+B,gBAC1Cpe,KAAKC,KAAKgjC,EAAUz5C,KAAKtJ,OAAOk+B,gBAChC50B,KAAKtJ,OAAOmI,UAAUtH,OAI5B,GAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9B8F,KAAKi1B,WAAa/6B,EAClB8F,KAAKmvC,SAAWj1C,EAAQ8F,KAAKtJ,OAAOmI,UAAUtH,OAC1CyI,KAAKmvC,SAAWnvC,KAAKkvC,aAAc,CACnC,IAAIwK,EAAU15C,KAAKkvC,aAAe,EAC9ByK,EAAU35C,KAAKmvC,SAAWuK,EAC9B15C,KAAKmvC,SAAWuK,EAChB15C,KAAKi1B,WAAaj1B,KAAKi1B,WAAa0kB,EAGxC,IAAIC,EAAQpjC,KAAKC,KAAKmhC,EAAW2B,OAAO/c,IAAMx8B,KAAKtJ,OAAOk+B,gBAC1DglB,GAAgB55C,KAAKtJ,OAAOia,aAAa63B,SACzC,IAAIqR,EAAa,EACjB,IAAKniD,oBAAkBsI,KAAKtJ,OAAOmI,UAAU+6C,IAAS,CAGlDC,GAFW75C,KAAKtJ,OAAOk8B,aAAarqB,iBAAiB,iBAAiBqxC,GACjE/uC,cAAc,MAAMqB,aAAa,SAG1C,GAAmB,IAAf2tC,EACA75C,KAAK62C,WAAae,EAAW2B,OAAO/c,QAEnC,CACD,IAAIzW,EAAS/lB,KAAKtJ,OAAOk+B,eACzB50B,KAAK62C,WAAce,EAAW2B,OAAO/c,IAlC7B,GAkCgDzW,EAAU,EAC9D6xB,EAAW2B,OAAO/c,IAnCd,GAmCiCzW,EAAU,GAAK,QAG3D,GAAIyzB,EAAY,CACjB,IAAIjC,KAAqBxY,EAAQpK,UAAY30B,KAAKtJ,OAAOk+B,gBACrD4iB,EAAYD,EAAkBv3C,KAAKtJ,OAAOmI,UAAUtH,OACpDigD,EAAYx3C,KAAKkvC,eACjBsI,EAAYD,GACPv3C,KAAKkvC,aAAeqI,IAE7Bv3C,KAAKi1B,WAAauiB,EAAYx3C,KAAKtJ,OAAOmI,UAAUtH,OACpDyI,KAAKmvC,SAAWqI,EACZI,EAAW2B,OAAO/c,IAAOx8B,KAAKtJ,OAAOk+B,eAAiB50B,KAAKkvC,aAC3DlvC,KAAK62C,WAAa72C,KAAK44C,cAAchB,EAAW2B,OAAO/c,IAAKuC,EAAQQ,wBAAwBxZ,QAG5F/lB,KAAK62C,WAAae,EAAW2B,OAAO/c,IAG5C,GAAKgd,GAAe5B,EAAW2B,OAAO/c,IAAOx8B,KAAKtJ,OAAOk+B,eAAiB50B,KAAKkvC,gBAC5D,CACf,IAAI4K,EAAWz7C,WAAS,kBAAmB2B,MAAM+B,MAAM/B,MAAO43C,EAAW18B,UAAW69B,EAAMnB,EAAW2B,SACrGv5C,KAAK+5C,aAAeD,EACpB,IAAIzgC,EAAOygC,EAAS5gC,WAAa4gC,EAASE,SAAWF,EAAS1gC,SAASC,KAAOygC,EAASzgC,KACvFrZ,KAAKtJ,OAAOgnB,eAAgB/M,cAAgBwI,YAAaE,KAAU,GACnEygC,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzFj6C,KAAKtJ,OAAOub,OAAO6nC,EAASG,OAASp6C,YAAa,gBAAiB42C,aAAcmB,EAAWnB,iBAGpGC,EAA2B75C,UAAUq9C,cAAgB,SAAU94C,EAAQ+4C,EAAUz8C,GAC7E,GAAKsC,KAAKtJ,OAAOC,sBAAsBC,oBAAyDomB,IAA1Chd,KAAKtJ,OAAOC,WAAWA,WAAWwsC,MAChFnjC,KAAKtJ,OAAOC,WAAWA,WAAW4sB,SAAqD,KAA1CvjB,KAAKtJ,OAAOC,WAAWA,WAAWwsC,KAAehsC,EAAgB6I,KAAKtJ,QACnH2H,WAAS,mBAAoBX,KAC7BsC,KAAKi3C,gBAAiB,GAE1Bn1C,EAAOjF,UAAUq9C,cAAcn9C,KAAKiD,KAAMoB,EAAQ+4C,EAAUz8C,OAE3D,CACD,IAAIq7C,EAAOr7C,EAAE08C,YAAYC,cAAoD,MAApC38C,EAAE08C,YAAYC,aAAaC,MAChEj8C,WAAS,cAAe2B,MAAMqZ,MAAQhb,WAAS,cAAe2B,MAAMqZ,OAAS3b,EAAE08C,YAAY/gC,KAC3Fhb,WAAS,cAAe2B,MAAQtC,EAAE08C,YAClCG,EAAUxB,EAAKyB,cAAc,GAAM,EACnCC,EAAUz6C,KAAK06C,gBAAgBH,GACnCv6C,KAAK26C,WAAWC,gBAAgB,KAAO1xC,UAAQ2xC,MAA8B,SAAtB3xC,UAAQ6vC,KAAK+B,OACpE15C,EAASpB,KAAKtJ,OAAO2V,cAAc,UAC5BoB,YAAY0sC,GAEnBn6C,KAAK+6C,WAAWlwC,cAAc,SAAgB,YAAEzJ,GAC3CpB,KAAK42C,kBAAwC,IAApB52C,KAAK62C,WAI/B72C,KAAK42C,kBAAmB,EAHxBv4C,WAAS,aAAc2B,MAAMg7C,YAAYP,EAASz6C,KAAK62C,YAK3DvhC,WAAS,WAAYtV,KAAK+5C,aAAe/5C,KAAK+5C,aAAehB,EAAM/4C,MAGnE8B,EAAOjF,UAAmB,UAAEE,KAAKiD,KAAMtC,GAEnCsC,KAAU,QAAMA,KAAKtJ,OAAOk8B,aAAa/nB,cAAc,cAAcA,cAAc,gBACxD,QAArB7K,KAAKi5C,aAA8C,WAArBj5C,KAAKi5C,cACjCj5C,KAAKywC,cAAgBzwC,KAAKi1B,WAC1Bj1B,KAAKo5C,gBAEAp5C,KAAK/E,aAAe+E,KAAK/E,aAAe,IAC7C+E,KAAU,OAAI,EACdA,KAAKtJ,OAAO62B,QAAS,IAIjCvtB,KAAKm5C,mBACLr3C,EAAOjF,UAAoB,WAAEE,KAAKiD,QAG1C02C,EAA2B75C,UAAU0N,oBAAsB,WACnDvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,aAAczK,KAAKy3C,aACnCz3C,KAAKtJ,OAAO+T,IAAI,gBAAiBzK,KAAK2X,IACtC3X,KAAKtJ,OAAO+T,IAAI,qBAAsBzK,KAAKg4C,oBAC3Ch4C,KAAKtJ,OAAO+T,IAAI,YAAazK,KAAK83C,gBAClC93C,KAAKtJ,OAAO+T,IAAI,cAAezK,KAAK+3C,kBACpC/3C,KAAKtJ,OAAO+T,IAAI0sC,GAA0Bn3C,KAAKo3C,oBAC/Cp3C,KAAKtJ,OAAO+T,IAAI4sC,GAAsBr3C,KAAK0G,eAC3C1G,KAAKtJ,OAAO+T,IAAI,mCAAoCzK,KAAKyF,WACzDzF,KAAKtJ,OAAO+T,IAAI,kCAAmCzK,KAAK0F,UACxD1F,KAAKtJ,OAAO+T,IAAI,8BAA+BzK,KAAKk4C,oBACpDl4C,KAAKtJ,OAAO+T,IAAI,aAAczK,KAAKm4C,kBACnCn4C,KAAKtJ,OAAO+T,IAAI,mBAAoBzK,KAAKo4C,SACzCp4C,KAAKtJ,OAAO+T,IAAI,6BAA8BzK,KAAKq4C,YACnDr4C,KAAKtJ,OAAO+T,IAAI,6BAA8BzK,KAAKs4C,4BAEhD5B,GACTuE,0BAEEvC,GAA0C,SAAU52C,GAEpD,SAAS42C,IACL,IAAItxC,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAM/B,KAAMuB,YAAcvB,KAKhE,OAJAoH,EAAM8zC,YAAa,EACnB9zC,EAAM+zC,OAAS,EACf/zC,EAAMg0C,QAAU,EAChBh0C,EAAMi0C,MAAQ,EACPj0C,EA8CX,OArDA3G,GAAUi4C,EAA0B52C,GASpC42C,EAAyB77C,UAAU86C,SAAW,SAAU2D,GACpDhmC,WAAS,gBAAiBjX,WAAS,UAAW2B,MAAMoN,UAAUmyB,wBAAyBv/B,MACvF0jB,eAAahX,IAAIrO,WAAS,UAAW2B,MAAMoN,UAAW,SAAUpN,KAAKu7C,sBAAsBD,GAAWt7C,OAE1G04C,EAAyB77C,UAAUwmC,MAAQ,WACvCrjC,KAAKo7C,QAAU,MAEnB1C,EAAyB77C,UAAU0+C,sBAAwB,SAAUD,GACjE,IAAIl0C,EAAQpH,KACRw7C,EAAU,EACVC,EAAW,EACf,OAAO,SAAU/9C,GACb,IAAIi3B,EAAYj3B,EAAE0D,OAAOuzB,UACrBiL,EAAaliC,EAAE0D,OAAOw+B,WACtB1kB,EAAYsgC,EAAU7mB,EAAY,OAAS,KAC/CzZ,EAAYugC,IAAa7b,EAAa1kB,EAAYugC,EAAW7b,EAAa,QAAU,OACpF4b,EAAU7mB,EACV8mB,EAAW7b,EACX,IAAIrhB,EAAUlgB,WAAS,eAAgB+I,GAAO8T,GAC1CwgC,EAAQ,EACZt0C,EAAM+zC,OAASxmB,EACM,MAAjBvtB,EAAMg0C,UACNM,EAAQt0C,EAAM+zC,OAAS/zC,EAAMg0C,SAEjCh0C,EAAMg0C,QAAUh0C,EAAM+zC,OAClB/zC,EAAMi0C,OACNM,aAAav0C,EAAMi0C,OAEvBj0C,EAAMi0C,MAAQO,WAAWx0C,EAAMi8B,MAAO,IAOjCqY,EAAQ,KAAOA,GAAS,MAASh+C,GAAKA,EAAEm+C,iBACzCn+C,EAAEo+C,aAAc,EAChBp+C,EAAEm+C,kBAENP,GAAWpgC,UAAWA,EAAW6gC,QAAS30C,EAAM8zC,WAC5C7B,SAAU96B,EAASg7B,QAAU/c,IAAK7H,EAAWqL,KAAMJ,GACnD6W,aAAcva,SAASkY,kBAG5BsE,GACTsD,wBC9aEv7C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBrI,OAAOwI,iBAChBC,wBAA2BpE,OAAS,SAAUiE,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIjD,KAAKiD,EAAOA,EAAE9D,eAAea,KAAIgD,EAAEhD,GAAKiD,EAAEjD,MACpDgD,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE9D,UAAkB,OAAN+D,EAAavI,OAAO4I,OAAOL,IAAMG,EAAGlE,UAAY+D,EAAE/D,UAAW,IAAIkE,IAV3C,GAyBxCk7C,GAA+B,WAM/B,SAASA,EAAcvlD,GACnBsJ,KAAKk8C,gBAAkB,EACvBl8C,KAAKm8C,cAAgB,EACrBn8C,KAAKtJ,OAASA,EACd+L,OAAKC,OAAO05C,IACZp8C,KAAKiK,mBAmHT,OAjHAgyC,EAAcp/C,UAAUw/C,iBAAmB,SAAUt5C,GACjDA,EAAKtE,KAAOuB,KAAKijC,YAQrBgZ,EAAcp/C,UAAU+F,cAAgB,WACpC,MAAO,iBAMXq5C,EAAcp/C,UAAUoN,iBAAmB,WACvCjK,KAAKtJ,OAAOwT,GAAGwrB,EAAiC11B,KAAKs8C,4BAA6Bt8C,MAClFA,KAAKtJ,OAAOwT,GAAGuR,EAAsBzb,KAAKu8C,kBAAmBv8C,OAMjEi8C,EAAcp/C,UAAU0N,oBAAsB,WACtCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAIirB,EAAiC11B,KAAKs8C,6BACtDt8C,KAAKtJ,OAAO+T,IAAIgR,EAAsBzb,KAAKu8C,qBAE/CN,EAAcp/C,UAAUy/C,4BAA8B,SAAU39C,GAC5DqB,KAAKtJ,OAAOiB,KAAKsa,OAAOklC,IAA4BP,kBAAkB,IACtE52C,KAAKw8C,kBAAoB79C,EAAIjG,OAC7BiG,EAAIjG,OAAOS,SAA0B,aAAfwF,EAAIrD,OAC1B,IAAIusC,GACA10B,OAAQnT,KAAKtJ,OAAO8G,SACpBmB,IAAKA,EAAIA,IACTrD,OAAQqD,EAAIrD,OACZ5C,OAAQiG,EAAIjG,OACZyV,MAAOnO,KAAKtJ,OAAO8G,SAASjG,QAEhCyI,KAAKtJ,OAAOiB,KAAK4qB,iBACjB,IAAI1iB,EAAcxB,WAAS,gBAAiB2B,KAAKtJ,QAAU,cAAgB,UAC3E2H,WAAS,oBAAqB2B,KAAKtJ,QAAQ8e,mBAAmBqyB,GAAOhoC,YAAaA,KAEtFo8C,EAAcp/C,UAAU0/C,kBAAoB,SAAUnU,GAClD,IAAIhhC,EAAQpH,KACRvG,EAAK,IAAI7C,cAAYwxC,EAAej1B,QACpCha,EAAW,IAAI0I,YAAU,WAAY,WAAY,MAAM6mC,GAAG,WAAY,gBAAY1rB,GAClFrkB,EAAUc,EAAGqc,cAAa,IAAIxB,SAAQI,MAAMvb,IAC5C8pC,EAAatqC,EAAQ8E,OAAO,SAAUC,GACtC,OAAOjF,EAAgB2O,EAAM1Q,OAAQgH,EAAG/E,KAE5CqH,KAAKijC,WAAaA,EAClBjjC,KAAKtJ,OAAOiB,KAAKsa,OAAO8wB,IAAuBtkC,KAAMwkC,IACrD,IAAIwZ,GAAWxnB,YAAa,EAAGka,UAAW,EAAGhhC,MAAOi6B,EAAej6B,OACnEnO,KAAKtJ,OAAOiB,KAAKsa,OAAOolC,GAAsBoF,GAC9C,IAAIxnB,EAAawnB,EAAOxnB,WACpBka,EAAWsN,EAAOtN,SAEtB,GADA/G,EAAej6B,MAAQ80B,EAAW1rC,QACd,IAAhB09B,IAAmC,IAAdka,EAAiB,CACtC,IAAI96B,EAAQ,IAAIC,QACZi0B,EAAOvoC,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,SAErCF,EAAOC,GADGvoC,KAAKtJ,OAAOiB,KAAKgZ,aAAawI,YACf,GAC7B9E,EAAQA,EAAMi0B,KAAKA,GAAMG,KAAKF,GAC9B9uC,EAAG9C,WAAW8E,KAAOwnC,EACrBmF,EAAej1B,OAAS1Z,EAAGqc,aAAazB,OAEvC,CACD,IAAIxU,EAAcuoC,EAAetuB,WAAWja,YAS5C,IARoB,cAAhBA,GAAgD,YAAhBA,GAA6BG,KAAKtJ,OAAOma,mBAAqBs+B,EAAWlM,EAAW1rC,UACpH09B,EAAa,EACbka,EAAWnvC,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,SAAW,EACpDxoC,KAAKtJ,OAAOiB,KAAKi7B,aAAa6B,kBAAkBE,UAAY,EAC5D30B,KAAKtJ,OAAOiB,KAAKsa,OAAOklC,IAA4BG,QAAQ,MAI3D5/C,oBAAkBsI,KAAKw8C,mBAAoB,CAC5C,IAAIE,EAAgB18C,KAAKtJ,OAAOmI,UAC5B89C,EAAS1Z,EAAWzkC,QAAQwB,KAAKw8C,mBACtBvZ,EAAW36B,MAAMq0C,EAAQA,EAASD,EAAcnlD,QAClDA,OAASmlD,EAAcnlD,QAAUolD,GAAU,GAGpD1nB,EADA0nB,GADAA,EAAS1Z,EAAW1rC,OAASmlD,EAAcnlD,QACzB,EAAIolD,EAAS,EAE/BxN,EAAWlM,EAAW1rC,QAEjB8G,WAAS,gBAAiB2B,KAAKtJ,UACpCu+B,EAAa,EACbka,EAAWnvC,KAAKtJ,OAAOiB,KAAKgZ,aAAa63B,SAAW,EACpDxoC,KAAKtJ,OAAOiB,KAAKsa,OAAOklC,IAA4BG,QAAQ,KAEhEt3C,KAAKw8C,kBAAoB,KAG7BpU,EAAej1B,OAAS8vB,EAAW36B,MAAM2sB,EAAYka,GACrDnvC,KAAKk8C,eAAiBjnB,EACtBj1B,KAAKm8C,aAAehN,EAExBnvC,KAAKtJ,OAAOub,OAAO,eAAgBm2B,IAQvC6T,EAAcp/C,UAAU+M,QAAU,WAC9B5J,KAAKuK,uBAEF0xC,KAGPG,GAA6B,SAAUt6C,GAEvC,SAASs6C,EAAY1lD,EAAQigD,GACzB,IAAIvvC,EAAQtF,EAAO/E,KAAKiD,KAAMtJ,EAAQigD,IAAY32C,KAGlD,OAFA3B,WAAS,SAAU+I,GAAOqD,IAAI,eAAgBpM,WAAS,sBAAuB+I,GAAQA,GACtF/I,WAAS,SAAU+I,GAAO8C,GAAG,eAAgB9C,EAAMw1C,qBAAsBx1C,GAClEA,EA0BX,OA/BA3G,GAAU27C,EAAat6C,GAOvBs6C,EAAYv/C,UAAU+F,cAAgB,WAClC,MAAO,qBAEXw5C,EAAYv/C,UAAU+/C,qBAAuB,WACzCv+C,WAAS,SAAU2B,MAAM6C,KAAK,aAAc,kBAAmB,kBAC/D,IAAIg6C,EAAWx+C,WAAS,UAAW2B,MAAM88C,WAAW,mBACpDz+C,WAAS,cAAew+C,GACnB96C,MAAM86C,GAAWE,aAAWC,QAAS,IAAItG,GAA2Br4C,WAAS,SAAU2B,MAAO3B,WAAS,UAAW2B,SAEvHA,KAAKi9C,kBAETb,EAAYv/C,UAAUogD,eAAiB,WACnC,IAAIC,EAAa7+C,WAAS,SAAU2B,MAChCmnB,EAAY+1B,EAAWtoB,eACtBl9B,oBAAkBwlD,EAAWn3B,SAA0C,iBAAvBm3B,EAAiB,SAAsD,IAApCA,EAAWn3B,OAAOvnB,QAAQ,OAC9G0+C,EAAWlqC,QAAQxY,MAAMurB,OAASm3B,EAAWn3B,QAEjD,IAGIA,EAAqB,MAHXm3B,EAAWn3B,OAAOne,WAAWpJ,QAAQ,KAAO,EAAI0+C,EAAWn3B,OACrEm3B,EAAWlqC,QAAQusB,wBAAwBxZ,QAClBoB,GAEzBohB,EAAO2U,EAAWvsC,aAAa63B,SACnC0U,EAAWx/B,eAAgB/M,cAAgB63B,SAAUD,EAAOxiB,EAASA,EAASwiB,KAAU,IAErF6T,GACTe,iBCnLEC,GAAwB,WAMxB,SAASA,EAAO1mD,GACZ+L,OAAKC,OAAO26C,UACZr9C,KAAKtJ,OAASA,EACdsJ,KAAKiK,mBAuET,OArEAmzC,EAAOvgD,UAAUoN,iBAAmB,WAChCjK,KAAKtJ,OAAOwT,GAAG,oBAAqBlK,KAAKy1C,kBAAmBz1C,MAC5DA,KAAKtJ,OAAOwT,GAAG,eAAgBlK,KAAKq1C,aAAcr1C,MAClDA,KAAKtJ,OAAOiB,KAAKuS,GAAG,WAAYlK,KAAKs9C,gBAAiBt9C,OAE1Do9C,EAAOvgD,UAAU0N,oBAAsB,WAC/BvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,oBAAqBzK,KAAKy1C,mBAC1Cz1C,KAAKtJ,OAAO+T,IAAI,eAAgBzK,KAAKq1C,cACrCr1C,KAAKtJ,OAAOiB,KAAK8S,IAAI,WAAYzK,KAAKs9C,mBAE1CF,EAAOvgD,UAAU44C,kBAAoB,SAAU1yC,GAC3C,IAEI+E,EAFAmuB,EAAcj2B,KAAKtJ,OAAOsY,qBAC1BuuC,EAAav9C,KAAKtJ,OAAOmI,UAQzBiJ,EANC/E,EAAKuyB,WAAW/9B,OAMVwL,EAAKuyB,WALLW,EAAYx4B,OAAO,SAAUC,GAChC,OAAOA,EAAEmN,cAAc,kBAAoB9H,EAAKrK,OAAOwB,MAAQ,SAAW6I,EAAKrK,OAAOyB,MAAQ,MAMtG,IAAK,IAAI9C,EAAI,EAAGA,EAAIyQ,EAAKvQ,OAAQF,IAAK,CAClC,IAAImmD,EAAQx9C,KAAKtJ,OAAOiB,KAAKuf,oBAAoBpP,EAAKzQ,GAAG6U,aAAa,aAAazN,KACnFqJ,EAAKzQ,GAAGmD,MAAMG,QAAUoI,EAAKzH,OAC7B,IAAImiD,EAAgC,SAAhB16C,EAAKzH,OAAoB,8CACvC,4CACN,GAAIiiD,EAAWz1C,EAAKzQ,GAAGqS,UAAUmB,cAAc4yC,GAAgB,CAE3D,IAAK,IADD7mB,KACKE,EAAM,EAAGA,EAAMb,EAAY1+B,OAAQu/B,IACpCb,EAAYa,GAAKjsB,cAAc,kBAAoB2yC,EAAMtjD,MAAQ,SAAWsjD,EAAMrjD,MAAQ,KAC1Fy8B,EAAKp+B,KAAKy9B,EAAYa,IAG1BF,EAAKr/B,QACLyI,KAAKy1C,mBAAoBngB,WAAYsB,EAAMt7B,OAAQyH,EAAKzH,YAKxE8hD,EAAOvgD,UAAUygD,gBAAkB,SAAU5/C,GACrCkN,eAAalN,EAAE0D,OAAQ,cACvBpB,KAAKtJ,OAAOiB,KAAKkE,aAAa+xB,qBAAyD,SAAlC5tB,KAAKtJ,OAAOmF,aAAaC,MAC9EkE,KAAKtJ,OAAOiB,KAAKoE,WAAW20B,UAAU9lB,eAAalN,EAAE0D,OAAQ,WAGrEg8C,EAAOvgD,UAAUw4C,aAAe,WACPr1C,KAAKtJ,OAAOkJ,aAAanC,OAAO,SAAUC,GAC3D,OAAOA,EAAElG,eAEMD,QAAUyI,KAAKtJ,OAAOgnD,cAAgB19C,KAAKtJ,OAAOuC,eACjEgX,YAAUjQ,KAAKtJ,OAAOsc,QAAQiE,uBAAuB,UAAU,IAAK,qBAG5EmmC,EAAOvgD,UAAU+M,QAAU,WACvB5J,KAAKuK,uBAQT6yC,EAAOvgD,UAAU+F,cAAgB,WAC7B,MAAO,UAEJw6C,KClFPO,GAA+B,WAM/B,SAASA,EAAcjnD,GACnB+L,OAAKC,OAAOk7C,iBACZ59C,KAAKtJ,OAASA,EA8BlB,OArBAinD,EAAc9gD,UAAUo0B,kBAAoB,SAAU4sB,EAAGC,GACrD,OAAO99C,KAAKtJ,OAAOiB,KAAKy5B,oBAAoBH,kBAAkB4sB,EAAGC,IAQrEH,EAAc9gD,UAAU+M,QAAU,aASlC+zC,EAAc9gD,UAAU+F,cAAgB,WACpC,MAAO,iBAEJ+6C,KCjCPI,GAAgC,WAMhC,SAASA,EAAernD,GACpBsJ,KAAKtJ,OAASA,EACd+L,OAAKC,OAAOs7C,kBACZh+C,KAAKiK,mBAmST,OA3RA8zC,EAAelhD,UAAU+F,cAAgB,WACrC,MAAO,kBAMXm7C,EAAelhD,UAAUoN,iBAAmB,WACxCjK,KAAKtJ,OAAOwT,GAAGuR,EAAsBzb,KAAKi+C,mBAAoBj+C,MAC9DA,KAAKtJ,OAAOwT,GAAG,yBAA0BlK,KAAKk+C,qBAAsBl+C,MACpEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,kBAAmBlK,KAAKm+C,sBAAuBn+C,MACnEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,wBAAyBlK,KAAKo+C,oBAAqBp+C,MACvEA,KAAKtJ,OAAOiB,KAAKuS,GAAG,uBAAwBlK,KAAKq+C,WAAYr+C,MAC7DA,KAAKtJ,OAAOiB,KAAKuS,GAAG,gBAAiBlK,KAAK6vC,aAAc7vC,OAM5D+9C,EAAelhD,UAAU0N,oBAAsB,WACvCvK,KAAKtJ,OAAO8T,cAGhBxK,KAAKtJ,OAAO+T,IAAI,yBAA0BzK,KAAKk+C,sBAC/Cl+C,KAAKtJ,OAAOiB,KAAK8S,IAAI,kBAAmBzK,KAAKm+C,uBAC7Cn+C,KAAKtJ,OAAOiB,KAAK8S,IAAI,wBAAyBzK,KAAKo+C,qBACnDp+C,KAAKtJ,OAAO+T,IAAIgR,EAAsBzb,KAAKi+C,oBAC3Cj+C,KAAKtJ,OAAOiB,KAAK8S,IAAI,uBAAwBzK,KAAKq+C,YAClDr+C,KAAKtJ,OAAOiB,KAAK8S,IAAI,gBAAiBzK,KAAK6vC,gBAU/CkO,EAAelhD,UAAUqhD,qBAAuB,SAAUn7C,GAWtD,IAAK,IAVDiuC,EAAahxC,KAAKtJ,OAAOiB,KAAKogB,gBAG9BumC,EAAiBt+C,KAAKtJ,OAAOiB,KAAKm6C,qBAA4B,eAC9DyM,EAAc,IAAIC,cAAYF,EAAgB,KAAMt+C,KAAKtJ,OAAOiB,MAChEmQ,EAAO9H,KAAKtJ,OAAOmI,UACnBuxB,EAAWrtB,EAAK7I,QAAU4N,EAAKvQ,OAAS,EAAI,QAAU,SACtD67B,EAAOpzB,KAAKtJ,OAAOiB,KAAKiI,aACxB6+C,EAAkBz+C,KAAKtJ,OAAOiB,KAAKm6C,qBAAiC,aAAE/uC,EAAK8G,UAAW9G,GACtF27C,KACKrnD,EAAI,EAAGA,EAAIonD,EAAgBlnD,OAAQF,IACxCqnD,EAAiBlmD,KAAK+lD,EAAYl5B,OAAOo5B,EAAgBpnD,GAAI+7B,IAEjE4d,EAAW7zC,OAAO4E,MAAMivC,GAAajuC,EAAK7I,MAAQ,EAAG,GAAGX,OAAOklD,IAC/D,IAASpnD,EAAI,EAAGA,EAAIqnD,EAAiBnnD,OAAQF,IACxB,UAAb+4B,EACAtoB,EAAK/E,EAAK7I,MAAQ7C,GAAG+4B,GAAUsuB,EAAiBrnD,IAGhDyQ,EAAK/E,EAAK7I,MAAQ7C,EAAI,GAAG+4B,GAAUsuB,EAAiBrnD,IAExDyQ,EAAK3K,OAAO4F,EAAK7I,MAAQ,EAAI7C,EAAG,EAAGqnD,EAAiBrnD,IAExDo6C,gBAAczxC,KAAKtJ,OAAOiB,KAAMqI,KAAKtJ,OAAOiB,KAAKogB,gBAAiB/X,KAAKtJ,OAAOiB,KAAKkH,UAAW,IAOlGk/C,EAAelhD,UAAUgzC,aAAe,WACpC,GAAI7vC,KAAKtJ,OAAOqwB,uBAAuByqB,cAAgB95C,oBAAkBsI,KAAKtJ,OAAOqF,YAAa,CAE9FiE,KAAKtJ,OAAOqF,WAAsB,YAAEiE,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOmI,UAAWmB,KAAKtJ,OAAOyF,yBAChG6D,KAAKtJ,OAAOuI,oBACZe,KAAKtJ,OAAOqF,WAAsB,YAAEiE,KAAKtJ,OAAOiB,KAAKhB,WAAYqJ,KAAKtJ,OAAOsY,qBAAsBhP,KAAKtJ,OAAOyF,2BAa3H4hD,EAAelhD,UAAUohD,mBAAqB,SAAU7V,GACpD,IAAI3uC,EAAK,IAAI7C,cAAYwxC,EAAej1B,QACpCha,EAAW,IAAI0I,YAAU,WAAY,WAAY,MAAM6mC,GAAG,WAAY,gBAAY1rB,GAClFimB,EAAaxpC,EAAGqc,cAAa,IAAIxB,SAAQI,MAAMvb,IAC/C2gB,EAAazb,WAAS,aAAc+pC,EAAetuB,YAGnD7gB,IAFUoF,WAAS,UAAW2B,KAAKtJ,OAAOiB,KAAKm6C,sBAC7B/sB,KAAK,SAAU9qB,GAAS,OAAOA,IAAU6f,EAAWja,iBACrCG,KAAKtJ,OAAOuC,cAGjD,GAFA+G,KAAKijC,WAAaA,EAClBmF,EAAej6B,MAAQ80B,EAAW1rC,OAC9B8G,WAAS,aAAc+pC,EAAetuB,YACtCsuB,EAAej1B,OAAS8vB,MAEvB,CACD,IAAI5uB,EAAQ,IAAIC,QACZi9B,EAAUvxC,KAAKtJ,OAAOqwB,uBAAuByqB,YAC7CD,GAAWvxC,KAAKtJ,OAAOqwB,uBAAuB43B,cAAgB3+C,KAAKtJ,OAAOqwB,uBAAuB63B,YACjG5+C,KAAKtJ,OAAOqwB,uBAAuB43B,cAAgB3+C,KAAKtJ,OAAOqwB,uBAAuB63B,WAE1F,IAAIrW,EAAOtvC,EACP+G,KAAKtJ,OAAOia,aAAa63B,SAAWxoC,KAAKtJ,OAAOqwB,uBAAuB43B,cACvE3+C,KAAKtJ,OAAOia,aAAa63B,SACzBjqB,EAAUve,KAAKtJ,OAAOiB,KAAKgZ,aAAawI,YAC5C,GAAKzhB,oBAAkBoiB,GAkBnBzF,EAAQA,EAAMgF,KAAKkF,EAASgqB,OAlBI,CAChC,IAAIiP,EAAYn5C,WAAS,YAAa2B,KAAKtJ,OAAOiB,KAAKm6C,sBACnD+M,EAAaxgD,WAAS,aAAc2B,KAAKtJ,OAAOiB,KAAKm6C,sBACzD,GAAKP,GAAsC,WAA3Bz3B,EAAWja,YAQvBwU,EAHKk9B,GAAsC,WAA3Bz3B,EAAWja,aACC,SAA3Bia,EAAWja,aAAgD,QAAtBia,EAAWxe,QACjD+Y,EAAQA,EAAMi0B,KAAKuW,IACLpW,KAAKzoC,KAAKtJ,OAAOqwB,uBAAuB43B,cAAgB3+C,KAAKtJ,OAAOia,aAAa63B,UAGvFn0B,EAAMgF,KAAKkF,EAASgqB,OAXqB,CACjD,IAAID,EAAOkP,EAAY19B,EAAWrb,KAAKlH,OAAS,EAC5CkxC,EAAO3uB,EAAWrb,KAAKlH,OAC3B8c,EAAQA,EAAMi0B,KAAKA,GAAMG,KAAKA,IActChvC,EAAG9C,WAAW8E,KAAOwnC,EAChBsO,GAAY75C,oBAAkBoiB,IAA0C,SAA3BA,EAAWja,aAAgD,QAAtBia,EAAWxe,OAI9F8sC,EAAej1B,OAAS1Z,EAAGqc,aAAazB,GAHxC+zB,EAAej1B,QAAU2G,EAAWrb,MAM5CuB,KAAKtJ,OAAOub,OAAO,eAAgBm2B,IAUvC2V,EAAelhD,UAAUuhD,oBAAsB,SAAUr7C,GACrD,IACI8uC,EAA0B7xC,KAAKtJ,OAAOiB,KAAKm6C,qBAAiC,wBAC5Ex5C,EAAOD,OAAOC,KAAKu5C,GACvB,GAA2B,WAAvB9uC,EAAKrF,EAAEmC,aAA4BkD,EAAKoQ,OAAO5b,OAAS,EACxD,IAAK,IAAIF,EAAI,EAAGA,EAAI0L,EAAKoQ,OAAO5b,OAAQF,IACpCw6C,EAAwBv5C,EAAKA,EAAKf,OAAS,IAAIiB,KAAKuK,EAAKoQ,OAAO9b,IAG7C,SAAvB0L,EAAKrF,EAAEmC,aAAyD,QAA/BxB,WAAS,SAAU0E,EAAKrF,IACV,UAA5CsC,KAAKtJ,OAAOmF,aAAaQ,iBAC5B0G,EAAKoQ,OAAO,GAAGhZ,OAAS,IAShC4jD,EAAelhD,UAAUshD,sBAAwB,SAAUp7C,GACvD,GAAyB,WAArBA,EAAKlD,YAA0B,CAC/B,IAAIiI,EAAO9H,KAAKtJ,OAAOiB,KAAKogB,gBACxB+mC,EAAU9+C,KAAKtJ,OAAOmI,UACtBJ,EAAOsE,EAAKtE,gBAAgB/B,MAAQqG,EAAKtE,MAAQsE,EAAKtE,MACtDsgD,EAAW/+C,KAAKtJ,OAAOiB,KAAK4D,0BAA0B,GAE1D,GADAyE,KAAKg/C,WAAWF,EAASh3C,EAAMrJ,EAAMsgD,GAAU,GAC3C/+C,KAAKtJ,OAAOuI,mBAAqB,EAAG,CACpC,IAAI0vC,EAAQ3uC,KAAKtJ,OAAOiB,KAAK25C,uBACzB2N,EAAWj/C,KAAKtJ,OAAOiB,KAAKy+B,iBAChCp2B,KAAKg/C,WAAWC,EAAUtQ,EAAOlwC,EAAMsgD,MAcnDhB,EAAelhD,UAAUmiD,WAAa,SAAUF,EAASh3C,EAAMrJ,EAAMsgD,EAAU5mB,GAgB3E,IAAK,IAfD/wB,EAAQpH,KAERpD,EAAU,SAAUvF,GACpByQ,EAAKrK,OAAO,SAAUC,EAAGxD,GACrB,GAAIwD,EAAEe,KAAKsgD,KAActgD,EAAKpH,GAAG0nD,GAAW,CACxC,GAAI5mB,EAAU,CACV,IAAI9e,EAAO7C,KAAKC,MAAMvc,EAAQ,GAAKkN,EAAM1Q,OAAOiB,KAAKgZ,aAAa63B,UAClEphC,EAAM1Q,OAAOiB,KAAKm6C,qBAAiD,6BAAEz4B,EAAMnf,GAE/E4N,EAAK3K,OAAOjD,EAAO,GACnBirB,SAAO25B,EAAQ5kD,IACf4kD,EAAQ3hD,OAAOjD,EAAO,OAIzB7C,EAAI,EAAGA,EAAIoH,EAAKlH,OAAQF,IAC7BuF,EAAQvF,IAMhB0mD,EAAelhD,UAAUwhD,WAAa,SAAU1N,GAC5C,IAKIuO,EAJAplC,EAAa62B,EAAU5tC,KAAKrF,EAC5BiB,EAAMgyC,EAAUhyC,IAChB2/C,EAAiBt+C,KAAKtJ,OAAOiB,KAAKm6C,qBAA4B,eAC9DyM,EAAc,IAAIC,cAAYF,EAAgB,KAAMt+C,KAAKtJ,OAAOiB,MAEhE6hB,EAAcxZ,KAAKtJ,OAAOyF,wBAC1BgjD,EAAcxO,EAAUyO,UAAYp/C,KAAKtJ,OAAOiB,KAAKy+B,iBACnDp2B,KAAKtJ,OAAOiB,KAAKo7B,cAEnBmsB,EADAvO,EAAU0O,cACFr/C,KAAKtJ,OAAOsc,QAAQnI,cAAc,2BAA2BA,cAAc,SAG1E7K,KAAKtJ,OAAOiB,KAAK2nD,eAAmE3O,EAAUyO,UACjGp/C,KAAKtJ,OAAOiB,KAAK4nD,2BAA2B10C,cAAc,SAC1D7K,KAAKtJ,OAAOiB,KAAK6nD,0BAA0B30C,cAAc,SAFpB7K,KAAKtJ,OAAOk8B,aAAa/nB,cAAc,SAIlF7K,KAAKtJ,OAAOsI,aACZkgD,EAAQvO,EAAU8O,cAAsE,QAAtDz/C,KAAKtJ,OAAOiB,KAAKm6C,qBAAqBjyC,cAChE8wC,EAAU8O,cAAsE,QAAtDz/C,KAAKtJ,OAAOiB,KAAKm6C,qBAAqBjyC,YACjEG,KAAKtJ,OAAOiB,KAAK2nD,eACd3O,EAAUyO,UAAYp/C,KAAKtJ,OAAOiB,KAAK+nD,0BAA0B70C,cAAc,SAC3E8lC,EAAU0O,cAAgBr/C,KAAKtJ,OAAOsc,QAAQnI,cAAc,0BAA0BA,cAAc,SAChG7K,KAAKtJ,OAAOiB,KAAKgoD,yBAAyB90C,cAAc,SAHjC7K,KAAKtJ,OAAOuV,mBAAmBpB,cAAc,SAGDq0C,GAKzF,IAAK,IAHD9uB,EAEAuhB,EAAc3xC,KAAKtJ,OAAOqF,WAAsB,YAC3C1E,EAAI,EAAGA,EAAIsH,EAAIpH,OAAQF,IAAK,CACjC,IAAIuoD,EAASrB,EAAYl5B,OAAO1mB,EAAItH,GAAI2I,KAAKtJ,OAAOiB,KAAKiI,cAC1B,SAA3Bka,EAAWja,aAAgD,QAAtBia,EAAWxe,QACW,IAAvD+C,WAAS,gBAAiB2B,KAAKtJ,OAAOqF,aAAkE,QAA5CiE,KAAKtJ,OAAOmF,aAAaQ,eACrC,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAA0E,UAA5C2D,KAAKtJ,OAAOmF,aAAaQ,gBAChF+zB,EAAW,QACXuhB,GAAev4C,EAAoBogB,EAAYm4B,EAAc,IAAIp6C,OACjB,UAA5CyI,KAAKtJ,OAAOmF,aAAaQ,iBACzBs1C,GAAe,GAEnBwN,EAAYxN,GAAavhB,GAAUwvB,IAEc,UAA5C5/C,KAAKtJ,OAAOmF,aAAaQ,iBAC9B+zB,EAAW,SACX+uB,EAAYn/C,KAAKtJ,OAAOqF,WAAsB,aAAGq0B,GAAUwvB,IAGd,WAA5C5/C,KAAKtJ,OAAOmF,aAAaQ,eAC9B6iD,EAAMzxC,YAAYmyC,GAGlBV,EAAMtyC,aAAagzC,EAAQV,EAAMzqB,mBAGL,WAA3B3a,EAAWja,aAChBq/C,EAAMzxC,YAAYmyC,GAG1BjP,EAAU3nC,QAAS,GAQvB+0C,EAAelhD,UAAU+M,QAAU,WAC/B5J,KAAKuK,uBAEFwzC,0BrCpTO,oCAIK,wHAYG,4IAcF,sCAID,uCAIC,sJAcA,2BAEC,wCAEY,qSAgCb,kDAIQ,qJAYG,wDAId,4CAIA,yBAEK"}